CREATE OR REPLACE TRIGGER AREA_LOAD_PROJECTION_UPDATE
	BEFORE INSERT OR UPDATE ON AREA_LOAD_PROJECTION
	FOR EACH ROW

DECLARE
v_PROJECTION_PERIOD CHAR(1);
v_STATUS NUMBER;
v_HISTORICAL_BEGIN_DATE DATE;
v_HISTORICAL_END_DATE DATE;
v_BEGIN_DATE DATE;
v_END_DATE DATE;

BEGIN

	SELECT UPPER(SUBSTR(PROJECTION_PERIOD,1,1))
	INTO v_PROJECTION_PERIOD
	FROM AREA
	WHERE AREA_ID = :new.AREA_ID;
	
	IF GA.VERSION_AREA_LOAD THEN 
		SELECT MIN(LOAD_DATE), MAX(LOAD_DATE)
		INTO v_BEGIN_DATE, v_END_DATE
		FROM AREA_LOAD A
		WHERE AREA_ID = :new.AREA_ID
			AND LOAD_CODE = 'A'
			AND LOAD_DATE BETWEEN LOW_DATE AND HIGH_DATE
			AND AS_OF_DATE = 
				(SELECT MAX(AS_OF_DATE)
				FROM AREA_LOAD
				WHERE AREA_ID = A.AREA_ID
					AND LOAD_CODE = A.LOAD_CODE
					AND LOAD_DATE = A.LOAD_DATE
					AND AS_OF_DATE <= SYSDATE); 
	ELSE
		SELECT MIN(LOAD_DATE), MAX(LOAD_DATE)
		INTO v_BEGIN_DATE, v_END_DATE
		FROM AREA_LOAD A
		WHERE AREA_ID = :new.AREA_ID
			AND LOAD_CODE = 'A'
			AND LOAD_DATE BETWEEN LOW_DATE AND HIGH_DATE
			AND AS_OF_DATE = LOW_DATE;
	END IF;
		
	:new.LOAD_DATE := TRUNC(:new.LOAD_DATE);
	v_BEGIN_DATE := TRUNC(FROM_CUT(v_BEGIN_DATE, LOCAL_TIME_ZONE));
	v_END_DATE := TRUNC(FROM_CUT(v_END_DATE - 0.00001, LOCAL_TIME_ZONE));
	
	FS.SIMILAR_DAY_TYPE(0, :new.LOAD_DATE, v_BEGIN_DATE, v_END_DATE, v_HISTORICAL_BEGIN_DATE, v_STATUS);

	IF v_PROJECTION_PERIOD = 'M' THEN
		v_HISTORICAL_BEGIN_DATE := TO_DATE(TO_CHAR(:new.LOAD_DATE, 'DD-MON-') || TO_CHAR(v_HISTORICAL_BEGIN_DATE, 'YYYY'), 'DD-MON-YYYY');
		v_HISTORICAL_END_DATE := LAST_DAY(v_HISTORICAL_BEGIN_DATE);
	ELSIF v_PROJECTION_PERIOD = 'W' THEN
		v_HISTORICAL_END_DATE := v_HISTORICAL_BEGIN_DATE + 6;
	ELSE
		v_HISTORICAL_END_DATE := v_HISTORICAL_BEGIN_DATE;
	END IF;

	UT.CUT_DAY_INTERVAL_RANGE(v_HISTORICAL_BEGIN_DATE, v_HISTORICAL_END_DATE, LOCAL_TIME_ZONE, :new.HISTORICAL_BEGIN_DATE, :new.HISTORICAL_END_DATE);
		
	IF GA.VERSION_AREA_LOAD THEN 
		SELECT MIN(LOAD_VAL), MAX(LOAD_VAL), AVG(LOAD_VAL), SUM(LOAD_VAL), COUNT(*)
		INTO  :new.HISTORICAL_MIN, :new.HISTORICAL_MAX, :new.HISTORICAL_AVG, :new.HISTORICAL_SUM, :new.HISTORICAL_CNT 
		FROM AREA_LOAD A
		WHERE AREA_ID = :new.AREA_ID
			AND LOAD_CODE = 'A'
			AND LOAD_DATE BETWEEN :new.HISTORICAL_BEGIN_DATE AND :new.HISTORICAL_END_DATE
			AND AS_OF_DATE = 
				(SELECT MAX(AS_OF_DATE)
				FROM AREA_LOAD
				WHERE AREA_ID = A.AREA_ID
					AND LOAD_CODE = A.LOAD_CODE
					AND LOAD_DATE = A.LOAD_DATE
					AND AS_OF_DATE <= SYSDATE); 
	ELSE
		SELECT MIN(LOAD_VAL), MAX(LOAD_VAL), AVG(LOAD_VAL), SUM(LOAD_VAL), COUNT(*)
		INTO  :new.HISTORICAL_MIN, :new.HISTORICAL_MAX, :new.HISTORICAL_AVG, :new.HISTORICAL_SUM, :new.HISTORICAL_CNT 
		FROM AREA_LOAD A
		WHERE AREA_ID = :new.AREA_ID
			AND LOAD_CODE = 'A'
			AND LOAD_DATE BETWEEN :new.HISTORICAL_BEGIN_DATE AND :new.HISTORICAL_END_DATE
			AND AS_OF_DATE = LOW_DATE;
	END IF;

	IF :new.HISTORICAL_CNT > 0 AND :new.HISTORICAL_SUM > 0 THEN
		:new.HISTORICAL_FACTOR := (:new.HISTORICAL_CNT * :new.LOAD_AVG) / :new.HISTORICAL_SUM;
	ELSE
		:new.HISTORICAL_FACTOR := 1.0;
	END IF;

	:new.ENTRY_DATE := SYSDATE;

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		NULL;
	WHEN OTHERS THEN
		RAISE;
END AREA_LOAD_PROJECTION_UPDATE;
/

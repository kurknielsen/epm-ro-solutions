CREATE OR REPLACE TRIGGER BILLING_STATEMENT_BEFORE
	BEFORE DELETE OR INSERT OR UPDATE ON BILLING_STATEMENT
	FOR EACH ROW

DECLARE
v_INVOICE_STATUS VARCHAR2(32);
BEGIN
	-- fail if the invoice is closed
    BEGIN
		IF INSERTING THEN
			SELECT INVOICE_STATUS INTO v_INVOICE_STATUS
			FROM INVOICE
			WHERE ENTITY_ID = :new.ENTITY_ID
				AND STATEMENT_TYPE = :new.STATEMENT_TYPE
				AND STATEMENT_STATE = :new.STATEMENT_STATE
				AND BEGIN_DATE <= :new.STATEMENT_DATE
				AND END_DATE >= :new.STATEMENT_DATE
				AND AS_OF_DATE = :new.AS_OF_DATE;
		ELSE
			SELECT INVOICE_STATUS INTO v_INVOICE_STATUS
			FROM INVOICE
			WHERE ENTITY_ID = :old.ENTITY_ID
				AND STATEMENT_TYPE = :old.STATEMENT_TYPE
				AND STATEMENT_STATE = :old.STATEMENT_STATE
				AND BEGIN_DATE <= :old.STATEMENT_DATE
				AND END_DATE >= :old.STATEMENT_DATE
				AND AS_OF_DATE = :old.AS_OF_DATE;
		END IF;
	EXCEPTION
		WHEN OTHERS THEN
        	v_INVOICE_STATUS := 'NONE'; -- errors probably indicate that the row didn't exist - so ignore
    END;
    
	IF UPPER(SUBSTR(v_INVOICE_STATUS,1,6)) = 'CLOSED' THEN
		-- invoice is closed, so cancel this operation with an exception
		ERRS.RAISE(MSGCODES.c_ERR_INVOICE_CLOSED);
	END IF;
END BILLING_STATEMENT_BEFORE;
/

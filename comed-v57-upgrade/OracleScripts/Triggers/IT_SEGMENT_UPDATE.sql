CREATE OR REPLACE TRIGGER IT_SEGMENT_UPDATE
  AFTER INSERT OR UPDATE ON IT_SEGMENT  
  FOR EACH ROW
BEGIN
	INSERT INTO RTO_WORK (WORK_ID, WORK_XID)
	VALUES (-9832, :new.TRANSACTION_ID);	  
END IT_SEGMENT_UPDATE;
/
CREATE OR REPLACE TRIGGER IT_SEGMENT_UPDATE_STMT
  AFTER INSERT OR UPDATE ON IT_SEGMENT  
DECLARE
v_POR_ID NUMBER;
v_POD_ID NUMBER;
BEGIN

	FOR v_TX IN (SELECT DISTINCT WORK_XID FROM RTO_WORK WHERE WORK_ID = -9832) LOOP
		SELECT MAX(POR_ID)
		INTO v_POR_ID
		FROM (SELECT POR_ID
				FROM IT_SEGMENT
				WHERE TRANSACTION_ID = v_TX.WORK_XID
				ORDER BY BEGIN_DATE, SEGMENT_ORDER, POR_ID)
		WHERE ROWNUM=1;
		
		SELECT MAX(POD_ID)
		INTO v_POD_ID
		FROM (SELECT POD_ID
				FROM IT_SEGMENT
				WHERE TRANSACTION_ID = v_TX.WORK_XID
				ORDER BY BEGIN_DATE, SEGMENT_ORDER DESC, POD_ID)
		WHERE ROWNUM=1;
		
		UPDATE INTERCHANGE_TRANSACTION
		SET POD_ID = NVL(v_POD_ID,POD_ID),
			POR_ID = NVL(v_POR_ID,POR_ID)
		WHERE TRANSACTION_ID = v_TX.WORK_XID;
	END LOOP;
	
EXCEPTION
	WHEN OTHERS THEN
		UT.PURGE_RTO_WORK(-9832);
		RAISE;
END IT_SEGMENT_UPDATE;
/

DECLARE

PROCEDURE PUT_STATEMENT_TYPE(
		p_STATEMENT_TYPE_NAME IN VARCHAR2,
        p_STATEMENT_DESCRIPTION IN VARCHAR2,
        p_STATEMENT_TYPE_ORDER IN NUMBER,
		p_EXTERNAL_IDENTIFIER IN VARCHAR2
		) IS
	v_STATEMENT_TYPE_ID NUMBER;

	BEGIN
		BEGIN
			SELECT STATEMENT_TYPE_ID INTO v_STATEMENT_TYPE_ID FROM STATEMENT_TYPE
			WHERE UPPER(STATEMENT_TYPE_ALIAS) = UPPER(TRIM(p_STATEMENT_DESCRIPTION));
			
			-- statement type exists; update
			UPDATE STATEMENT_TYPE SET STATEMENT_TYPE_NAME=p_STATEMENT_TYPE_NAME, STATEMENT_TYPE_ALIAS=p_STATEMENT_DESCRIPTION,
						STATEMENT_TYPE_DESC=p_STATEMENT_DESCRIPTION WHERE STATEMENT_TYPE_ID=v_STATEMENT_TYPE_ID;
		EXCEPTION
			WHEN OTHERS THEN
				-- new statement type; create
				IO.PUT_STATEMENT_TYPE(v_STATEMENT_TYPE_ID, p_STATEMENT_TYPE_NAME, p_STATEMENT_DESCRIPTION, p_STATEMENT_DESCRIPTION, 0, p_STATEMENT_TYPE_ORDER);
		END;
        

    EI.PUT_EXTERNAL_SYSTEM_IDENTIFIER(EC.ES_TDIE, EC.ED_STATEMENT_TYPE, v_STATEMENT_TYPE_ID, p_EXTERNAL_IDENTIFIER);
        
	END PUT_STATEMENT_TYPE;

BEGIN

    PUT_STATEMENT_TYPE('T&D IE Indicative','T&D IE Indicative',400, 'P');
    PUT_STATEMENT_TYPE('T&D IE Initial','T&D IE Initial',401, 'F');
    PUT_STATEMENT_TYPE('T&D IE Revision #1','T&D IE Revision #1',402, 'F(1)');
    PUT_STATEMENT_TYPE('T&D IE Revision #2','T&D IE Revision #2',403, 'F(2)');
    
    COMMIT;
END;
/

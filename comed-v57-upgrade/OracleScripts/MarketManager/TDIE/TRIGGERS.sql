--------------------------------------------------------------------------------
-- Triggers contained within the file:
--
-- TDIE_DUOS_INV_DEL_ROW
-- TDIE_DUOS_INV_DEL_STMT
-- TDIE_TUOS_INV_DEL_ROW
-- TDIE_TUOS_INV_DEL_STMT
-- TDIE_UOS_INV_DEL_ROW
-- TDIE_UOS_INV_DEL_STMT
--------------------------------------------------------------------------------

PROMPT CREATE OR REPLACE TRIGGER TDIE_DUOS_INV_DEL_ROW...
CREATE OR REPLACE TRIGGER TDIE_DUOS_INV_DEL_ROW
   AFTER DELETE ON TDIE_DUOS_INVOICE
   FOR EACH ROW
BEGIN

   IF :old.RETAIL_INVOICE_ID IS NOT NULL THEN
      INSERT INTO RTO_WORK (WORK_ID, WORK_XID) VALUES (-01212010, :old.RETAIL_INVOICE_ID);
   END IF;

EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_DUOS_INV_DEL_ROW;
/


PROMPT CREATE OR REPLACE TRIGGER TDIE_DUOS_INV_DEL_STMT...
CREATE OR REPLACE TRIGGER TDIE_DUOS_INV_DEL_STMT
   AFTER DELETE ON TDIE_DUOS_INVOICE
BEGIN
   
   DELETE FROM RETAIL_INVOICE RI
    WHERE EXISTS (SELECT NULL
                    FROM RTO_WORK RW
                   WHERE RW.WORK_ID  = -01212010
                     AND RW.WORK_XID = RI.RETAIL_INVOICE_ID);
   
   UT.PURGE_RTO_WORK(-01212010);
   
EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_DUOS_INV_DEL_STMT;
/

PROMPT CREATE OR REPLACE TRIGGER TDIE_DUOS_NI_INV_DEL_ROW...
CREATE OR REPLACE TRIGGER TDIE_DUOS_NI_INV_DEL_ROW
   AFTER DELETE ON TDIE_DUOS_NI_INVOICE
   FOR EACH ROW
BEGIN

   IF :old.RETAIL_INVOICE_ID IS NOT NULL THEN
      INSERT INTO RTO_WORK (WORK_ID, WORK_XID) VALUES (-01212010, :old.RETAIL_INVOICE_ID);
   END IF;

EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_DUOS_NI_INV_DEL_ROW;
/


PROMPT CREATE OR REPLACE TRIGGER TDIE_DUOS_NI_INV_DEL_STMT...
CREATE OR REPLACE TRIGGER TDIE_DUOS_NI_INV_DEL_STMT
   AFTER DELETE ON TDIE_DUOS_NI_INVOICE
BEGIN
   
   DELETE FROM RETAIL_INVOICE RI
    WHERE EXISTS (SELECT NULL
                    FROM RTO_WORK RW
                   WHERE RW.WORK_ID  = -01212010
                     AND RW.WORK_XID = RI.RETAIL_INVOICE_ID);
   
   UT.PURGE_RTO_WORK(-01212010);
   
EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_DUOS_NI_INV_DEL_STMT;
/

PROMPT CREATE OR REPLACE TRIGGER TDIE_TUOS_INV_DEL_ROW...
CREATE OR REPLACE TRIGGER TDIE_TUOS_INV_DEL_ROW
   AFTER DELETE ON TDIE_TUOS_INVOICE
   FOR EACH ROW
BEGIN

   IF :old.RETAIL_INVOICE_ID IS NOT NULL THEN
      INSERT INTO RTO_WORK (WORK_ID, WORK_XID) VALUES (-01212010, :old.RETAIL_INVOICE_ID);
   END IF;

EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_TUOS_INV_DEL_ROW;
/


PROMPT CREATE OR REPLACE TRIGGER TDIE_TUOS_INV_DEL_STMT...
CREATE OR REPLACE TRIGGER TDIE_TUOS_INV_DEL_STMT
   AFTER DELETE ON TDIE_TUOS_INVOICE
BEGIN
   
   DELETE FROM RETAIL_INVOICE RI
    WHERE EXISTS (SELECT NULL
                    FROM RTO_WORK RW
                   WHERE RW.WORK_ID  = -01212010
                     AND RW.WORK_XID = RI.RETAIL_INVOICE_ID);
   
   UT.PURGE_RTO_WORK(-01212010);
   
EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_TUOS_INV_DEL_STMT;
/


PROMPT CREATE OR REPLACE TRIGGER TDIE_UOS_INV_DEL_ROW...
CREATE OR REPLACE TRIGGER TDIE_UOS_INV_DEL_ROW
   AFTER DELETE ON TDIE_UOS_INVOICE
   FOR EACH ROW
BEGIN

   IF :old.RETAIL_INVOICE_ID IS NOT NULL THEN
      INSERT INTO RTO_WORK (WORK_ID, WORK_XID) VALUES (-01212010, :old.RETAIL_INVOICE_ID);
   END IF;

EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_UOS_INV_DEL_ROW;
/

PROMPT CREATE OR REPLACE TRIGGER TDIE_UOS_INV_DEL_STMT...
CREATE OR REPLACE TRIGGER TDIE_UOS_INV_DEL_STMT
   AFTER DELETE ON TDIE_UOS_INVOICE
BEGIN
   
   DELETE FROM RETAIL_INVOICE RI
    WHERE EXISTS (SELECT NULL
                    FROM RTO_WORK RW
                   WHERE RW.WORK_ID  = -01212010
                     AND RW.WORK_XID = RI.RETAIL_INVOICE_ID);
   
   UT.PURGE_RTO_WORK(-01212010);
   
EXCEPTION
   WHEN OTHERS THEN
      UT.PURGE_RTO_WORK(-01212010);
      RAISE;                
END TDIE_UOS_INV_DEL_STMT;
/



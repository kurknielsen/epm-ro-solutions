CREATE OR REPLACE PACKAGE MM_NYISO_UTIL IS
-- $Revision: 1.17 $

  -- AUTHOR  : VGODYN
  -- CREATED : 10/4/2005 3:18:14 PM
  -- PURPOSE : COMMON CODE FOR MM_NYISO

g_NYISO_SC_ID SC.SC_ID%TYPE;

g_DAYAHEAD  CONSTANT VARCHAR2(8) := 'DayAhead';
g_HOURAHEAD CONSTANT VARCHAR2(9) := 'HourAhead';
g_REALTIME  CONSTANT VARCHAR2(8) := 'RealTime';
g_VIRTUAL   CONSTANT VARCHAR2(8) := 'Virtual';
g_MKT_RESULT CONSTANT VARCHAR2(14) := 'Market Result';
g_REALTIMEINTEGRATED CONSTANT VARCHAR2(18) := 'RealTimeIntegrated';
g_XFER_CAP_DA CONSTANT VARCHAR(22) := 'DayAhead Transmission';
g_XFER_CAP_HA CONSTANT VARCHAR(22) := 'HourAhead Transmission';

g_LMP_PRICE_TYPE CONSTANT VARCHAR2(32) := 'Locational Marginal Price';
g_MLC_PRICE_TYPE CONSTANT VARCHAR2(32) := 'Marginal Loss Component';
g_MCC_PRICE_TYPE CONSTANT VARCHAR2(32) := 'Marginal Congestion Component';

g_DATE_FORMAT CONSTANT VARCHAR2(16) := 'YYYY-MM-DD';
g_DATE_TIME_FORMAT CONSTANT VARCHAR2(32) := 'yyyy-mm-dd"T"hh24:mi:ss';

g_NYISO_TIMEZONE CONSTANT CHAR(3) := 'EDT';
g_NYISO_MKT CONSTANT VARCHAR2(8) := 'NYISO';

TYPE STATEMENT_TYPE_ARRAY IS VARRAY(10) OF STATEMENT_TYPE.STATEMENT_TYPE_NAME%TYPE;
TYPE STATEMENT_TYPE_ID_ARRAY IS VARRAY(10) OF STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE;
g_STATEMENT_TYPE_ARRAY    STATEMENT_TYPE_ARRAY := STATEMENT_TYPE_ARRAY('Uninvoiced',
														               'Initial',
														               '4 Month',
														               '12 Month');
g_STATEMENT_TYPE_ID_ARRAY STATEMENT_TYPE_ID_ARRAY := STATEMENT_TYPE_ID_ARRAY(); --Initialized with package.

--TRAIT GROUP ID CONSTANTS
g_TG_UPPER_OPERATING_LIMIT CONSTANT NUMBER := 401;
g_TG_EMERGENCY_OPERATING_LIMIT CONSTANT NUMBER := 402;
g_TG_STARTUP_COST CONSTANT NUMBER := 403;
g_TG_BID_SCHEDULE_TYPE_ID CONSTANT NUMBER := 404;
g_TG_SELF_COMMITTED_MW_00 CONSTANT NUMBER := 405;
g_TG_SELF_COMMITTED_MW_15 CONSTANT NUMBER := 406;
g_TG_SELF_COMMITTED_MW_30 CONSTANT NUMBER := 407;
g_TG_SELF_COMMITTED_MW_45 CONSTANT NUMBER := 408;
g_TG_FIXED_MIN_GENERATION_MW CONSTANT NUMBER := 409;
g_TG_FIXED_MIN_GENERATION_COST CONSTANT NUMBER := 410;
g_TG_DISPATCH_MW CONSTANT NUMBER := 411;
g_TG_10_MIN_NON_SYNC_COST CONSTANT NUMBER := 412;
g_TG_10_MIN_SPINNING_COST CONSTANT NUMBER := 413;
g_TG_30_MIN_NON_SYNC_COST CONSTANT NUMBER := 414;
g_TG_30_MIN_SPINNING_COST CONSTANT NUMBER := 415;
g_TG_REGULATION_MW CONSTANT NUMBER := 416;
g_TG_REGULATION_COST CONSTANT NUMBER := 417;
g_TG_GENERATION_BID_ID CONSTANT NUMBER := 418;

g_TG_FORECAST_MW CONSTANT NUMBER := 419;
g_TG_FIXED_MW CONSTANT NUMBER := 420;
g_TG_PRICE_CAP_1 CONSTANT NUMBER := 421;
g_TG_PRICE_CAP_2 CONSTANT NUMBER := 422;
g_TG_PRICE_CAP_3 CONSTANT NUMBER := 423;
g_TG_INTERRUPTIBLE_TYPE CONSTANT NUMBER := 12895; --424;
g_TG_INTERRUPTIBLE_FIXED CONSTANT NUMBER := 425;
g_TG_INTERRUPTIBLE_CAPPED CONSTANT NUMBER := 426;
g_TG_LOAD_BID_ID CONSTANT NUMBER := 427;

g_TG_BID_ENERGY CONSTANT NUMBER := 428;
g_TG_SINK_PRICE_CAP CONSTANT NUMBER := 429;
g_TG_DECREMENTAL_VALUE CONSTANT NUMBER := 430;
g_TG_MINIMUM_RUNTIME CONSTANT NUMBER := 431;
g_TG_HAM_BID_PRICE CONSTANT NUMBER := 432;
g_TG_TRANSACTION_BID_ID CONSTANT NUMBER := 433;

g_TG_PRICE_CAP_PRICE_1 CONSTANT NUMBER := 12879;
g_TG_PRICE_CAP_PRICE_2 CONSTANT NUMBER := 12880;
g_TG_PRICE_CAP_PRICE_3 CONSTANT NUMBER := 12881;

g_NODE_TYPE_BUS CONSTANT VARCHAR(32) := 'Bus';
g_NODE_TYPE_AGG CONSTANT VARCHAR(32) := 'Aggregate';
g_NODE_TYPE_GEN CONSTANT VARCHAR(32) := 'Generator';
-----------------------------------------------------------
--Settlement--
g_NY_DSS_PRELIM CONSTANT VARCHAR2(16) := 'Prelim';
g_NY_DSS_HIST CONSTANT VARCHAR2(16) := 'Hist';
g_NY_DSS_ALL_REPORTS CONSTANT VARCHAR2(16) := 'All';
g_NY_DSS_RATES CONSTANT VARCHAR2(16) := 'NYISO Rates';
g_NY_DSS_TOTAL CONSTANT VARCHAR2(16) := 'NYISO Totals';
g_NY_DSS_RESIDUAL CONSTANT VARCHAR2(16) := 'NYISO Residuals';
g_NY_DSS_DAM_ENRG CONSTANT VARCHAR2(16) := 'DAM Energy';
g_NY_DSS_BAL_MKT CONSTANT VARCHAR2(16) := 'SCD BalMkt Enrg';



-- use with price cap groups g_TG_PRICE_CAP_*
g_TT_MW CONSTANT NUMBER := 1;
g_TT_COST CONSTANT NUMBER := 2;

-- Are we simply testing the queries?
g_TEST BOOLEAN := FALSE;

FUNCTION WHAT_VERSION RETURN VARCHAR2;

/*FUNCTION GET_COMMODITY_ID
	(
	p_MARKET_TYPE IN VARCHAR2
	) RETURN NUMBER;*/

FUNCTION GET_COMMODITY_ID
   (
   p_MARKET_TYPE IN VARCHAR2,
   p_IS_VIRTUAL IN BOOLEAN := FALSE
   ) RETURN NUMBER;

FUNCTION GET_PRICE_INTERVAL
	(
	p_MARKET_TYPE IN VARCHAR2
	) RETURN VARCHAR2;

PROCEDURE PUT_SCHEDULE_VALUE(p_TX_ID        IN NUMBER,
							 p_SCHED_DATE   IN DATE,
							 p_AMOUNT       NUMBER,
							 p_PRICE        NUMBER := NULL);

FUNCTION GET_NODE_TYPE(p_NODE_NAME VARCHAR2) RETURN VARCHAR2;

PROCEDURE PUT_MARKET_PRICE_VALUE
	(
	p_MARKET_PRICE_ID IN NUMBER,
	p_PRICE_DATE      IN DATE,
	p_PRICE_CODE      IN CHAR,
	p_PRICE           IN NUMBER,
	p_PRICE_BASIS     IN NUMBER,
	p_STATUS          OUT NUMBER,
	p_LOGGER		  IN OUT NOCOPY mm_logger_adapter
	);
	
FUNCTION GET_NYISO_CONTRACT_ID(p_ACCOUNT_NAME IN VARCHAR2) RETURN NUMBER;

END MM_NYISO_UTIL;
/
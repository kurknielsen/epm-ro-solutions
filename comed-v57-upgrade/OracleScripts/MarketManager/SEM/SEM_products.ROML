begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0001
    COMPONENT_NAME:"CCCAALOC
    COMPONENT_ALIAS:"CCCAALOC
    COMPONENT_DESC:"Currency Costs Reallocation - Capacity
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CCCAALOC
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:57:12
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0001
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:27:48
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0001
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:27:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0001
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:27:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0001
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:57:12
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0001
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CCCAALOC
            ENTRY_DATE:@FEB-19-2014 14:27:48
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0002
    COMPONENT_NAME:"CCENALOC
    COMPONENT_ALIAS:"CCENALOC
    COMPONENT_DESC:"Currency Costs Reallocation - Energy
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CCENALOC
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:36:46
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0002
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:26:48
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0002
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:26:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0002
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:26:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0002
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:36:46
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0002
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CCENALOC
            ENTRY_DATE:@FEB-19-2014 14:26:48
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0003
    COMPONENT_NAME:"CC_IUENPEX
    COMPONENT_ALIAS:"CC_IUENPEX
    COMPONENT_DESC:"Exchanged Unpaid Energy Invoice Allocation in respect of Interconnector units for Participant Account
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_IUENPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@AUG-05-2015 12:41:02
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0003
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0003
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0003
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0003
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0003
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_IUENPEX
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0004
    COMPONENT_NAME:"CC_IUGCPPEX
    COMPONENT_ALIAS:"CC_IUGCPPEX
    COMPONENT_DESC:"Exchanged Capacity Currency Cost for IUG
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_IUGCPPEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:42:11
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0004
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:12:32
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0004
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:12:32
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0004
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:12:32
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0004
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:41:31
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0004
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_IUGCPPEX
            ENTRY_DATE:@JUN-27-2012 07:20:03
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0005
    COMPONENT_NAME:"CC_IUGENPEX
    COMPONENT_ALIAS:"CC_IUGENPEX
    COMPONENT_DESC:"Exchanged Energy Currency Cost for IUG
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_IUGENPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:38:27
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0005
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:15:03
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0005
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:15:03
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0005
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:15:03
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0005
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:38:28
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0005
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_IUGENPEX
            ENTRY_DATE:@FEB-19-2014 14:15:03
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0006
    COMPONENT_NAME:"CC_PCPEX
    COMPONENT_ALIAS:"CC_PCPEX
    COMPONENT_DESC:"Exchanged Currency Cost for Capacity Market Participant for Capacity Period
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_PCPEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@FEB-24-2014 12:09:56
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0006
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-21-2014 15:50:47
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0006
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-21-2014 15:52:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0006
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0006
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-24-2014 12:09:38
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0007
    COMPONENT_NAME:"CC_PENEX
    COMPONENT_ALIAS:"CC_PENEX
    COMPONENT_DESC:"Exchanged Currency Cost for Energy Market Participant for Billing Period
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_PENEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@FEB-24-2014 12:10:14
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0007
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-18-2014 14:20:13
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0007
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:21:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0007
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0007
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date\n	AND BS.COMPONENT_ID = :component;\nEND\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-24-2014 12:10:14
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0008
    COMPONENT_NAME:"CC_UCPCEX
    COMPONENT_ALIAS:"CC_UCPCEX
    COMPONENT_DESC:"Supplier Exchanged Currency Cost for Capacity Market for Capacity Period
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_UCPCEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:42:44
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0008
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:45:48
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0008
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:22:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0008
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:22:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0008
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:42:44
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0008
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_UCPCEX
            ENTRY_DATE:@OCT-11-2012 09:33:28
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0009
    COMPONENT_NAME:"CC_UCPPEX
    COMPONENT_ALIAS:"CC_UCPPEX
    COMPONENT_DESC:"Generator Exchanged Currency Cost for Capacity Market for Capacity Period
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_UCPPEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:43:05
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0009
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-21-2014 15:41:56
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0009
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:23:13
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0009
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:23:13
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0009
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:43:05
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0009
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_UCPPEX
            ENTRY_DATE:@JUN-27-2012 07:20:03
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0010
    COMPONENT_NAME:"CC_UENCEX
    COMPONENT_ALIAS:"CC_UENCEX
    COMPONENT_DESC:"Energy Market Supplier Currency Cost Exchanged for  Intra-Zonal Trades
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_UENCEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:39:26
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0010
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:46:01
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0010
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:23:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0010
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:23:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0010
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:39:26
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0010
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_UENCEX
            ENTRY_DATE:@JUL-30-2012 13:20:54
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0011
    COMPONENT_NAME:"CC_UENPEX
    COMPONENT_ALIAS:"CC_UENPEX
    COMPONENT_DESC:"Energy Market Generator Currency Cost Exchanged for Intra-Zonal Trades
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CC_UENPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:40:08
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0011
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))\n\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:"
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-19-2014 14:26:10
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0011
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Currency Cost Amount}
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:26:10
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0011
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-19-2014 14:26:10
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0011
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Currency Cost Amount
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND\n\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:40:08
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0011
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"CC_UENPEX
            ENTRY_DATE:@JUN-22-2012 14:37:51
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0012
    COMPONENT_NAME:"INTEREST
    COMPONENT_ALIAS:"INTEREST
    COMPONENT_DESC:"INTEREST
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"INTEREST
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:"
    IS_DEFAULT_TEMPLATE:"
    KWH_MULTIPLIER:"
    ANCILLARY_SERVICE_ID:"
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@SEP-28-2007 15:18:53
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0012
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0012
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0013
    COMPONENT_NAME:"SEM Testing Tariff
    COMPONENT_ALIAS:"?
    COMPONENT_DESC:"?
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"Service
    RATE_STRUCTURE:"Block
    RATE_INTERVAL:"Hour
    IS_REBILL:#0
    IS_TAXED:#0
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"None
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"Euro
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"Block:TCHAREX
    COMPONENT_CATEGORY:"?
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"Either
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"Real-Time
    MARKET_PRICE_TYPE:"Locational Marginal Price
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"Actual
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"All
    CHARGE_WHEN:"Either
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"None
    ALTERNATE_PRICE_FUNCTION:"Min
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-27-2015 15:31:32
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#0
            BLOCK_MAX:#50
            RATE:#3.58
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#51
            BLOCK_MAX:#100
            RATE:#3.33
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#101
            BLOCK_MAX:#150
            RATE:#3.53
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#151
            BLOCK_MAX:#200
            RATE:#4.12
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#201
            BLOCK_MAX:#250
            RATE:#4.89
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#251
            BLOCK_MAX:#300
            RATE:#6.09
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#301
            BLOCK_MAX:#350
            RATE:#8.43
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            BLOCK_MIN:#351
            BLOCK_MAX:#10000
            RATE:#11.27
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#0
            BLOCK_MAX:#150
            RATE:#0
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#151
            BLOCK_MAX:#200
            RATE:#.27
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#201
            BLOCK_MAX:#250
            RATE:#.42
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#251
            BLOCK_MAX:#300
            RATE:#.67
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#301
            BLOCK_MAX:#350
            RATE:#1.08
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#351
            BLOCK_MAX:#400
            RATE:#1.72
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#401
            BLOCK_MAX:#450
            RATE:#2.75
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            BLOCK_MIN:#451
            BLOCK_MAX:#10000
            RATE:#4.39
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#0
            BLOCK_MAX:#150
            RATE:#0
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#151
            BLOCK_MAX:#200
            RATE:#.27
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#201
            BLOCK_MAX:#250
            RATE:#.43
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#251
            BLOCK_MAX:#300
            RATE:#.68
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#301
            BLOCK_MAX:#350
            RATE:#1.09
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#351
            BLOCK_MAX:#400
            RATE:#1.74
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#401
            BLOCK_MAX:#450
            RATE:#2.79
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0013
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:@DEC-31-2015 00:00:00
            BLOCK_MIN:#451
            BLOCK_MAX:#10000
            RATE:#4.46
            CHARGE_MIN:#0
            ENTRY_DATE:@MAR-27-2015 15:31:33
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0014
    COMPONENT_NAME:"UIAC-EX
    COMPONENT_ALIAS:"UIAC-EX
    COMPONENT_DESC:"Capacity Underpayment Allocation for Generator Unit
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAC-EX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:44:36
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0014
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:42:42
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0014
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:42:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0014
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:42:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0014
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:44:36
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0015
    COMPONENT_NAME:"UIAE-EX
    COMPONENT_ALIAS:"UIAE-EX
    COMPONENT_DESC:"Energy Underpayment Allocation for Generator Unit
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAE-EX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:43:32
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0015
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:03:43
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0015
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:34:10
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0015
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:34:10
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0015
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:43:32
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0016
    COMPONENT_NAME:"UIAIUC-EX
    COMPONENT_ALIAS:"UIAIUC-EX
    COMPONENT_DESC:"Capacity Underpayment Allocation for IRCU, IEU
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAIUC-EX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@FEB-18-2014 08:18:01
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0016
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:45:13
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0016
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:45:13
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0016
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:45:13
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0016
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-14-2014 10:45:13
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0017
    COMPONENT_NAME:"UIAIUE-EX
    COMPONENT_ALIAS:"UIAIUE-EX
    COMPONENT_DESC:"Energy Underpayment Allocation for IRCU, IEU
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAIUE-EX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@FEB-18-2014 08:18:24
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0017
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:34:14
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0017
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:34:14
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0017
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:34:14
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0017
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-14-2014 10:34:14
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0018
    COMPONENT_NAME:"UIAIUGC-EX
    COMPONENT_ALIAS:"UIAIUGC-EX
    COMPONENT_DESC:"Capacity Underpayment Allocation for IUG
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAIUGC-EX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:45:34
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0018
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:46:52
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0018
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:46:52
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0018
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:46:52
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0018
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = ADD_MONTHS(:statement_date, 1) - 1\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:45:34
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0019
    COMPONENT_NAME:"UIAIUGE-EX
    COMPONENT_ALIAS:"UIAIUGE-EX
    COMPONENT_DESC:"Energy Underpayment Allocation for IUG
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#1
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UIAIUGE-EX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@DEC-08-2015 13:45:03
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0019
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Run Type Identifier, Run Type ID
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(e2.external_identifier, e2.entity_id)\nFROM external_system_identifier e1, external_system_identifier e2\nWHERE e1.external_system_id = 1000\nAND e1.entity_domain_id = -740\nAND e1.identifier_type = 'Settlement Statements'\nAND e1.entity_id = :statement_type\nAND e2.external_system_id = 1000\nAND e2.entity_domain_id = -740\nAND e2.identifier_type = 'Settlement Statements'\nAND e2.external_identifier = TRIM(SUBSTR(e1.external_identifier, INSTR(e1.external_identifier, ' ')))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@FEB-14-2014 10:41:53
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0019
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"${Underpayment Allocation Amount}
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:41:53
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0019
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-14-2014 10:41:53
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0019
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Underpayment Allocation Amount
            BEGIN_DATE:@JAN-01-2000 00:00:00
            END_DATE:"
            FORMULA:"BEGIN\nSELECT SUM(CHARGE_AMOUNT)\nINTO ?\nFROM BILLING_STATEMENT BS\nWHERE BS.ENTITY_ID = :billing_entity\n	AND BS.STATEMENT_TYPE = ${Run Type ID} \n	AND BS.STATEMENT_STATE = 2 \n	AND BS.STATEMENT_DATE = :statement_date+6\n	AND BS.COMPONENT_ID = :component;\nEND
            IS_MULTICOLUMN:#0
            IS_PLSQL:#1
            COMMENTS:"Retrieve the "external" charge amount
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@DEC-08-2015 13:45:03
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0020
    COMPONENT_NAME:"VAT Monthly
    COMPONENT_ALIAS:"VAT Monthly
    COMPONENT_DESC:"VAT Monthly
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#0
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#99
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"VAT Monthly
    COMPONENT_CATEGORY:"?
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-07-2013 18:45:06
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"ChargeType,ComponentName,ComponentId,IsTaxed,PSEUnitType
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(A.ChargeType, A.ComponentName, A.ComponentId, A.IsTaxed, A.PSEUnitType)\nFROM (SELECT DISTINCT C.COMPONENT_NAME || X.SUFFIX AS ChargeType, \n		C.COMPONENT_NAME AS ComponentName, \n		C.COMPONENT_ID AS ComponentId,\n		X.IS_TAXED AS IsTaxed,\n                                          MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) PSEUnitType\n	FROM BILLING_STATEMENT BS, \n		 COMPONENT C,\n		 (SELECT A.SUFFIX, A.IS_TAXED\n		  FROM \n		  (\n			SELECT '_N' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n					WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'G'\n									OR (MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 \n						AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S'))	\n						\n			UNION\n			SELECT '_Z' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'G'\n			OR (MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S'))\n	 \n			UNION \n			 SELECT '_W' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n			\n			 UNION\n			 SELECT '_EU' AS SUFFIX, 0 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n\n			UNION\n			SELECT '_NEU' AS SUFFIX, 0 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n          	) A     \n		  WHERE EXISTS (SELECT 1 FROM SEM_SETTLEMENT_ENTITY\n			       WHERE SETTLEMENT_PSE_ID = :billing_entity\n			       AND MARKET_NAME IN ('CA','EN'))\n		 UNION \n		 SELECT  '' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n		 WHERE EXISTS (SELECT 1 FROM SEM_SETTLEMENT_ENTITY\n			      WHERE SETTLEMENT_PSE_ID = :billing_entity\n			      AND MARKET_NAME IN ('MO','FMO'))) X \n	WHERE BS.ENTITY_ID = :billing_entity\n		  AND BS.STATEMENT_TYPE = :statement_type\n		  AND BS.STATEMENT_STATE = 1\n		  AND BS.STATEMENT_DATE BETWEEN trunc(:begin_date - 1/86400) AND trunc(:end_date - 1/86400)\n		  AND BS.COMPONENT_ID = C.COMPONENT_ID\n		  AND C.IS_TAXED = 1\n	ORDER BY 1\n) A
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#1
            COMMENTS:"
            ROW_NUMBER:#2
            ENTRY_DATE:@MAR-07-2013 18:43:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"UsingCrossBorderVat
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION('1') \nFROM DUAL\nWHERE MM_SEM_UTIL.GET_USING_CROSS_BORDER_VAT_FMT(:statement_end_date, :billing_entity) = 1
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#0
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@SEP-01-2010 14:41:36
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeQty
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-31-2010 11:30:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"TaxRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-31-2010 11:30:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeAmt
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"PC.GET_CHARGE_AMOUNT(:billing_entity, :statement_type, trunc(:begin_date - 1/86400), trunc(:end_date - 1/86400), ComponentName)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-01-2010 17:22:46
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN IsTaxed = 0 THEN ChargeAmt * CrossBorderProportion ELSE ChargeAmt * CrossBorderProportion END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-02-2010 15:33:56
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CrossBorderProportion
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN (IsTaxed = 0 AND MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 AND PSEUnitType = 'S') OR (IsTaxed = 0 and PSEUnitType = 'G') \nTHEN (1 - Proportion) ELSE Proportion END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-02-2010 15:33:56
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Proportion,XBVTaxRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CROSS_BORDER_DATA(:statement_type, :statement_end_date, :billing_entity, ChargeType, ?, ?)
            IS_MULTICOLUMN:#1
            IS_PLSQL:#1
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAR-07-2013 18:45:06
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0020
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TaxRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN IsTaxed = 0 THEN 0 ELSE XBVTaxRate END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-01-2010 14:31:15
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0021
    COMPONENT_NAME:"VAT Weekly
    COMPONENT_ALIAS:"VAT Weekly
    COMPONENT_DESC:"VAT Weekly
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Week
    IS_REBILL:#0
    IS_TAXED:#0
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#99
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"VAT Weekly
    COMPONENT_CATEGORY:"?
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-07-2013 18:45:22
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"ChargeType,ComponentName,ComponentId,IsTaxed,PSEUnitType
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(A.ChargeType, A.ComponentName, A.ComponentId, A.IsTaxed, A.PSEUnitType)\nFROM (SELECT DISTINCT C.COMPONENT_NAME || X.SUFFIX AS ChargeType, \n		C.COMPONENT_NAME AS ComponentName, \n		C.COMPONENT_ID AS ComponentId,\n		X.IS_TAXED AS IsTaxed,\n                                          MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) PSEUnitType\n	FROM BILLING_STATEMENT BS, \n		 COMPONENT C,\n		 (SELECT A.SUFFIX, A.IS_TAXED\n		  FROM \n		  (\n			SELECT '_N' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n					WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'G'\n									OR (MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 \n						AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S'))	\n						\n			UNION\n			SELECT '_Z' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'G'\n			OR (MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S'))\n	 \n			UNION \n			 SELECT '_W' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n			\n			 UNION\n			 SELECT '_EU' AS SUFFIX, 0 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n\n			UNION\n			SELECT '_NEU' AS SUFFIX, 0 AS IS_TAXED FROM DUAL\n			WHERE EXISTS (SELECT 1 FROM DUAL WHERE MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 1 \n			AND MM_SEM_UTIL.GET_PSE_UNIT_TYPE(:billing_entity,0,:statement_end_date) = 'S')\n          	) A     \n		  WHERE EXISTS (SELECT 1 FROM SEM_SETTLEMENT_ENTITY\n			       WHERE SETTLEMENT_PSE_ID = :billing_entity\n			       AND MARKET_NAME IN ('CA','EN'))\n		 UNION \n		 SELECT  '' AS SUFFIX, 1 AS IS_TAXED FROM DUAL\n		 WHERE EXISTS (SELECT 1 FROM SEM_SETTLEMENT_ENTITY\n			      WHERE SETTLEMENT_PSE_ID = :billing_entity\n			      AND MARKET_NAME IN ('MO','FMO'))) X \n	WHERE BS.ENTITY_ID = :billing_entity\n		  AND BS.STATEMENT_TYPE = :statement_type\n		  AND BS.STATEMENT_STATE = 1\n		  AND BS.STATEMENT_DATE BETWEEN trunc(:begin_date - 1/86400) AND trunc(:end_date - 1/86400)\n		  AND BS.COMPONENT_ID = C.COMPONENT_ID\n		  AND C.IS_TAXED = 1\n	ORDER BY 1\n) A
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#1
            COMMENTS:"
            ROW_NUMBER:#2
            ENTRY_DATE:@MAR-07-2013 18:43:18
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"UsingCrossBorderVat
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION('1') \nFROM DUAL\nWHERE MM_SEM_UTIL.GET_USING_CROSS_BORDER_VAT_FMT(:statement_end_date, :billing_entity) = 1
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#0
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeQty
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"TaxRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeAmt
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"PC.GET_CHARGE_AMOUNT(:billing_entity, :statement_type, trunc(:begin_date - 1/86400), trunc(:end_date - 1/86400), ComponentName)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN IsTaxed = 0 THEN ChargeAmt * CrossBorderProportion ELSE ChargeAmt * CrossBorderProportion END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CrossBorderProportion
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN (IsTaxed = 0 AND MM_SEM_UTIL.AFTER_SEM_2_2_CUT_OVER(:statement_date) = 0 AND PSEUnitType = 'S') OR (IsTaxed = 0 and PSEUnitType = 'G') \nTHEN (1 - Proportion) ELSE Proportion END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Proportion,XBVTaxRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CROSS_BORDER_DATA(:statement_type, :statement_end_date, :billing_entity, ChargeType, ?, ?)
            IS_MULTICOLUMN:#1
            IS_PLSQL:#1
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAR-07-2013 18:45:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0021
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TaxRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN IsTaxed = 0 THEN 0 ELSE XBVTaxRate END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0022
    COMPONENT_NAME:"VAT(BLENDED)
    COMPONENT_ALIAS:"VAT(BLENDED)
    COMPONENT_DESC:"VAT
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#0
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#2
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"VAT(BLENDED)
    COMPONENT_CATEGORY:"?
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@AUG-20-2010 08:50:17
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"ChargeType
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT DISTINCT C.COMPONENT_NAME as "ChargeType" FROM BILLING_STATEMENT BS, COMPONENT C WHERE BS.ENTITY_ID = :billing_entity AND BS.STATEMENT_TYPE = :statement_type AND BS.STATEMENT_STATE = 1 AND BS.STATEMENT_DATE = :statement_date And bs.component_id = c.component_id And c.is_taxed  = 1
            IS_MULTICOLUMN:#0
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#3
            ENTRY_DATE:@SEP-01-2010 14:32:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"CurrencyCharge
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select 'CC_PENEX' from dual
            IS_MULTICOLUMN:#0
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#2
            ENTRY_DATE:@SEP-01-2010 14:32:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"UsingCrossBorderVat
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION('1') \nFROM DUAL\nWHERE MM_SEM_UTIL.GET_USING_CROSS_BORDER_VAT_FMT(:statement_end_date, :billing_entity) = 0\n
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#0
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@SEP-01-2010 14:42:33
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeQty
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"TaxRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeAmt
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"PC.GET_CHARGE_AMOUNT(:billing_entity, :statement_type, :statement_date, :statement_date, ChargeType)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Generated by v4.1 Migration Script on 04-JUN-08
            ROW_NUMBER:#-1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-17-2008 16:49:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when nvl(CurrChgAmt,0) = 0 then ChargeAmt when ChargeType = 'CC_PENEX' then CurrChgAmt else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrChgAmt
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"PC.GET_CHARGE_AMOUNT(:billing_entity, :statement_type, :statement_date,  :statement_date, CurrencyCharge)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Generated by v4.1 Migration Script on 04-JUN-08
            ROW_NUMBER:#-1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-17-2008 16:49:53
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0022
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TaxRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_TAX_RATE(:now, :billing_entity),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:IT_COMMODITY
    table_alias:COMMODITY
    COMMODITY_ID:*IT_COMMODITY-0023
    COMMODITY_NAME:"Capacity
    COMMODITY_ALIAS:"Capacity
    COMMODITY_DESC:"Capacity
    COMMODITY_TYPE:"Capacity
    COMMODITY_UNIT:"?
    COMMODITY_UNIT_FORMAT:"?
    COMMODITY_PRICE_UNIT:"Dollars
    COMMODITY_PRICE_FORMAT:"?
    IS_VIRTUAL:"
    MARKET_TYPE:"
    ENTRY_DATE:@JAN-23-2007 10:37:11
end object
begin object
    table_name:IT_COMMODITY
    table_alias:COMMODITY
    COMMODITY_ID:*IT_COMMODITY-0024
    COMMODITY_NAME:"Energy
    COMMODITY_ALIAS:"Energy
    COMMODITY_DESC:"Energy
    COMMODITY_TYPE:"Energy
    COMMODITY_UNIT:"MWH
    COMMODITY_UNIT_FORMAT:"?
    COMMODITY_PRICE_UNIT:"Dollars
    COMMODITY_PRICE_FORMAT:"?
    IS_VIRTUAL:"
    MARKET_TYPE:"
    ENTRY_DATE:@JAN-23-2007 10:37:11
end object
begin object
    table_name:SCHEDULE_COORDINATOR
    table_alias:SC
    SC_ID:*SCHEDULE_COORDINATOR-0025
    SC_NAME:"SEM
    SC_ALIAS:"SEM
    SC_DESC:"SEM
    SC_NERC_CODE:"?
    SC_DUNS_NUMBER:"?
    SC_STATUS:"Active
    SC_EXTERNAL_IDENTIFIER:"SEM
    SC_SCHEDULE_NAME_PREFIX:"?
    SC_SCHEDULE_FORMAT:"Schedule Group
    SC_SCHEDULE_INTERVAL:"Day
    SC_LOAD_ROUNDING_PREFERENCE:"None
    SC_LOSS_ROUNDING_PREFERENCE:"None
    SC_CREATE_TX_LOSS_SCHEDULE:#0
    SC_CREATE_DX_LOSS_SCHEDULE:#0
    SC_CREATE_UFE_SCHEDULE:#0
    SC_MARKET_PRICE_ID:#0
    SC_MINIMUM_SCHEDULE_AMT:#0
    ENTRY_DATE:@SEP-02-2010 14:46:29
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0026
    REALM_NAME:"All Data
    REALM_ALIAS:"All Data
    REALM_DESC:"Generated by RetailOffice.  Do not delete.
    ENTITY_DOMAIN_ID:"
    REALM_CALC_TYPE:#0
    CUSTOM_QUERY:"
    ENTRY_DATE:@JUL-20-2012 12:09:04
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0027
    REALM_NAME:"SEM DQIUG
    REALM_ALIAS:"SEM DQIUG
    REALM_DESC:"SEM DQIUG
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@APR-24-2012 11:32:33
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0027
            ENTITY_COLUMN:"AGREEMENT_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${Agreement_Type}
            ENTRY_DATE:@APR-24-2012 11:32:52
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0027
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'43289','5487','5918','47218','5440','5472'
            ENTRY_DATE:@APR-24-2012 11:32:57
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0027
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:07:44
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0027
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','47183','5392','5430'
            ENTRY_DATE:@APR-24-2012 11:33:02
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0027
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Dispatch Instr.'
            ENTRY_DATE:@MAR-07-2008 14:59:31
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0028
    REALM_NAME:"SEM Dispatch Qty
    REALM_ALIAS:"SEM Dispatch Qty
    REALM_DESC:"SEM Dispatch Qty
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@JUN-16-2008 12:07:54
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0028
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'43289','5487','5918','47218','5440'
            ENTRY_DATE:@MAY-04-2010 14:04:45
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0028
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:07:44
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0028
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','47183','5392'
            ENTRY_DATE:@MAY-04-2010 14:04:40
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0028
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Dispatch Instr.'
            ENTRY_DATE:@MAR-07-2008 14:59:31
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0029
    REALM_NAME:"SEM Eligible Availability
    REALM_ALIAS:"SEM Eligible Availability
    REALM_DESC:"SEM Eligible Availability
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@SEP-11-2007 10:52:50
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0029
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'3'
            ENTRY_DATE:@MAR-07-2008 14:49:34
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0029
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:09:47
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0029
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','5392'
            ENTRY_DATE:@MAY-07-2010 14:18:13
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0029
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Eligible Avail.'
            ENTRY_DATE:@MAR-07-2008 14:58:45
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0030
    REALM_NAME:"SEM Gen Transactions
    REALM_ALIAS:"SEM Gen Transactions
    REALM_DESC:"SEM Gen Transactions
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@MAY-04-2010 14:04:24
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0030
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'43289','5487','5918','5440'
            ENTRY_DATE:@MAY-04-2010 14:03:54
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0030
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:12:41
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0030
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','5392'
            ENTRY_DATE:@MAY-04-2010 14:04:15
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0030
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Generation'
            ENTRY_DATE:@MAR-07-2008 14:50:49
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0031
    REALM_NAME:"SEM Load Transactions
    REALM_ALIAS:"SEM Load Transactions
    REALM_DESC:"SEM Load Transactions
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@AUG-29-2007 12:37:39
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0031
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'43289','5487','5918'
            ENTRY_DATE:@JUL-20-2009 15:41:38
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0031
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-10-2008 14:52:11
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0031
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300'
            ENTRY_DATE:@JUL-20-2009 15:41:32
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0031
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Load'
            ENTRY_DATE:@MAR-07-2008 14:51:44
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0032
    REALM_NAME:"SEM MSQ Generation
    REALM_ALIAS:"SEM MSQ Generation
    REALM_DESC:"SEM MSQ Generation
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@SEP-18-2007 15:11:32
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0032
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'2'
            ENTRY_DATE:@MAR-07-2008 14:52:34
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0032
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-10-2008 17:15:32
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0032
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','5392'
            ENTRY_DATE:@MAY-07-2010 14:19:17
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0032
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Generation'
            ENTRY_DATE:@MAR-07-2008 14:53:33
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0033
    REALM_NAME:"SEM MSQ Nomination
    REALM_ALIAS:"SEM MSQ Nomination
    REALM_DESC:"SEM MSQ Nomination
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@JUN-16-2008 12:16:53
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0033
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'2'
            ENTRY_DATE:@MAR-07-2008 14:54:20
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0033
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:16:49
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0033
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','5392'
            ENTRY_DATE:@MAY-07-2010 14:19:40
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0033
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Nomination'
            ENTRY_DATE:@MAR-07-2008 14:54:36
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0034
    REALM_NAME:"SEM MSQIUG
    REALM_ALIAS:"SEM MSQIUG
    REALM_DESC:"SEM MSQIUG
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@APR-23-2012 14:54:34
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0034
            ENTITY_COLUMN:"AGREEMENT_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${Agreement_Type}
            ENTRY_DATE:@APR-23-2012 14:55:03
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0034
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'2'
            ENTRY_DATE:@MAR-07-2008 14:54:20
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0034
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:16:49
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0034
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','5392','5430'
            ENTRY_DATE:@APR-23-2012 14:52:20
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0034
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Nomination'
            ENTRY_DATE:@MAR-07-2008 14:54:36
        end row
    end subtable
end object
begin object
    table_name:SYSTEM_REALM
    table_alias:REALM
    REALM_ID:*SYSTEM_REALM-0035
    REALM_NAME:"SEM Net Demand
    REALM_ALIAS:"SEM Net Demand
    REALM_DESC:"SEM Net Demand
    ENTITY_DOMAIN_ID:#-200
    REALM_CALC_TYPE:#1
    CUSTOM_QUERY:"?
    ENTRY_DATE:@SEP-04-2007 10:37:15
    begin subtable
        table_name:SYSTEM_REALM_COLUMN
        relationship:REALM_ID
        begin row
            REALM_ID:*SYSTEM_REALM-0035
            ENTITY_COLUMN:"COMMODITY_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'2'
            ENTRY_DATE:@MAR-07-2008 14:55:15
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0035
            ENTITY_COLUMN:"POD_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"${POD_ID}
            ENTRY_DATE:@JUN-16-2008 12:17:12
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0035
            ENTITY_COLUMN:"SC_ID
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'6727','5255','5300','47183'
            ENTRY_DATE:@DEC-20-2011 11:15:08
        end row
        begin row
            REALM_ID:*SYSTEM_REALM-0035
            ENTITY_COLUMN:"TRANSACTION_TYPE
            IS_EXCLUDING_VALS:#0
            COLUMN_VALS:"'Net Demand'
            ENTRY_DATE:@MAR-07-2008 14:59:15
        end row
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0036
    COMPONENT_NAME:"CONPEX
    COMPONENT_ALIAS:"CONPEX
    COMPONENT_DESC:"Constraint Payment to Generator Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CONPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@JUL-24-2012 11:26:03
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"Dec
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"WHERE tbl.transaction_type='Generation' AND tbl.agreement_type IN ('EA', '?') AND tbl.commodity_id=(SELECT commodity_id FROM it_commodity WHERE commodity_alias='Energy') AND tbl.pod_id=${POD_ID}
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0026
            WHAT_FIELD:"TRAIT_VAL:1210:1
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-24-2012 11:26:05
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DispatchQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0032
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID,Resource_Type
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id, t.attribute_val)\n  FROM service_point s,\n       sem_service_point_pse p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31')\n	    AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUL-23-2012 15:19:17
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when Resource_Type = 'PPTG' and DQ <= MSQ then TPD * (DQLF-MSQLF) * Dec else TPD * (((DQLF*DOP) + (DNLC*TLAF) + DQCCLF) - ((MSQLF * MOP) + (MNLC*TLAF) + MSQCCLF)) + (DSUC - MSUC)*TLAF end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 15:27:44
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ > 0 then MM_SEM_SHADOW_BILL.GET_NO_LOAD_COST(:now, Service_Point, 'Generation') else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE(:now, Service_Point, DQ, 'Generation'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-30-2010 14:28:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(DispatchQty,0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION(:now, Service_Point, 'Generation', DQ), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQ * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when WarmthStateDQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_START_UP_COST(:now, Service_Point, 'Generation', WarmthStateDQ) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#21
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQ > 0 then MM_SEM_SHADOW_BILL.GET_NO_LOAD_COST(:now, Service_Point, 'Generation') else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE(:now, Service_Point, MSQ, 'Generation'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-30-2010 14:28:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MSQty, 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION(:now, Service_Point, 'Generation', MSQ), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQ * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when WarmthStateMSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_START_UP_COST(:now, Service_Point, 'Generation', WarmthStateMSQ) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#22
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeHot
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 and MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_HOT_TIME(:now, Service_Point, 'Generation') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeWarm
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 and MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_WARM_TIME(:now, Service_Point, 'Generation') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NumHrsDownDQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_HOURS_DOWN(:cut_now, Service_Point, 'Dispatch Instr.', MaxTimeWarm, :statement_type, 'Power', :billing_entity, :statement_date) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NumHrsDownMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_HOURS_DOWN(:cut_now, Service_Point, 'Generation',  MaxTimeWarm, :statement_type, 'Energy') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#18
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UnderTest
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_UNIT_UNDER_TEST(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Constraint Payment = 0 for units under test
            ROW_NUMBER:#23
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"WarmthStateDQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when NumHrsDownDQ = 0 then 0 when NumHrsDownDQ <= MaxTimeHot then 3 when NumHrsDownDQ < MaxTimeWarm then 2 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Cold =1, Warm = 2, Hot = 3
            ROW_NUMBER:#19
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0036
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"WarmthStateMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when NumHrsDownMSQ = 0 then 0 when NumHrsDownMSQ <= MaxTimeHot then 3 when NumHrsDownMSQ < MaxTimeWarm then 2 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#20
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:24:51
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0037
    COMPONENT_NAME:"CONPIUEX
    COMPONENT_ALIAS:"CONPIUEX
    COMPONENT_DESC:"Constraint Payment to Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CONPIUEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:16:57
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DispatchQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0033
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point,POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, service_point_id) \nFROM (select distinct s.service_point_name, s.service_point_id\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:44:15
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"TPD * (((DQLF*DOP) + (DNLC*TLAF) + DQCCLF) - ((MSQLF * MOP) + (MNLC*TLAF) + MSQCCLF)) + (DSUC - MSUC)*TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:16:57
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ > 0 then MM_SEM_SHADOW_BILL.GET_NO_LOAD_COST(:now, Service_Point, 'Nomination') else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:cut_now, Service_Point, DQ, 'Nomination'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-10-2010 10:27:44
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(DispatchQty,0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', DQ), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQ * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when WarmthStateDQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_START_UP_COST (:now, Service_Point, 'Nomination', WarmthStateDQ) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#20
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQ > 0 and DQ > 0 then DNLC when MSQ > 0 and DQ < 0 then MM_SEM_SHADOW_BILL.GET_NO_LOAD_COST(:now, Service_Point, 'Nomination') else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:cut_now, Service_Point, MSQ, 'Nomination'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-10-2010 10:27:44
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MSQty, 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', MSQ), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQ * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when WarmthStateMSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_START_UP_COST (:now, Service_Point, 'Nomination', WarmthStateMSQ) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#21
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeHot
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 and MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_HOT_TIME(:now, Service_Point, 'Nomination') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeWarm
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 and MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_WARM_TIME(:now, Service_Point, 'Nomination') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NumHrsDownDQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_HOURS_DOWN(:cut_now, Service_Point, 'Dispatch Instr.', MaxTimeWarm, :statement_type, 'Power', :billing_entity, :statement_date) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NumHrsDownMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_HOURS_DOWN(:cut_now, Service_Point, 'Nomination',  MaxTimeWarm, :statement_type, 'Energy') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"WarmthStateDQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when NumHrsDownDQ = 0 then 0 when NumHrsDownDQ < MaxTimeHot then 3 when NumHrsDownDQ < MaxTimeWarm then 2 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Cold =1, Warm = 2, Hot = 3
            ROW_NUMBER:#18
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0037
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"WarmthStateMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when NumHrsDownMSQ = 0 then 0 when NumHrsDownMSQ < MaxTimeHot then 3 when NumHrsDownMSQ < MaxTimeWarm then 2 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#18
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:26:04
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0038
    COMPONENT_NAME:"CONPIUGEX
    COMPONENT_ALIAS:"CONPIUGEX
    COMPONENT_DESC:"Constraint Payment to Interconnector Unit Gates
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CONPIUGEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@AUG-05-2015 15:59:02
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DispatchQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0027
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:42:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0034
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:42:38
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, Agreement_Type, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, Agreement_Type, service_point_id) \nFROM (select distinct s.service_point_name, s.service_point_id, it.agreement_type\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id\nORDER BY it.agreement_type)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#2
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-26-2012 20:16:52
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"TPD * (((DQIUGLF*DOP) + DQCCLF) - ((MSQIUGLF * MOP) + MSQCCLF))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-22-2015 14:56:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:cut_now, Service_Point, DQIUG, 'Nomination', ${Agreement_Type}),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-22-2015 14:56:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', DQIUG, ${Agreement_Type}), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:50:40
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(DispatchQty,0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:50:40
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQIUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when DQIUG<0 then DQIUG / TLAF else DQIUG * TLAF end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-05-2015 15:58:50
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:cut_now, Service_Point, MSQIUG, 'Nomination', ${Agreement_Type}),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-22-2015 14:56:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', MSQIUG, ${Agreement_Type}), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:50:40
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MSQty, 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:50:40
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQIUG<0 then MSQIUG / TLAF else MSQIUG * TLAF end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-05-2015 15:58:50
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0038
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0039
    MARKET_PRICE_NAME:"SEM:Annual Capacity Exchange Rate: Euro to Pound
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"Exchange Rate
    MARKET_PRICE_INTERVAL:"Month
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0023
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Annual Capacity Exchange Rate: Euro to Pound
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@FEB-29-2008 16:59:01
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0040
    MARKET_PRICE_NAME:"SEM:Annual Imperfections Price
    MARKET_PRICE_ALIAS:"IMP
    MARKET_PRICE_DESC:"SEM:Annual Imperfections Price
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"Month
    MARKET_TYPE:"?
    COMMODITY_ID:#0
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Annual Imperfection Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@APR-04-2008 14:45:00
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0041
    MARKET_PRICE_NAME:"SEM:Annual Variable Market Operator Price
    MARKET_PRICE_ALIAS:"VMOP
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"Market Result
    MARKET_PRICE_INTERVAL:"Month
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Annual Variable Market Operator Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@APR-04-2008 14:45:11
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0042
    MARKET_PRICE_NAME:"SEM:Capacity Payments Demand Price
    MARKET_PRICE_ALIAS:"CPDP
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Capacity Payments Demand Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@OCT-18-2007 17:12:35
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0043
    MARKET_PRICE_NAME:"SEM:Capacity Payments Generation Price
    MARKET_PRICE_ALIAS:"CPGP
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Capacity Payments Generation Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@OCT-18-2007 17:12:44
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0044
    MARKET_PRICE_NAME:"SEM:Ex-Post Capacity Payments Generation Price
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Ex-Post Capacity Payments Generation Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@SEP-10-2007 14:00:02
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0045
    MARKET_PRICE_NAME:"SEM:Fixed Capacity Payments Generation Price
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Fixed Capacity Payments Generation Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@SEP-10-2007 14:00:02
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0046
    MARKET_PRICE_NAME:"SEM:System Marginal Price Euro
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"Commodity Price
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"System Marginal Price Euro
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@AUG-07-2007 08:42:13
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0047
    MARKET_PRICE_NAME:"SEM:Trading Day Exchange Rate: Euro to Pound
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"Exchange Rate
    MARKET_PRICE_INTERVAL:"Day
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Trading Day Exchange Rate: Euro to Pound
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@AUG-06-2007 15:12:51
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0048
    MARKET_PRICE_NAME:"SEM:Trading Day Exchange Rate: Pound to Euro
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"Exchange Rate
    MARKET_PRICE_INTERVAL:"Day
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Trading Day Exchange Rate: Pound to Euro
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@SEP-20-2007 12:02:14
end object
begin object
    table_name:MARKET_PRICE
    table_alias:MARKET_PRICE
    MARKET_PRICE_ID:*MARKET_PRICE-0049
    MARKET_PRICE_NAME:"SEM:Variable Capacity Payments Generation Price
    MARKET_PRICE_ALIAS:"?
    MARKET_PRICE_DESC:"?
    MARKET_PRICE_TYPE:"User Defined
    MARKET_PRICE_INTERVAL:"30 Minute
    MARKET_TYPE:"?
    COMMODITY_ID:*IT_COMMODITY-0024
    SERVICE_POINT_TYPE:"?
    EXTERNAL_IDENTIFIER:"Variable Capacity Payments Generation Price
    EDC_ID:#0
    SC_ID:*SCHEDULE_COORDINATOR-0025
    POD_ID:#0
    ZOD_ID:#0
    ENTRY_DATE:@SEP-10-2007 14:27:49
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0050
    PRODUCT_NAME:"SEM CAPIPCC
    PRODUCT_ALIAS:"SEM CAPIPCC
    PRODUCT_DESC:"SEM CAPIPCC
    PRODUCT_EXTERNAL_IDENTIFIER:"CAPIPCC
    PRODUCT_CATEGORY:"MO
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@SEP-27-2007 15:28:39
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0050
            COMPONENT_ID:*COMPONENT-0001
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:27:07
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0050
            COMPONENT_ID:*COMPONENT-0004
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:28:46
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0050
            COMPONENT_ID:*COMPONENT-0006
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-27-2007 15:26:54
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0050
            COMPONENT_ID:*COMPONENT-0008
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:30:14
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0050
            COMPONENT_ID:*COMPONENT-0009
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:31:06
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0051
    PRODUCT_NAME:"SEM ENGIPCC
    PRODUCT_ALIAS:"SEM ENGIPCC
    PRODUCT_DESC:"SEM ENGIPCC
    PRODUCT_EXTERNAL_IDENTIFIER:"ENGIPCC
    PRODUCT_CATEGORY:"MO
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@SEP-27-2007 15:28:48
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0002
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:36:07
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0003
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@JUL-27-2015 14:01:16
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0005
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:37:53
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0007
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-27-2007 15:27:33
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0010
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:37:08
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0051
            COMPONENT_ID:*COMPONENT-0011
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-25-2014 11:36:40
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0052
    PRODUCT_NAME:"SEM UP-C-EXG
    PRODUCT_ALIAS:"SEM UP-C-EXG
    PRODUCT_DESC:"Underpayment Allocation for the Capacity Market
    PRODUCT_EXTERNAL_IDENTIFIER:"UP-C-EXG
    PRODUCT_CATEGORY:"CA
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@FEB-18-2014 08:16:13
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0052
            COMPONENT_ID:*COMPONENT-0014
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:45:06
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0052
            COMPONENT_ID:*COMPONENT-0016
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:45:46
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0052
            COMPONENT_ID:*COMPONENT-0018
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:47:21
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0053
    PRODUCT_NAME:"SEM UP-E-EXG
    PRODUCT_ALIAS:"SEM UP-E-EXG
    PRODUCT_DESC:"Underpayment Allocation for the Energy Market
    PRODUCT_EXTERNAL_IDENTIFIER:"UP-E-EXG
    PRODUCT_CATEGORY:"MO
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@FEB-13-2014 13:50:46
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0053
            COMPONENT_ID:*COMPONENT-0015
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:03:42
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0053
            COMPONENT_ID:*COMPONENT-0017
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:34:14
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0053
            COMPONENT_ID:*COMPONENT-0019
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@FEB-14-2014 10:41:53
        end row
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0054
    COMPONENT_NAME:"CCEX
    COMPONENT_ALIAS:"CCEX
    COMPONENT_DESC:"Capacity Charges to Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CCEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:07:30
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"AnnualExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0039
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:01:47
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CPDP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0042
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:01:47
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point  s,\n       sem_service_point_pse p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31')\n AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUL-20-2009 11:06:04
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SNDLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:12:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:04:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('AIND',:billing_entity,:statement_type,:cut_now, 'AIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:39:14
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ANIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('ANIND',:billing_entity,:statement_type,:cut_now, 'ANIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:54:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then CPDP else CPDP *AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:12:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDA
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"COALESCE(CASE WHEN REVLF = 0 OR NDAF = 0 THEN NULL ELSE REVLF * NDAF END, MM_SEM_SHADOW_BILL.GET_NDA(:statement_type,:cut_now,Service_Point), 0.0)\n
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:07:30
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"RMVIP * (NDLF * (1-NIEP) / AIND) + (1 - RMVIP) * (NDLF * NIEP/ANIND)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:12:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_NDLF('CA',Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:12:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NIEP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('NIEP',:billing_entity,:statement_type,:cut_now,NULL,Service_Point)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:55:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"REVLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('REVLF',:billing_entity,:statement_type,:cut_now, 'REVLF_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:54:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"RMVIP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_RMVIP(Service_Point,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:12:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SNDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"NDLF + NDA
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:07:30
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0054
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-23-2011 16:12:33
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0055
    COMPONENT_NAME:"CCJEX
    COMPONENT_ALIAS:"CCJEX
    COMPONENT_DESC:"Capacity Charges to Error Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CCJEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@MAY-26-2010 17:03:17
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"AnnualExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0039
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:02:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CPDPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0042
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:02:25
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:" SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:33:06
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"NDLFESU
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"CPDP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPDP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then CPDPrice else CPDPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-20-2009 11:15:35
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDLFESU
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_NDLF('CA',Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-26-2010 17:03:17
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0055
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0056
    COMPONENT_NAME:"CPEX
    COMPONENT_ALIAS:"CPEX
    COMPONENT_DESC:"Capacity Payments to Generator Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CPEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-26-2015 14:41:06
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0056
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 12:05:51
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"AnnualExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0039
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CPGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0043
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"EA
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0029
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ECGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0044
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"FCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0045
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"VCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0049
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 13:45:42
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point,POD_ID,Resource_Type
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id, t.attribute_val)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUL-20-2009 14:50:07
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when CPPF <> 0 then CPGPcalc * CPEALF * (CPGPF / CPPF) else CPGPF * CPEALF * (VCGP +FCGP + ECGP) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPEALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"EALF * TPD
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then CPGPrice else CPGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_CAP_PAY_PRICE_FACT(:now, Service_Point, EA, MSQ, SMP, VOLL, CPPF, 'Generation'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPcalc
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CPPF*(ECGP+FCGP+VCGP)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when nvl(VOLL_Euro,0) = 0 then 0 else Greatest((VOLL_Euro - SMP_Euro) / VOLL_Euro, 0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-21-2014 10:43:45
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"EALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"EA * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ECGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then ECGPrice else ECGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then FCGPrice else FCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_MSQ(0, Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:27:57
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 12:05:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 11:31:45
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VCGPrice else VCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VOLL_Euro else VOLL_Euro * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2008 00:00:00
            FORMULA:"10000
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2009 00:00:00
            END_DATE:@DEC-31-2009 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2010 00:00:00
            END_DATE:@DEC-31-2010 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2011 00:00:00
            END_DATE:@DEC-31-2011 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2012 00:00:00
            END_DATE:@DEC-31-2012 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2013 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            FORMULA:"10749.08
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            FORMULA:"10898.49
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:40:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0056
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:"
            FORMULA:"10988.9
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAR-26-2015 14:41:07
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0057
    COMPONENT_NAME:"CPIUEX
    COMPONENT_ALIAS:"CPIUEX
    COMPONENT_DESC:"Capacity Payments to Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CPIUEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:35:07
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0057
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 12:07:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"AnnualExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0039
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CPGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Max
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0043
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"MM_SEM_SHADOW_BILL.GET_ENERGY_STATEMENT_TYPE('CA',:statement_type,:statement_date)
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ECGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0044
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"FCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0045
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"VCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0049
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, service_point_id) FROM\n(select distinct s.service_point_name, s.service_point_id\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:45:24
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when CPPF <> 0 then CPGPcalc * CPEALF * (CPGPF / CPPF) else CPGPF * CPEALF * (VCGP +FCGP + ECGP) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPEALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"EALF * TPD
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then CPGPrice else CPGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_CAP_PAY_PRICE_FACT_IU(:cut_now, Service_Point, DQ, MSQ, SMP, VOLL, CPPF, 'Nomination'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPcalc
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CPPF*(ECGP+FCGP+VCGP)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when nvl(VOLL,0) = 0 then 0 else Greatest((VOLL - SMP) / VOLL, 0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"EALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQ* TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ECGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then ECGPrice else ECGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then FCGPrice else FCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQ
            BEGIN_DATE:@JAN-20-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_MSQ(1, Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-11-2011 12:54:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 12:07:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VCGPrice else VCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VOLL_Euro else VOLL_Euro * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2008 00:00:00
            FORMULA:"10000
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 13:43:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0057
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2009 00:00:00
            END_DATE:"
            FORMULA:"12900
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAY-29-2012 14:35:07
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0058
    COMPONENT_NAME:"CPIUGEX
    COMPONENT_ALIAS:"CPIUGEX
    COMPONENT_DESC:"Capacity Payments to Interconnector Unit Gates
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"CPIUGEX
    COMPONENT_CATEGORY:"CA
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-26-2015 14:42:23
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0058
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 12:07:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"AnnualExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0039
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CPGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Max
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0043
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0027
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"MM_SEM_SHADOW_BILL.GET_ENERGY_STATEMENT_TYPE('CA',:statement_type,:statement_date)
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:34:52
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ECGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0044
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"FCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0045
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"VCGPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0049
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, Agreement_Type, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, Agreement_Type, service_point_id) FROM\n(select distinct s.service_point_name, s.service_point_id, it.agreement_type\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id\nORDER BY it.agreement_type)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#2
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-26-2012 20:16:29
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when CPPF <> 0 then CPGPcalc * CPEALF * (CPGPF / CPPF) else CPGPF * CPEALF * (VCGP +FCGP + ECGP) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPEALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"EALF * TPD
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then CPGPrice else CPGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_CAP_PAY_PRICE_FACT_IU(:cut_now, Service_Point, DQIUG, MSQIUG, SMP, VOLL, CPPF, 'Nomination'),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:36:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPGPcalc
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CPPF*(ECGP+FCGP+VCGP)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CPPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when nvl(VOLL_Euro,0) = 0 then 0 else Greatest((VOLL_Euro - SMP_Euro) / VOLL_Euro, 0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-21-2014 10:43:32
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"EALF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"DQIUG* TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:36:48
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ECGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then ECGPrice else ECGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then FCGPrice else FCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUG
            BEGIN_DATE:@JAN-20-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_MSQ(1, Service_Point,:statement_type,:cut_now,:statement_date, ${Agreement_Type})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:35:26
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VCGP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VCGPrice else VCGPrice * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VOLL_Euro else VOLL_Euro * AnnualExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@DEC-31-2008 00:00:00
            FORMULA:"10000
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2009 00:00:00
            END_DATE:@DEC-31-2009 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2010 00:00:00
            END_DATE:@DEC-31-2010 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2011 00:00:00
            END_DATE:@DEC-31-2011 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2012 00:00:00
            END_DATE:@DEC-31-2012 00:00:00
            FORMULA:"12900
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2013 00:00:00
            END_DATE:@DEC-31-2013 00:00:00
            FORMULA:"10749.08
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2014 00:00:00
            END_DATE:@DEC-31-2014 00:00:00
            FORMULA:"10898.49
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@AUG-21-2014 10:41:24
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0058
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VOLL_Euro
            BEGIN_DATE:@JAN-01-2015 00:00:00
            END_DATE:"
            FORMULA:"10988.9
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAR-26-2015 14:42:23
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0059
    COMPONENT_NAME:"ENCEX
    COMPONENT_ALIAS:"ENCEX
    COMPONENT_DESC:"Energy Charge to Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"ENCEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:08:21
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0059
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 12:58:17
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0031
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 13:44:32
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"NDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0035
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 13:44:32
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:05:13
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point,POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-10-2008 16:40:32
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SNDLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:11:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('AIND',:billing_entity,:statement_type,:cut_now, 'AIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:47:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ANIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('ANIND',:billing_entity,:statement_type,:cut_now, 'ANIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:55:56
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDA
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"COALESCE(CASE WHEN REVLF = 0 OR NDAF = 0 THEN NULL ELSE REVLF * NDAF END, MM_SEM_SHADOW_BILL.GET_NDA(:statement_type,:cut_now,Service_Point), 0.0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:08:21
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"RMVIP * (NDLF * (1-NIEP) / AIND) + (1 - RMVIP) * (NDLF * NIEP/ANIND)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-23-2011 14:34:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NIEP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('NIEP',:billing_entity,:statement_type,:cut_now,NULL,Service_Point)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:55:55
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"REVLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('REVLF',:billing_entity,:statement_type,:cut_now, 'REVLF_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:55:56
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"RMVIP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_RMVIP(Service_Point,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 10:40:05
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 10:40:05
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0059
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SNDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"NDLF + NDA
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:08:21
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0059
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"ENCEX
            ENTRY_DATE:@JUN-05-2007 15:29:25
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0060
    COMPONENT_NAME:"ENCJEX
    COMPONENT_ALIAS:"ENCJEX
    COMPONENT_DESC:"Energy Charge to Error Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"ENCJEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@OCT-01-2010 13:12:26
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0060
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:12:27
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"NDLFESU
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0035
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:05:40
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:54:24
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"NDLFESU
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0060
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 13:12:27
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0060
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"ENCJEX
            ENTRY_DATE:@JUN-05-2007 15:29:25
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0061
    COMPONENT_NAME:"ENPEX
    COMPONENT_ALIAS:"ENPEX
    COMPONENT_DESC:"Energy Payments to Generator Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"ENPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@OCT-01-2010 13:13:40
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0061
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:13:41
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 15:24:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MG_inp
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0030
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 15:24:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQ_inp
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0032
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 15:24:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 14:59:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID,Resource_Type
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id, t.attribute_val)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31')\n	    AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUL-20-2009 14:50:45
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MSQLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Resource_Type='APTG' then 2*MG_inp else MSQ_inp end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"assume MG in MWh, not MW
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-22-2009 15:15:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then DQ*TLAF*TPD else MSQ*TLAF*TPD end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"for effective dating; assume MSQ is in MW, not MWh
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 14:52:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 13:13:41
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 14:52:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0061
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UnderTest
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_UNIT_UNDER_TEST(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"if under test use DQ instead of MSQ
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0061
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"ENPEX
            ENTRY_DATE:@JUN-05-2007 15:29:25
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0062
    COMPONENT_NAME:"ENPIUEX
    COMPONENT_ALIAS:"ENPIUEX
    COMPONENT_DESC:"Energy Payments to Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"ENPIUEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@OCT-01-2010 13:14:43
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0062
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:14:43
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0033
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:06:15
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, service_point_id) FROM\n(select distinct s.service_point_name, s.service_point_id\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:56:29
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MSQLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQ*TLAF*TPD
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"for effective dating; assume MSQ is in MW, not MWh
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 13:14:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0062
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0063
    COMPONENT_NAME:"ENPIUGEX
    COMPONENT_ALIAS:"ENPIUGEX
    COMPONENT_DESC:"Energy Payments to Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"ENPIUGEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@AUG-05-2015 16:00:29
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0063
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:14:43
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0034
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:24:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, Agreement_Type, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, agreement_type, service_point_id) FROM\n(select distinct s.service_point_name, s.service_point_id, it.agreement_type\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id\norder by it.agreement_type)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#2
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-26-2012 20:15:52
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MSQIUGLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-22-2015 14:38:01
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQIUG<0 then MSQIUG/TLAF*TPD else MSQIUG*TLAF*TPD end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-05-2015 16:00:29
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0063
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0064
    COMPONENT_NAME:"FMOCGEN_EX
    COMPONENT_ALIAS:"FMOCGEN_EX
    COMPONENT_DESC:"Fixed Market Operator Charge (Generator)
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"FMOCGEN_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-26-2015 14:45:52
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0064
            REFERENCE_NAME:"FX Euro to GBP
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@SEP-14-2012 14:21:12
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT E.EXTERNAL_IDENTIFIER Service_Point\nFROM EXTERNAL_SYSTEM_IDENTIFIER E, \n     SEM_SERVICE_POINT_PSE P, \n	 SEM_SETTLEMENT_ENTITY S, \n	 SEM_SERVICE_POINT_PSE SSPP\nWHERE S.SETTLEMENT_PSE_ID = :billing_entity\n	  AND P.PSE_ID = S.PARTICIPANT_PSE_ID\n	  AND E.ENTITY_ID = P.POD_ID\n	  AND E.EXTERNAL_SYSTEM_ID = 1000\n	  AND E.ENTITY_DOMAIN_ID = -210\n	  AND E.IDENTIFIER_TYPE = 'Default'\n	  AND E.EXTERNAL_IDENTIFIER LIKE 'GU%'\n	  AND SSPP.POD_ID = E.ENTITY_ID\n	  AND SSPP.PSE_ID = S.PARTICIPANT_PSE_ID\n	  AND :statement_end_date \n	    BETWEEN SSPP.BEGIN_DATE AND NVL(SSPP.END_DATE, DATE '9999-12-31')\nORDER BY 1
            IS_MULTICOLUMN:#0
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@OCT-03-2012 10:55:07
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_REGISTERED_CAPACITY(ADD_MONTHS(TRUNC(:now, 'MM'), 1) - 1, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-21-2014 11:19:15
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-(case when Use_Euro = 0 then FixedMORateGenerators else FixedMORateGenerators *  ExchangeRate end)/12
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-24-2014 14:34:53
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CALC_UTIL.GET_MARKET_PRICE(${FX Euro to GBP},MM_SEM_SHADOW_BILL.GET_FMOC_PUBLICATION_DATE(:statement_type, :statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-14-2012 14:21:12
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2011 00:00:00
            END_DATE:@SEP-30-2012 00:00:00
            FORMULA:"109
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:15:06
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2012 00:00:00
            END_DATE:@SEP-30-2013 00:00:00
            FORMULA:"100
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:15:06
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2013 00:00:00
            END_DATE:@SEP-30-2014 00:00:00
            FORMULA:"82
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:15:07
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2014 00:00:00
            END_DATE:"
            FORMULA:"47
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAR-26-2015 14:45:52
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0064
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-14-2012 14:22:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0064
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"FMOCGEN_EX
            ENTRY_DATE:@SEP-14-2012 14:14:21
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0065
    COMPONENT_NAME:"FMOCIUG_EX
    COMPONENT_ALIAS:"FMOCIUG_EX
    COMPONENT_DESC:"Fixed Market Operator Charge for Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"FMOCIUG_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-26-2015 14:44:55
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0065
            REFERENCE_NAME:"FX Euro to GBP
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@FEB-27-2014 15:30:00
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-ChargeQty
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAR-10-2014 11:14:23
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeRate / 12
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAR-10-2014 11:14:23
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_MONTHLY_AVG_MAX_IMPORT_CAP(:billing_entity, :statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@MAR-06-2014 12:15:02
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then FixedMORateGenerators else FixedMORateGenerators *  ExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@APR-23-2012 17:00:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CALC_UTIL.GET_MARKET_PRICE(${FX Euro to GBP}, MM_SEM_SHADOW_BILL.GET_FMOC_PUBLICATION_DATE(:statement_type, :statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-27-2014 15:30:00
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2011 00:00:00
            END_DATE:@SEP-30-2012 00:00:00
            FORMULA:"109
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:16:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2012 00:00:00
            END_DATE:@SEP-30-2013 00:00:00
            FORMULA:"100
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:16:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2013 00:00:00
            END_DATE:@SEP-30-2014 00:00:00
            FORMULA:"82
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:16:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2014 00:00:00
            END_DATE:"
            FORMULA:"47
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAR-26-2015 14:44:55
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0065
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@APR-23-2012 17:00:09
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0066
    COMPONENT_NAME:"FMOCIU_EX
    COMPONENT_ALIAS:"FMOCIU_EX
    COMPONENT_DESC:"Fixed Market Operator Charge for Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"FMOCIU_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@FEB-24-2014 14:26:31
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0066
            REFERENCE_NAME:"Market_Price_Id
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@MAY-17-2010 12:46:12
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Average
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0033
            WHAT_FIELD:"TRAIT_VAL:1206:1
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@MAY-26-2010 16:05:35
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"select STRING_COLLECTION(service_point_name, service_point_id) FROM\n(select distinct s.service_point_name, s.service_point_id\n  from interchange_transaction it,\n       service_point           s,\n       sem_settlement_entity   s1,\n       sem_settlement_entity   s2,\n       interchange_contract    c\n where it.transaction_type = 'Nomination'\n   and s1.settlement_pse_id = :billing_entity\n   and c.contract_id = it.contract_id\n   and s2.settlement_pse_id = c.billing_entity_id\n   and s1.participant_pse_id = s2.participant_pse_id\n   AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:57:56
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-ChargeQty / SpreadMonths
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then FixedMORateGenerators else FixedMORateGenerators *  ExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CALC_UTIL.GET_MARKET_PRICE(Market_Price_Id, MM_SEM_SHADOW_BILL.GET_FMOC_PUBLICATION_DATE(:statement_type, :statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-14-2010 14:09:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@NOV-01-2007 00:00:00
            END_DATE:@SEP-30-2008 00:00:00
            FORMULA:"116
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-26-2010 16:05:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SpreadMonths
            BEGIN_DATE:@NOV-01-2007 00:00:00
            END_DATE:@SEP-30-2008 00:00:00
            FORMULA:"11
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-26-2010 16:05:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0066
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0066
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"FMOCIU_EX
            ENTRY_DATE:@OCT-03-2007 13:16:31
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0067
    COMPONENT_NAME:"FMOCSUP_EX
    COMPONENT_ALIAS:"FMOCSUP_EX
    COMPONENT_DESC:"Fixed Market Operator Charge (Suppliers)
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"FMOCSUP_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAR-26-2015 14:43:45
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0067
            REFERENCE_NAME:"FX Euro to GBP
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@SEP-14-2012 17:05:42
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT E.EXTERNAL_IDENTIFIER Service_Point\nFROM EXTERNAL_SYSTEM_IDENTIFIER E, \n     SEM_SERVICE_POINT_PSE P, \n	 SEM_SETTLEMENT_ENTITY S, \n	 SEM_SERVICE_POINT_PSE SSPP\nWHERE S.SETTLEMENT_PSE_ID = :billing_entity\n	  AND P.PSE_ID = S.PARTICIPANT_PSE_ID\n	  AND E.ENTITY_ID = P.POD_ID\n	  AND E.EXTERNAL_SYSTEM_ID = 1000\n	  AND E.ENTITY_DOMAIN_ID = -210\n	  AND E.IDENTIFIER_TYPE = 'Default'\n	  AND E.EXTERNAL_IDENTIFIER LIKE '%SU%'\n	  AND SSPP.POD_ID = E.ENTITY_ID\n	  AND SSPP.PSE_ID = S.PARTICIPANT_PSE_ID\n	  AND :statement_end_date \n	    BETWEEN SSPP.BEGIN_DATE AND NVL(SSPP.END_DATE, DATE '9999-12-31')\nORDER BY 1
            IS_MULTICOLUMN:#0
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@OCT-03-2012 10:55:46
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2012 16:36:54
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-(case when Use_Euro = 0 then FixedMORateSuppliers else FixedMORateSuppliers *  ExchangeRate end)/12
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-24-2014 14:34:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CALC_UTIL.GET_MARKET_PRICE(${FX Euro to GBP},MM_SEM_SHADOW_BILL.GET_FMOC_PUBLICATION_DATE(:statement_type, :statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-14-2012 17:05:42
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@OCT-01-2011 00:00:00
            END_DATE:@SEP-30-2012 00:00:00
            FORMULA:"393
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:18:00
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@OCT-01-2012 00:00:00
            END_DATE:@SEP-30-2013 00:00:00
            FORMULA:"366
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:18:00
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@OCT-01-2013 00:00:00
            END_DATE:@SEP-30-2014 00:00:00
            FORMULA:"288
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-28-2014 17:18:00
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@OCT-01-2014 00:00:00
            END_DATE:"
            FORMULA:"159
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euro rate
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAR-26-2015 14:43:45
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0067
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@SEP-14-2012 17:05:42
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0067
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"FMOCSUP_EX
            ENTRY_DATE:@SEP-14-2012 14:09:27
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0068
    COMPONENT_NAME:"FMOC_EX
    COMPONENT_ALIAS:"FMOC_EX
    COMPONENT_DESC:"Fixed Market Operator Charge
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Month
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"FMOC_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"Last
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@OCT-01-2012 16:56:19
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0068
            REFERENCE_NAME:"Market_Price_Id
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@MAY-17-2010 12:41:03
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('SU', 'DU', 'PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:58:46
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-ChargeQty / 12
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-20-2012 16:31:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"ChargeRate
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeQty
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when IsSupplier=1 then 1 else MM_SEM_SHADOW_BILL.GET_REGISTERED_CAPACITY(:now, Service_Point, 'Generation') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ChargeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then Rate else Rate *  ExchangeRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ExchangeRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CALC_UTIL.GET_MARKET_PRICE(Market_Price_Id,MM_SEM_SHADOW_BILL.GET_FMOC_PUBLICATION_DATE(:statement_type, :statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-14-2010 14:08:57
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@NOV-01-2007 00:00:00
            END_DATE:@SEP-30-2012 00:00:00
            FORMULA:"116
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euros
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-20-2012 16:31:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateGenerators
            BEGIN_DATE:@OCT-01-2012 00:00:00
            END_DATE:"
            FORMULA:"100
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euros
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2012 16:56:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@NOV-01-2007 00:00:00
            END_DATE:@SEP-30-2012 00:00:00
            FORMULA:"543
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euros
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-20-2012 16:31:51
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"FixedMORateSuppliers
            BEGIN_DATE:@OCT-01-2012 00:00:00
            END_DATE:"
            FORMULA:"366
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"Euros
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2012 16:56:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IsSupplier
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_SUPPLIER_UNIT(:now, Service_Point)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Rate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when IsSupplier=1 then FixedMORateSuppliers else FixedMORateGenerators end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0068
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0068
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"FMOC_EX
            ENTRY_DATE:@JUL-12-2007 16:22:46
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0069
    COMPONENT_NAME:"IMPCEX
    COMPONENT_ALIAS:"IMPCEX
    COMPONENT_DESC:"Imperfections Charges to Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"IMPCEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:09:09
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CurrencyRateToday
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@AUG-25-2008 12:45:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"IMPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0040
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@AUG-25-2008 12:45:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"NDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0035
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-20-2009 13:50:02
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 10:59:20
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SNDLF * IMPF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:20:11
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"IMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('AIND',:billing_entity,:statement_type,:cut_now, 'AIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:56:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ANIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('ANIND',:billing_entity,:statement_type,:cut_now, 'ANIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:56:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrencyRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then 0 when UsePreviousDay = 1 then CurrencyRateToday else MM_SEM_SHADOW_BILL.GET_RATE_PRIOR_DAY(:now, 'Trading Day Exchange Rate: Euro to Pound') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then IMPrice else IMPrice * CurrencyRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"assume Imp Price is in Euro
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-25-2008 11:18:04
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMPC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"NDLF * IMPF * IMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-20-2009 13:50:02
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-25-2008 12:45:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDA
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"COALESCE(CASE WHEN REVLF = 0 OR NDAF = 0 THEN NULL ELSE REVLF * NDAF END, MM_SEM_SHADOW_BILL.GET_NDA(:statement_type,:cut_now,Service_Point), 0.0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:09:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"RMVIP * (NDLF * (1-NIEP) / AIND) + (1 - RMVIP) * (NDLF * NIEP/ANIND)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:15:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NIEP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('NIEP',:billing_entity,:statement_type,:cut_now,NULL,Service_Point)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:56:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"REVLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('REVLF',:billing_entity,:statement_type,:cut_now, 'REVLF_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:56:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"RMVIP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_RMVIP(Service_Point,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:15:16
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SNDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"NDLF + NDA
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:09:09
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UsePreviousDay
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when trunc(:now) = :now then 1 when :now <= (trunc(:now) + (6/24)) then 0 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-25-2008 12:45:38
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0069
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-25-2008 12:45:38
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0070
    COMPONENT_NAME:"IMPCJEX
    COMPONENT_ALIAS:"IMPCJEX
    COMPONENT_DESC:"Imperfections Charges to Error Supplier Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"IMPCJEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:"
    IS_DEFAULT_TEMPLATE:"
    KWH_MULTIPLIER:"
    ANCILLARY_SERVICE_ID:"
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@JUL-22-2009 15:08:27
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CurrencyRateToday
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:08:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"IMPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0040
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:08:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"NDLFESU
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0035
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 11:00:10
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"nvl(NDLFESU,0) * IMPF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"IMP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrencyRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then 0 when UsePreviousDay = 1 then CurrencyRateToday else MM_SEM_SHADOW_BILL.GET_RATE_PRIOR_DAY(:now, 'Trading Day Exchange Rate: Euro to Pound') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then IMPrice else IMPrice * CurrencyRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"assume Imp Price is in Euro
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMPC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(NDLFESU,0) * IMP * IMPF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"for effective dating
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IMPF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UsePreviousDay
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when trunc(:now) = :now then 1 when :now <= (trunc(:now) + (6/24)) then 0 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0070
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0071
    COMPONENT_NAME:"MWPEX
    COMPONENT_ALIAS:"MWPEX
    COMPONENT_DESC:"Make Whole Payment for Generator Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"MWPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:14:55
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0071
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:15:55
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0032
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 14:59:43
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 11:01:18
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MWPEX
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when MSQ > 0 then MM_SEM_SHADOW_BILL.GET_NO_LOAD_COST(:now, Service_Point, 'Generation') else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 else nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE(:now, Service_Point, MSQ, 'Generation'),0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 else nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION(:now, Service_Point, 'Generation', MSQ), 0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQ * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when WarmthStateMSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_START_UP_COST(:now, Service_Point, 'Generation', WarmthStateMSQ) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEX
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 else MM_SEM_SHADOW_BILL.CALC_TOTAL_MWPEX(:now, :billing_entity, :product, :component, :statement_type, Service_Point, MWPEXuh) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"proc only returns non-zero on last BP interval
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEXuh
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 else ((MOP - SMP) * MSQLF + (MNLC*TLAF) + MSQCCLF) * TPD + (MSUC*TLAF) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:14:55
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeHot
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0  when MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_HOT_TIME(:now, Service_Point, 'Generation') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MaxTimeWarm
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_MAX_WARM_TIME(:now, Service_Point, 'Generation') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NumHrsDownMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when MSQ = 0 then 0 else MM_SEM_SHADOW_BILL.GET_HOURS_DOWN(:cut_now, Service_Point, 'Generation',  MaxTimeWarm, :statement_type, 'Energy') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 13:15:55
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 1 else MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UnderTest
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_UNIT_UNDER_TEST(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"if under test payment is 0
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0071
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"WarmthStateMSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then 0 when NumHrsDownMSQ = 0 then 0 when NumHrsDownMSQ < MaxTimeHot then 3 when NumHrsDownMSQ < MaxTimeWarm then 2 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0072
    COMPONENT_NAME:"MWPIUEX
    COMPONENT_ALIAS:"MWPIUEX
    COMPONENT_DESC:"Make Whole Payment for Interconnector Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"MWPIUEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@AUG-06-2015 14:52:54
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0072
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:17:32
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0034
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:26:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, Agreement_Type, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(service_point_name, agreement_type, service_point_id)\n  FROM (select distinct s.service_point_name, s.service_point_id, it.agreement_type\n         from interchange_transaction it,\n              service_point           s,\n              sem_settlement_entity   s1,\n              sem_settlement_entity   s2,\n              interchange_contract    c\n        where it.transaction_type = 'Nomination'\n          and s1.settlement_pse_id = :billing_entity\n          and c.contract_id = it.contract_id\n          and s2.settlement_pse_id = c.billing_entity_id\n          and s1.participant_pse_id = s2.participant_pse_id\n          AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#2
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-26-2012 20:17:14
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MWPEX
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:52:54
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:now, Service_Point, MSQIUG, 'Nomination',${Agreement_Type}),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:49:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', MSQIUG, ${Agreement_Type}), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-26-2012 20:23:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQIUG<0 then MSQIUG/TLAF else MSQIUG*TLAF end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:46:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-06-2015 14:52:54
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEX
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.CALC_TOTAL_MWPEX(:now, :billing_entity, :product, :component, :statement_type, Service_Point, MWPEXuh)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEXuh
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"((MOP - SMP) * MSQIUGLF + MNLC + MSQCCLF) * TPD + MSUC
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:52:54
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0072
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0073
    COMPONENT_NAME:"MWPIUGEX
    COMPONENT_ALIAS:"MWPIUGEX
    COMPONENT_DESC:"Make Whole Payment for Interconnector Unit Gates
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"MWPIUGEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@AUG-06-2015 14:53:36
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0073
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:17:32
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQIUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0034
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:26:49
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, Agreement_Type, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(service_point_name, agreement_type, service_point_id)\n  FROM (select distinct s.service_point_name, s.service_point_id, it.agreement_type\n         from interchange_transaction it,\n              service_point           s,\n              sem_settlement_entity   s1,\n              sem_settlement_entity   s2,\n              interchange_contract    c\n        where it.transaction_type = 'Nomination'\n          and s1.settlement_pse_id = :billing_entity\n          and c.contract_id = it.contract_id\n          and s2.settlement_pse_id = c.billing_entity_id\n          and s1.participant_pse_id = s2.participant_pse_id\n          AND s.service_point_id = it.pod_id)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#2
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-26-2012 20:17:14
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MWPEX
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MNLC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:53:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE_IU(:now, Service_Point, MSQIUG, 'Nomination',${Agreement_Type}),0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:49:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MM_SEM_SHADOW_BILL.GET_COST_CORRECTION_IU(:cut_now, Service_Point, 'Nomination', MSQIUG, ${Agreement_Type}), 0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-26-2012 20:23:58
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQCCLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MSQCC * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQIUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when MSQIUG<0 then MSQIUG/TLAF else MSQIUG*TLAF end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:46:43
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSUC
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@AUG-06-2015 14:53:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEX
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.CALC_TOTAL_MWPEX(:now, :billing_entity, :product, :component, :statement_type, Service_Point, MWPEXuh)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWPEXuh
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"((MOP - SMP) * MSQIUGLF + MNLC + MSQCCLF) * TPD + MSUC
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@AUG-06-2015 14:53:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0073
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0074
    COMPONENT_NAME:"REALLOC
    COMPONENT_ALIAS:"REALLOC
    COMPONENT_DESC:"REALLOC
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"Day
    IS_REBILL:#0
    IS_TAXED:#0
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"REALLOC
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@MAY-12-2010 15:45:33
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ExchangeRateEuroToPound
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@MAY-10-2010 12:59:00
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ExchangeRatePoundToEuro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0048
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@MAY-10-2010 13:00:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Start_Time,Counterparty,Agreement_Name ,Purchaser_Id,Seller_Id, MONETARY_VALUE,IS_VALID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(Start_Time, Counter_Party, Agreement_Name,Purchaser_Id,Seller_Id, Monetary_value, is_valid) \nFROM (SELECT NVL(TIM.TRAIT_VAL,'07:00') Start_Time, \n	PSE.PSE_NAME Counter_Party, \n	TXN.AGREEMENT_TYPE Agreement_Name, \n	TXN.PURCHASER_ID Purchaser_Id,\n	TXN.SELLER_ID Seller_Id,\n	CASE WHEN TXN.SELLER_ID = SE.PARTICIPANT_PSE_ID \n		THEN -1 \n		ELSE 1\n	END * TO_NUMBER(SCHED.TRAIT_VAL) MONETARY_VALUE, \n	CASE WHEN NVL(REJ.TRAIT_VAL,0) = 0 \n		THEN 1 \n		ELSE 0 \n	END IS_VALID\n	FROM SEM_SETTLEMENT_ENTITY SE, IT_COMMODITY ITC, INTERCHANGE_TRANSACTION TXN, IT_TRAIT_SCHEDULE SCHED, IT_TRAIT_SCHEDULE TIM, IT_TRAIT_SCHEDULE REJ, PURCHASING_SELLING_ENTITY PSE \n	WHERE SE.SETTLEMENT_PSE_ID = :billing_entity AND \n		SUBSTR(ITC.COMMODITY_TYPE,1,1) = SUBSTR(SE.MARKET_NAME,1,1) AND \n		TXN.COMMODITY_ID = ITC.COMMODITY_ID AND \n		TXN.TRANSACTION_TYPE = 'SRA' AND \n		SE.PARTICIPANT_PSE_ID IN (TXN.SELLER_ID, TXN.PURCHASER_ID) AND \n		:statement_date BETWEEN TXN.BEGIN_DATE AND TXN.END_DATE AND \n		SCHED.TRANSACTION_ID = TXN.TRANSACTION_ID AND \n		SCHED.SCHEDULE_STATE = 1 AND \n		SCHED.SCHEDULE_DATE BETWEEN :begin_date AND :end_date AND \n		SCHED.TRAIT_GROUP_ID = 1203 AND \n		SCHED.TRAIT_INDEX = 1 AND \n		SCHED.SET_NUMBER = 1 AND \n		SCHED.STATEMENT_TYPE_ID = 0 AND \n		TIM.TRANSACTION_ID(+) = SCHED.TRANSACTION_ID AND \n		TIM.SCHEDULE_STATE(+) = 1 AND \n		TIM.SCHEDULE_DATE(+) = SCHED.SCHEDULE_DATE AND \n		TIM.TRAIT_GROUP_ID(+) = 1201 AND \n		TIM.TRAIT_INDEX(+) = 1 AND \n		TIM.SET_NUMBER(+) = 1 AND \n		TIM.STATEMENT_TYPE_ID(+) = 0 AND \n		REJ.TRANSACTION_ID(+) = SCHED.TRANSACTION_ID AND \n		REJ.SCHEDULE_STATE(+) = 1 AND \n		REJ.SCHEDULE_DATE(+) = SCHED.SCHEDULE_DATE AND \n		REJ.TRAIT_GROUP_ID(+) = 1258 AND \n		REJ.TRAIT_INDEX(+) = 1 AND \n		REJ.SET_NUMBER(+) = 1 AND \n		REJ.STATEMENT_TYPE_ID(+) = 0 AND\n		PSE.PSE_ID = CASE WHEN TXN.SELLER_ID = SE.PARTICIPANT_PSE_ID \n				THEN TXN.PURCHASER_ID \n				ELSE TXN.SELLER_ID \n				END\n	ORDER BY 1, 2, 3)
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#3
            IS_INNER_LOOP:#1
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@MAY-12-2010 15:24:54
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when IsValid = 1 then MonetaryValue else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IsValid
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"TO_NUMBER(IS_VALID)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-11-2010 11:26:27
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MonetaryValue
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"CASE WHEN (Use_Euro_for_Purchaser = 0 AND Use_Euro_for_Seller = 0) OR (Use_Euro_for_Purchaser = 1 AND Use_Euro_for_Seller = 1) THEN TO_NUMBER(MONETARY_VALUE) WHEN (Use_Euro_for_Purchaser = 0 AND Use_Euro_for_Seller = 1) THEN  TO_NUMBER(MONETARY_VALUE) * ExchangeRateEuroToPound ELSE TO_NUMBER(MONETARY_VALUE) * ExchangeRatePoundToEuro END
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-11-2010 11:34:56
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro_for_Purchaser
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(Purchaser_Id, :statement_date, 1)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAY-12-2010 15:45:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0074
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro_for_Seller
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(Seller_Id, :statement_date, 1)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@MAY-12-2010 15:45:33
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0074
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"REALLOC
            ENTRY_DATE:@JUL-10-2007 18:58:13
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0075
    COMPONENT_NAME:"TCHAREX
    COMPONENT_ALIAS:"TCHAREX
    COMPONENT_DESC:"Testing Charge
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"TCHAREX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:11:36
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0075
            REFERENCE_NAME:"SEM Testing Tariff
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0013
            ENTRY_DATE:@MAY-29-2012 14:11:36
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CurrencyRateToday
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:11:59
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MeteredGen
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0030
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(service_point_name, service_point_id)\n   FROM (SELECT DISTINCT s.service_point_name, s.service_point_id\n           FROM service_point             s,\n                sem_service_point_pse     p,\n                temporal_entity_attribute t,\n                interchange_transaction   i,\n                it_trait_schedule         tr\n          WHERE p.pse_id =	\n                (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n		  and t.attribute_id =\n	  (select attribute_id from entity_attribute where attribute_name = 'Resource Type') \n	  and attribute_val in ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU') \n	  and p.pod_id = t.owner_entity_id \n            and s.service_point_id = p.pod_id\n            and :statement_date between p.begin_date and\n                nvl(p.end_date, DATE '9999-12-31')\n            AND i.transaction_type = 'Generation'\n            AND i.pod_id = s.service_point_id\n            AND tr.transaction_id = i.transaction_id\n            AND tr.trait_group_id = 1204\n            AND tr.trait_val = '1'\n            AND(trunc(tr.schedule_date) = :statement_date OR trunc(tr.schedule_date) = :statement_date - 1)\n            AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31'))
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@MAY-29-2012 14:10:20
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"MGLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"-Tariff
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-18-2010 14:35:30
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrencyRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then 0 when UsePreviousDay = 1 then CurrencyRateToday else MM_SEM_SHADOW_BILL.GET_RATE_PRIOR_DAY(:now, 'Trading Day Exchange Rate: Euro to Pound') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"IsUnderTest
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_UNIT_UNDER_TEST(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-18-2010 14:35:31
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(MeteredGen,0) * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Tariff
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then TariffRate * IsUnderTest else TariffRate * CurrencyRate  * IsUnderTest end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-18-2010 14:35:31
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TariffRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TESTING_TARIFF(:now, Service_Point, ${SEM Testing Tariff})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:11:36
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UsePreviousDay
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when trunc(:now) = :now then 1 when :now <= (trunc(:now) + (6/24)) then 0 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0075
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0075
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"TCHAREX
            ENTRY_DATE:@JUL-23-2007 09:16:05
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0076
    COMPONENT_NAME:"UNIMPEX
    COMPONENT_ALIAS:"UNIMPEX
    COMPONENT_DESC:"Uninstructed Imbalance Payment for Generator Units
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#1
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"UNIMPEX
    COMPONENT_CATEGORY:"EN
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@SEP-14-2012 12:22:58
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
        begin row
            COMPONENT_ID:*COMPONENT-0076
            REFERENCE_NAME:"Sem Euro to GBP Price
            ENTITY_DOMAIN_ID:#-610
            ENTITY_ID:*MARKET_PRICE-0047
            ENTRY_DATE:@OCT-01-2010 13:18:25
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"ActualOutput
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0030
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"DQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0028
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUN-04-2008 15:35:37
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"MSQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Sum
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-200
            ENTITY_TYPE:"R
            ENTITY_ID:*SYSTEM_REALM-0032
            WHAT_FIELD:"AMOUNT
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-23-2012 13:02:06
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"SMP_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Select
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0046
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:12:22
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point,POD_ID,ResourceType
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id, t.attribute_val)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val in\n       ('PPMG', 'PPTG', 'VPMG', 'VPTG', 'APTG', 'NGU', 'DU')\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@APR-19-2010 15:40:36
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"case when (AOLFadj >= DQLF and AOLFadj <= (DQLF + TOLOGLF)) then TPD * DOP * (AOLFadj - DQLF)             when (AOLFadj >= (DQLF - TOLUGLF) and AOLFadj < DQLF) then TPD * Greatest(SMP, DOP) * (AOLFadj - DQLF) when AOLFadj > (DQLF + TOLOGLF) then TPD * DOP             * TOLOGLF + TPD * (AOLFadj - (DQLF + TOLOGLF)) * (DOP - DOG * abs(DOP))                              when AOLFadj < (DQLF - TOLUGLF) then -TPD * Greatest(SMP, DOP) * TOLUGLF - TPD * ((DQLF - TOLUGLF) - AOLFadj) * (Greatest(DOP + PUG * abs(DOP), SMP + PUG * abs(SMP))) else 0 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@SEP-14-2012 12:22:59
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AOLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(ActualOutput,0) * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AOLFadj
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"AOLF / 0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"PIR in MW, calc in MWh
            ROW_NUMBER:#22
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AVGFRQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_AVGFRQ(:cut_now)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DOG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.2
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 or ResourceType = 'VPTG' then SMP when ResourceType = 'PPTG' and AOLF <= MSQLF then SMP else nvl(MM_SEM_SHADOW_BILL.GET_DISPATCH_OFFER_PRICE(:now, Service_Point, DQ, 'Generation'),0) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#14
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 15:29:03
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"DQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"nvl(DQ,0) * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ENGLIM
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"Greatest(abs(DQ) * ENGTOL, MWTOL)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#15
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ENGTOL
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.01
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MSQLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when UnderTest = 1 then DQ*TLAF*TPD else MSQ*TLAF*TPD end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"for effective dating; assume MSQ is in MW, not MWh
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"MWTOL
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"1
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NORFRQ
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_NORFRQ(:cut_now)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"PUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.2
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"RegCap
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_REGISTERED_CAPACITY(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#17
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SMP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"SMP_Euro*MM_SEM_SHADOW_BILL.GET_EXCHANGE_RATE(:billing_entity,:now,${Sem Euro to GBP Price})
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@OCT-01-2010 13:18:25
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TLAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_TLAF(:cut_now, Service_Point, :billing_entity)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TOLOG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when (AVGFRQ <= NORFRQ and UREG * NORFRQ <> 0) then (((nvl(NORFRQ,0) - nvl(AVGFRQ,0)) * RegCap) / (UREG * NORFRQ)) + ENGLIM else ENGLIM end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#18
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TOLOGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"TOLOG * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#20
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TOLUG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when (AVGFRQ > NORFRQ and UREG * NORFRQ <> 0) then (((nvl(AVGFRQ,0) - nvl(NORFRQ,0)) * RegCap) / (UREG * NORFRQ)) + ENGLIM else ENGLIM end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#19
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TOLUGLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"TOLUG * TLAF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#21
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"TPD
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.5
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UREG
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"0.04
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#16
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUL-23-2012 13:21:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0076
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UnderTest
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_IS_UNIT_UNDER_TEST(:now, Service_Point, 'Generation')
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
        begin row
            EXTERNAL_SYSTEM_ID:#1000
            ENTITY_DOMAIN_ID:#-630
            ENTITY_ID:*COMPONENT-0076
            IDENTIFIER_TYPE:"Default
            EXTERNAL_IDENTIFIER:"UNIMPEX
            ENTRY_DATE:@JUN-05-2007 15:29:25
        end row
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0077
    COMPONENT_NAME:"VMOCJ_EX
    COMPONENT_ALIAS:"VMOCJ_EX
    COMPONENT_DESC:"VMOCJ_EX
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#1
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"VMOCJ_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"
    LOSS_ADJ_TYPE:"
    ENTRY_DATE:@MAY-26-2010 17:02:34
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CurrencyRateToday
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:01:03
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"VarMOPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0041
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:01:03
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 11:06:04
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"NDLFESU
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"VMOP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrencyRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then 0 when UsePreviousDay = 1 then CurrencyRateToday else MM_SEM_SHADOW_BILL.GET_RATE_PRIOR_DAY(:now, 'Trading Day Exchange Rate: Euro to Pound') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDLFESU
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_NDLF('VMOC',Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-26-2010 17:01:45
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UsePreviousDay
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when trunc(:now) = :now then 1 when :now <= (trunc(:now) + (6/24)) then 0 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0077
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VMOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VarMOPrice else VarMOPrice * CurrencyRate end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:COMPONENT
    table_alias:COMPONENT
    COMPONENT_ID:*COMPONENT-0078
    COMPONENT_NAME:"VMOC_EX
    COMPONENT_ALIAS:"VMOC_EX
    COMPONENT_DESC:"Variable Market Operator Charge
    COMPONENT_ENTITY:"PSE
    CHARGE_TYPE:"?
    RATE_STRUCTURE:"Formula
    RATE_INTERVAL:"30 Minute
    IS_REBILL:#0
    IS_TAXED:#1
    IS_CUSTOM_CHARGE:#0
    IS_CREDIT_CHARGE:#0
    IS_INCLUDE_TX_LOSS:#0
    IS_INCLUDE_DX_LOSS:#0
    TEMPLATE_ID:#0
    MARKET_PRICE_ID:#0
    SERVICE_POINT_ID:#0
    MODEL_ID:#0
    EVENT_ID:#0
    COMPONENT_REFERENCE:"?
    INVOICE_GROUP_ID:#0
    INVOICE_GROUP_ORDER:#0
    COMPUTATION_ORDER:#0
    QUANTITY_UNIT:"?
    CURRENCY_UNIT:"?
    QUANTITY_TYPE:"?
    EXTERNAL_IDENTIFIER:"VMOC_EX
    COMPONENT_CATEGORY:"MO
    GL_DEBIT_ACCOUNT:"?
    GL_CREDIT_ACCOUNT:"?
    FIRM_NON_FIRM:"?
    EXCLUDE_FROM_INVOICE:#0
    EXCLUDE_FROM_INVOICE_TOTAL:#0
    IMBALANCE_TYPE:"?
    ACCUMULATION_PERIOD:#0
    BASE_COMPONENT_ID:#0
    BASE_LIMIT_ID:#0
    MARKET_TYPE:"?
    MARKET_PRICE_TYPE:"?
    WHICH_INTERVAL:"First
    LMP_PRICE_CALC:"?
    LMP_INCLUDE_EXT:#0
    LMP_INCLUDE_SALES:"0
    CHARGE_WHEN:"?
    BILATERALS_SIGN:#1
    LMP_COMMODITY_ID:#0
    LMP_BASE_COMMODITY_ID:#0
    USE_ZONAL_PRICE:#0
    ALTERNATE_PRICE:"?
    ALTERNATE_PRICE_FUNCTION:"?
    EXCLUDE_FROM_BILLING_EXPORT:#0
    IS_DEFAULT_TEMPLATE:#0
    KWH_MULTIPLIER:#0
    ANCILLARY_SERVICE_ID:#0
    APPLY_RATE_FOR:"?
    LOSS_ADJ_TYPE:#0
    ENTRY_DATE:@MAY-29-2012 14:09:34
    begin subtable
        table_name:COMPONENT_BLOCK_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COINCIDENT_PEAK
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMBINATION
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_COMPOSITE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_CONVERSION_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FLAT_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ENTITY_REF
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_INPUT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"CurrencyRateToday
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0047
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:00:46
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            INPUT_NAME:"VarMOPrice
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FUNCTION:"Choose
            WHERE_CLAUSE:"
            ENTITY_DOMAIN_ID:#-610
            ENTITY_TYPE:"E
            ENTITY_ID:*MARKET_PRICE-0041
            WHAT_FIELD:"PRICE
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            STATE_FML:"
            STATEMENT_TYPE_FML:"
            SET_NUMBER_FML:"
            CODE_FML:"
            MEASUREMENT_SOURCE_FML:"
            ENTRY_DATE:@JUL-22-2009 15:00:46
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_ITERATOR
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            ITERATOR_NAME:"Service_Point, POD_ID
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ITERATOR_QUERY:"SELECT STRING_COLLECTION(s.service_point_name, s.service_point_id)\n  FROM service_point             s,\n       sem_service_point_pse     p,\n       temporal_entity_attribute t\n WHERE pse_id = (SELECT participant_pse_ID\n                   from SEM_SETTLEMENT_ENTITY\n                  where settlement_pse_id = :billing_entity)\n   and t.attribute_id =\n       (select attribute_id\n          from entity_attribute\n         where attribute_name = 'Resource Type')\n   and attribute_val = 'SU'\n   and p.pod_id = t.owner_entity_id\n   and s.service_point_id = p.pod_id\n   and :statement_date between p.begin_date and\n       nvl(p.end_date, DATE '9999-12-31') AND :statement_date BETWEEN t.begin_date AND nvl(t.end_date, DATE '9999-12-31')
            IS_MULTICOLUMN:#1
            IDENT_COLUMNS:#1
            IS_INNER_LOOP:#0
            COMMENTS:"
            ROW_NUMBER:#1
            ENTRY_DATE:@JUN-11-2008 11:06:45
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_PARAMETER
        relationship:COMPONENT_ID
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_RESULT
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_FORMULA_VARIABLE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE QUANTITY#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"SNDLF
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"#CHARGE RATE#
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            FORMULA:"VMOP
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#0
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@JUN-04-2008 15:40:19
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"AIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('AIND',:billing_entity,:statement_type,:cut_now, 'AIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#8
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:58:12
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"ANIND
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('ANIND',:billing_entity,:statement_type,:cut_now, 'ANIND_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#9
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:58:12
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"CurrencyRate
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then 0 when UsePreviousDay = 1 then CurrencyRateToday else MM_SEM_SHADOW_BILL.GET_RATE_PRIOR_DAY(:now, 'Trading Day Exchange Rate: Euro to Pound') end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#3
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDA
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"COALESCE(CASE WHEN REVLF = 0 OR NDAF = 0 THEN NULL ELSE REVLF * NDAF END, MM_SEM_SHADOW_BILL.GET_NDA(:statement_type,:cut_now,Service_Point), 0.0)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#12
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:09:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDAF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"RMVIP * (NDLF * (1-NIEP) / AIND) + (1 - RMVIP) * (NDLF * NIEP/ANIND)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#10
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_NDLF('VMOC',Service_Point,:statement_type,:cut_now,:statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#5
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"NIEP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('NIEP',:billing_entity,:statement_type,:cut_now,NULL,Service_Point)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#7
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:58:12
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"REVLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_PIR_VALUE('REVLF',:billing_entity,:statement_type,:cut_now, 'REVLF_' || MM_SEM_SHADOW_BILL.GET_JURISDICTION(:billing_entity,:statement_date))
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#11
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-25-2011 11:58:12
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"RMVIP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_RMVIP(Service_Point,:statement_date)
            IS_MULTICOLUMN:"
            IS_PLSQL:"
            COMMENTS:"
            ROW_NUMBER:#6
            VIEW_ORDER:"
            PERSIST_VALUE:"
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"SNDLF
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"NDLF + NDA
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#13
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@MAY-29-2012 14:09:34
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"UsePreviousDay
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when trunc(:now) = :now then 1 when :now <= (trunc(:now) + (6/24)) then 0 else 1 end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#2
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"Use_Euro
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"MM_SEM_SHADOW_BILL.GET_CURRENCY(:billing_entity, :statement_date)
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"
            ROW_NUMBER:#1
            VIEW_ORDER:"
            PERSIST_VALUE:#0
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
        begin row
            COMPONENT_ID:*COMPONENT-0078
            SUB_COMPONENT_TYPE:"?
            SUB_COMPONENT_ID:#0
            VARIABLE_NAME:"VMOP
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            FORMULA:"case when Use_Euro = 0 then VarMOPrice else VarMOPrice * nvl(CurrencyRate,1) end
            IS_MULTICOLUMN:#0
            IS_PLSQL:#0
            COMMENTS:"assume VarMOPrice is in EUROs
            ROW_NUMBER:#4
            VIEW_ORDER:"
            PERSIST_VALUE:#1
            ENTRY_DATE:@FEB-23-2011 16:16:33
        end row
    end subtable
    begin subtable
        table_name:COMPONENT_IMBALANCE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_MARKET_PRICE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_PERCENTAGE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:COMPONENT_TOU_RATE
        relationship:COMPONENT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630
    end subtable
    begin subtable
        table_name:TEMPORAL_ENTITY_ATTRIBUTE
        relationship:OWNER_ENTITY_ID=COMPONENT_ID;ENTITY_DOMAIN_ID=-630;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0079
    PRODUCT_NAME:"SEM CAPEXG
    PRODUCT_ALIAS:"SEM CAPEXG
    PRODUCT_DESC:"SEM CAPEXG
    PRODUCT_EXTERNAL_IDENTIFIER:"CAPEXG
    PRODUCT_CATEGORY:"CA
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@SEP-27-2007 15:18:26
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0079
            COMPONENT_ID:*COMPONENT-0054
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:08:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0079
            COMPONENT_ID:*COMPONENT-0055
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:08:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0079
            COMPONENT_ID:*COMPONENT-0056
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:08:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0079
            COMPONENT_ID:*COMPONENT-0057
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:08:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0079
            COMPONENT_ID:*COMPONENT-0058
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@APR-24-2012 11:29:09
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0080
    PRODUCT_NAME:"SEM ENGEXG
    PRODUCT_ALIAS:"SEM ENGEXG
    PRODUCT_DESC:"SEM ENGEXG
    PRODUCT_EXTERNAL_IDENTIFIER:"ENGEXG
    PRODUCT_CATEGORY:"EN
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@MAR-16-2008 12:33:43
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0036
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-21-2007 16:44:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0037
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-21-2007 16:44:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0038
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@APR-24-2012 11:38:29
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0059
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:18
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0060
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-21-2007 16:44:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0061
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:18
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0062
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:18
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0063
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@APR-24-2012 11:20:38
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0069
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:18
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0070
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:18
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0071
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-21-2007 16:44:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0072
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-21-2007 16:44:21
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0073
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@APR-24-2012 11:25:22
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0075
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-27-2007 15:29:24
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0080
            COMPONENT_ID:*COMPONENT-0076
            BEGIN_DATE:@JAN-01-1900 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-20-2007 16:39:44
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0081
    PRODUCT_NAME:"SEM FMOEXG
    PRODUCT_ALIAS:"SEM FMOEXG
    PRODUCT_DESC:"SEM FMOEXG
    PRODUCT_EXTERNAL_IDENTIFIER:"FMOEXG
    PRODUCT_CATEGORY:"MO
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@SEP-20-2012 15:52:24
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0081
            COMPONENT_ID:*COMPONENT-0064
            BEGIN_DATE:@NOV-01-2012 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-20-2012 15:52:24
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0081
            COMPONENT_ID:*COMPONENT-0065
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@APR-23-2012 17:00:09
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0081
            COMPONENT_ID:*COMPONENT-0066
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-20-2012 15:52:24
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0081
            COMPONENT_ID:*COMPONENT-0067
            BEGIN_DATE:@NOV-01-2012 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-20-2012 15:52:24
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0081
            COMPONENT_ID:*COMPONENT-0068
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:@OCT-31-2012 00:00:00
            ENTRY_DATE:@SEP-20-2012 15:52:24
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0082
    PRODUCT_NAME:"SEM MISC
    PRODUCT_ALIAS:"SEM MISC
    PRODUCT_DESC:"SEM MISC
    PRODUCT_EXTERNAL_IDENTIFIER:"SEM MISC
    PRODUCT_CATEGORY:"SEM MISC
    BEGIN_DATE:@JAN-01-2007 00:00:00
    END_DATE:@DEC-31-2020 00:00:00
    ENTRY_DATE:@OCT-11-2007 14:16:31
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0082
            COMPONENT_ID:*COMPONENT-0012
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@OCT-03-2007 17:51:16
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0082
            COMPONENT_ID:*COMPONENT-0020
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@AUG-31-2010 11:30:11
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0082
            COMPONENT_ID:*COMPONENT-0021
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-02-2010 15:35:08
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0082
            COMPONENT_ID:*COMPONENT-0022
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-28-2007 16:53:10
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0082
            COMPONENT_ID:*COMPONENT-0074
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@OCT-11-2007 14:16:31
        end row
    end subtable
end object
begin object
    table_name:PRODUCT
    table_alias:PRODUCT
    PRODUCT_ID:*PRODUCT-0083
    PRODUCT_NAME:"SEM MOEXG
    PRODUCT_ALIAS:"SEM MOEXG
    PRODUCT_DESC:"SEM MOEXG
    PRODUCT_EXTERNAL_IDENTIFIER:"MOEXG
    PRODUCT_CATEGORY:"MO
    BEGIN_DATE:@JAN-01-1900 00:00:00
    END_DATE:@DEC-31-9999 00:00:00
    ENTRY_DATE:@SEP-27-2007 15:25:11
    begin subtable
        table_name:EXTERNAL_SYSTEM_IDENTIFIER
        relationship:ENTITY_ID=PRODUCT_ID;ENTITY_DOMAIN_ID=-620
    end subtable
    begin subtable
        table_name:PRODUCT_COMPONENT
        relationship:PRODUCT_ID;BEGIN_DATE <= (DATE '2020-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND) AND NVL(END_DATE, DATE '9999-12-31') >= (DATE '2000-01-01' + INTERVAL '00' HOUR + INTERVAL '00' MINUTE + INTERVAL '00' SECOND)
        begin row
            PRODUCT_ID:*PRODUCT-0083
            COMPONENT_ID:*COMPONENT-0077
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:59
        end row
        begin row
            PRODUCT_ID:*PRODUCT-0083
            COMPONENT_ID:*COMPONENT-0078
            BEGIN_DATE:@JAN-01-2007 00:00:00
            END_DATE:"
            ENTRY_DATE:@SEP-11-2007 16:09:59
        end row
    end subtable
end object

CREATE OR REPLACE PACKAGE MM_SEM_OFFER IS
-- $Revision: 1.13 $

  -- Author  : JHUMPHRIES
  -- Created : 4/3/2007 12:19:46 PM
  -- Purpose : Submit offer data to SEM and Query offer data from SEM

TYPE REF_CURSOR IS REF CURSOR;

FUNCTION WHAT_VERSION RETURN VARCHAR2;

PROCEDURE SUBMIT_OFFERS
	(
	p_ENTITY_LIST IN VARCHAR2,
	p_ENTITY_LIST_DELIMITER IN CHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE SUBMIT_SRA_CANCELLATION
  (
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );
  
PROCEDURE SUBMIT_UUT
  (
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );

PROCEDURE QUERY_OFFERS
  (
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );
  
PROCEDURE QUERY_UUT
  (
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );

PROCEDURE OFFER_ENTITY_LIST
  (
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_INCLUDE_ALL IN NUMBER,
  p_LABEL OUT VARCHAR2,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2,
  p_CURSOR OUT REF_CURSOR
  );

PROCEDURE SRA_OFFER_ENTITY_LIST
  (
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_INCLUDE_ALL IN NUMBER,
  p_CANCELLED IN NUMBER,
  p_LABEL OUT VARCHAR2,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2,
  p_CURSOR OUT GA.REFCURSOR
  );

/*
** OFFER_ENTITY_LIST_GATE is similar to OFFER_ENTITY_LIST except it is used in retrieving
** transaction lists of bid requests except that it has specific requirement to return only
** certain types of transactions
*/
PROCEDURE OFFER_ENTITY_LIST_GATE
  (
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_INCLUDE_ALL IN NUMBER,
  p_GATE_WINDOW IN VARCHAR2,
  p_TRANSACTION_TYPE IN VARCHAR2,
  p_LABEL OUT VARCHAR2,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2,
  p_CURSOR OUT REF_CURSOR
  );
  
/*
** OFFER_ENTITY_LIST_GATE_UUT is similar to OFFER_ENTITY_LIST_GATE except it filters
** transaction lists only if the Unit under test is set for the entire begin and end date range
*/
PROCEDURE OFFER_ENTITY_LIST_GATE_UUT
  (
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_INCLUDE_ALL IN NUMBER,
  p_GATE_WINDOW IN VARCHAR2,
  p_TRANSACTION_TYPE IN VARCHAR2,
  p_LABEL OUT VARCHAR2,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2,
  p_CURSOR OUT REF_CURSOR
  );

PROCEDURE IMPORT_OFFER_DATA_CLOB
  (
  p_IMPORT_FILE IN OUT NOCOPY CLOB,
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );

PROCEDURE IMPORT_OFFER_DATA_CLOB_UUT
  (
  p_IMPORT_FILE IN OUT NOCOPY CLOB,
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );  

PROCEDURE IMPORT_SUBMIT_RESPONSE_CLOB
  (
  p_IMPORT_FILE IN OUT NOCOPY CLOB,
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );
  
PROCEDURE IMPORT_SUBMIT_RESP_CLOB_UUT
  (
  p_IMPORT_FILE IN OUT NOCOPY CLOB,
  p_ENTITY_LIST IN VARCHAR2,
  p_ENTITY_LIST_DELIMITER IN CHAR,
  p_LOG_TYPE IN NUMBER,
  p_TRACE_ON IN NUMBER,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2
  );  

PROCEDURE IMPORT_ENTITY_LIST
  (
  p_ENTITY_LABEL OUT VARCHAR2,
  p_STATUS OUT NUMBER,
  p_MESSAGE OUT VARCHAR2,
  p_CURSOR OUT REF_CURSOR
  );

END MM_SEM_OFFER;
/

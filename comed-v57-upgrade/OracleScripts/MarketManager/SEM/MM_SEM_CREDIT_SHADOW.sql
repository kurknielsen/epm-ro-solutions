CREATE OR REPLACE PACKAGE MM_SEM_CREDIT_SHADOW IS
--Revision: $Revision: 1.21 $

  -- Author  : MWEATHERS
  -- Created : 9/11/2007
  -- Purpose : contains functions used in shadowing of credit cover calculations

FUNCTION WHAT_VERSION RETURN VARCHAR;

FUNCTION GET_PSE_CURRENCY
	(
	p_PSE_ID IN NUMBER,
	p_ASSESSMENT_DATE IN DATE
	) RETURN VARCHAR2;

FUNCTION GET_PARTY_CURRENCY
	(
	p_ENTITY_GROUP_ID IN NUMBER,
	p_ASSESSMENT_DATE IN DATE
	) RETURN VARCHAR2;

PROCEDURE RUN_CREDIT_CALCULATION
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_STATEMENT_TYPE IN NUMBER,
	p_TIME_ZONE IN VARCHAR2,
	p_TRACE_ON IN NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE RUN_TRADED_EXPOSURE
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR2,
	p_TRACE_ON IN NUMBER,
  	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE GET_BILLING_STMT_ENTITIES
	(
	p_PARTICIPANT_PSE_ID IN NUMBER,
	p_CREDIT_MARKET IN VARCHAR2,
	p_ENTITY_ID_1 OUT NUMBER,
	p_ENTITY_ID_2 OUT NUMBER
	);

FUNCTION ADD_DAYS
	(
	p_DATE IN DATE,
	p_NUMBER_OF_DAYS IN BINARY_INTEGER,
	p_WD_OR_CD IN VARCHAR2
	) RETURN DATE;

FUNCTION GET_EFFECTIVE_VAT_RATE
    (
	p_ENTITY_ID IN NUMBER,
	p_BEST_AVAL_STATEMENT_TYPE_ID IN NUMBER,
    p_BEST_AVAL_STATEMENT_STATE IN NUMBER,
    p_STATEMENT_DATE IN DATE,
    p_CREDIT_MARKET IN VARCHAR2
    ) RETURN NUMBER;

PROCEDURE GET_IDT_DATE_RANGE
(
	p_RUN_TYPE				IN VARCHAR2,
	p_ASSESSMENT_DATE		IN DATE,
	p_GATE_CUT_BEGIN_DATE	OUT DATE,
	p_GATE_CUT_END_DATE 	OUT DATE
);

FUNCTION GET_PSE_TRADED_AMT
  (
  p_ASSESSMENT_DATE IN DATE,
  p_PSE_ID IN NUMBER,
  p_CREDIT_MARKET IN VARCHAR2
  ) RETURN NUMBER;

$if $$UNIT_TEST_MODE = 1 $then

FUNCTION GET_BEST_BILLING_STMT_DATA
	(
	p_ASSESSMENT_DATE IN DATE,
	p_PARTICIPANT_PSE_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CREDIT_MARKET IN VARCHAR2,
	p_FROM_CURRENCY IN VARCHAR2,
	p_STATEMENT_TYPE_ID IN NUMBER,
	p_CREDIT_CATEGORY IN VARCHAR2,
    p_USE_BLENDED_VAT_RATE IN BOOLEAN
	) RETURN NUMBER;

FUNCTION GET_TOTALS_FOR_PARTY
	(
	p_ENTITY_GROUP_ID IN NUMBER,
	p_ASSESSMENT_DATE IN DATE,
	p_STATEMENT_TYPE_ID IN NUMBER
	) RETURN SEM_CREDIT_RESULT%ROWTYPE;

PROCEDURE GET_MSQ_MIUN
	(
	p_WORK_ID               IN NUMBER,
	p_TIME_ZONE             IN VARCHAR2,
	p_GATE_CUT_BEGIN_DATE  	IN DATE,
	p_GATE_CUT_END_DATE		   IN DATE,
 	p_GATE_WINDOW		         IN VARCHAR2,
 	p_RUN_TYPE_ID           IN NUMBER,
	p_POD_ID				            IN NUMBER,
	p_PSE_ID				            IN NUMBER,
	p_TRAIT_INDEX           IN NUMBER
	);

PROCEDURE GET_LLQ_HLQ
	(
	p_WORK_ID				IN	NUMBER,
	p_TRAIT_INDEX			IN	NUMBER,
	p_LOOK_UP_TRAIT_INDEX	IN	NUMBER
	);

PROCEDURE GET_TRAIT_VALS_FOR_TRADED_EXP
	(
	p_TRANSACTION_ID	IN	NUMBER,
	p_TIME_ZONE			IN	VARCHAR2,
	p_ASSESSMENT_DATE	IN	DATE,
	p_STATEMENT_TYPE_ID	IN	NUMBER,
	p_POD_ID			IN	NUMBER,
	p_PSE_ID			IN	NUMBER
	);

PROCEDURE GET_CTEV
	(
	p_WORK_ID			    IN	NUMBER,
	p_TIME_ZONE			    IN	VARCHAR2,
	p_GATE_CUT_BEGIN_DATE	IN	DATE,
	p_GATE_CUT_END_DATE		IN	DATE,
 	p_ASSESSMENT_DATE       IN DATE,
 	p_PSE_ID                IN NUMBER,
	p_TRAIT_INDEX			IN	NUMBER,
	p_LOOK_UP_TRAIT_INDEX	IN	NUMBER,
 	p_VAT_RATE              IN NUMBER
	);

PROCEDURE GET_ETEV
	(
	p_WORK_ID				IN	NUMBER,
	p_TIME_ZONE				IN	VARCHAR2,
	p_GATE_CUT_BEGIN_DATE	IN	DATE,
	p_GATE_CUT_END_DATE		IN	DATE,
	p_POD_ID				IN	NUMBER,
	p_PSE_ID				IN	NUMBER,
	p_GATE_WINDOW		    IN	VARCHAR2,
 p_RUN_TYPE       IN VARCHAR2,
	p_VAT_RATE				IN	NUMBER
	);

FUNCTION GET_ECPI
(
	p_ASSESSMENT_DATE	IN DATE,
	p_PSE_ID			IN NUMBER
)RETURN NUMBER;

FUNCTION GET_FRW_START_DATE
    (
	p_ASSESSMENT_DATE IN DATE,
	p_CREDIT_MARKET IN VARCHAR2
	) RETURN DATE;

$end

c_CREDIT_STATUS_STANDARD CONSTANT VARCHAR2(1) := 'S';
c_CREDIT_STATUS_NEW CONSTANT VARCHAR2(1) := 'N';
c_CREDIT_STATUS_ADJUSTED CONSTANT VARCHAR2(1) := 'A';

c_CURRENCY_EURO CONSTANT VARCHAR2(8) := 'EUR';
c_CURRENCY_GBP CONSTANT VARCHAR2(8) := 'GBP';

c_MARKET_EN CONSTANT VARCHAR2(3) := 'EN';
c_MARKET_CA CONSTANT VARCHAR2(3) := 'CA';
c_MARKET_SEM CONSTANT VARCHAR2(3) := 'SEM';

c_NOT_ASSIGNED CONSTANT NUMBER(1) := 0;

c_ENTITY_GROUP_CATEGORY CONSTANT VARCHAR2(16) := 'SEM Credit';

c_COMMODITY_ALIAS_ENERGY CONSTANT VARCHAR2(16) := 'Energy';
c_COMMODITY_ALIAS_CAPACITY CONSTANT VARCHAR2(16) := 'Capacity';

c_EXCLUDED_COMPONENT_IDENT CONSTANT VARCHAR2(16) := 'REALLOC';

c_VAT_COMPONENTS CONSTANT STRING_COLLECTION := STRING_COLLECTION('VAT Monthly','VAT Weekly','VAT(BLENDED)');
c_IDT_UNDEF_COMPONENTS CONSTANT STRING_COLLECTION := STRING_COLLECTION('CONPIUGEX','CPIUGEX','ENPIUGEX', 'MWPIUGEX');

c_CATEGORY_INV_NOT_PAID CONSTANT VARCHAR2(16) := 'Inv Not Paid';
c_CATEGORY_STMT_NOT_INV CONSTANT VARCHAR2(16) := 'Stmt Not Inv';
c_CATEGORY_UNDEF CONSTANT VARCHAR2(16) := 'Undefined';
c_CATEGORY_SRA CONSTANT VARCHAR2(16) := 'SRA';

--Entity Attributes
c_ATTR_DAYS_TO_PAY_INVOICE CONSTANT VARCHAR2(32) := 'SEM:Credit:Days To Pay Invoice';
c_ATTR_SUP_SUSP_PERIOD CONSTANT VARCHAR2(32) := 'SEM:Credit:Sup Susp. Period';
c_ATTR_SUP_SUSP_PERIOD_TYPE CONSTANT VARCHAR2(32) := 'SEM:Credit:Sup Susp. Period Type';
c_ATTR_GEN_SUSP_PERIOD CONSTANT VARCHAR2(32) := 'SEM:Credit:Gen Susp. Period';
c_ATTR_GEN_SUSP_PERIOD_TYPE CONSTANT VARCHAR2(32) := 'SEM:Credit:Gen Susp. Period Type';
c_ATTR_PARTY_CURRENCY CONSTANT VARCHAR2(32) := 'SEM:Credit:Currency';
c_ATTR_WARNING_LIMIT CONSTANT VARCHAR2(32) := 'SEM:Credit:Warning Limit';
c_ATTR_PSE_STATUS CONSTANT VARCHAR2(32) := 'SEM:Credit:Participant Status';
c_ATTR_TRADE_LIMIT CONSTANT VARCHAR2(32) := 'SEM:Credit:Trade Limit';
c_ATTR_INITIAL_CREDIT_PRICE CONSTANT VARCHAR2(32) := 'SEM:Credit:Initial Credit Price';
c_ATTR_INITIAL_CAP_PRICE CONSTANT VARCHAR2(32) := 'SEM:Credit:Initial Cap. Price';
c_ATTR_INITIAL_ENERGY_PRICE CONSTANT VARCHAR2(32) := 'SEM:Credit:Initial Energy Price';
c_ATTR_COST_OF_POSTING CONSTANT VARCHAR2(32) := 'SEM:Credit:Pct. Cost of Posting';

c_LOW_DATE DATE := LOW_DATE;

c_MARKET_START_DAY CONSTANT DATE := DATE '2007-11-01';
c_YEAR_AFTER_MARKET_START CONSTANT DATE := DATE '2008-11-01';

c_TXN_TYPE_TRADED_EXPOSURE CONSTANT VARCHAR2(32) := 'Traded Exposure';

END MM_SEM_CREDIT_SHADOW;
/

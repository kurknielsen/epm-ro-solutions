CREATE OR REPLACE PACKAGE BODY MM_SEM_CFD_CALC IS

--------------------------------------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR IS
BEGIN
	RETURN '$Revision: 1.1 $';
END WHAT_VERSION;
--------------------------------------------------------------------------------------------------------------------
FUNCTION GET_CURRENCY
	(
	p_CONTRACT_ID IN INTERCHANGE_CONTRACT.CONTRACT_ID%TYPE
	) RETURN NUMBER IS
	v_CURRENCY VARCHAR2(8);
BEGIN
	SELECT CURRENCY
	INTO v_CURRENCY
	FROM SEM_CFD_CONTRACT
	WHERE CONTRACT_ID = p_CONTRACT_ID;
	RETURN CASE WHEN UPPER(v_CURRENCY) = 'EUR' THEN 0 ELSE 1 END;
END GET_CURRENCY;
--------------------------------------------------------------------------------------------------------------------
FUNCTION GET_STRIKE_PRICE
	(
	p_TXN_NAME IN INTERCHANGE_TRANSACTION.TRANSACTION_NAME%TYPE,
	p_STATEMENT_TYPE IN STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE,
	p_SCHEDULE_DATE IN DATE
	) RETURN NUMBER IS
	v_STRIKE_PRICE NUMBER;
BEGIN
	SELECT SUM(PRICE)
	INTO v_STRIKE_PRICE
	FROM IT_SCHEDULE I, INTERCHANGE_TRANSACTION T
	WHERE T.TRANSACTION_NAME = p_TXN_NAME
	AND I.TRANSACTION_ID = T.TRANSACTION_ID
	AND I.SCHEDULE_TYPE = p_STATEMENT_TYPE
	AND I.SCHEDULE_STATE = GA.INTERNAL_STATE
	AND I.SCHEDULE_DATE = p_SCHEDULE_DATE
	AND I.AS_OF_DATE = LOW_DATE;

	RETURN v_STRIKE_PRICE;
	
END GET_STRIKE_PRICE;
--------------------------------------------------------------------------------------------------------------------
FUNCTION GET_STRIKE_PRICE_WITH_ID
	(
	p_TXN_ID IN INTERCHANGE_TRANSACTION.TRANSACTION_ID%TYPE,
	p_STATEMENT_TYPE IN STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE,
	p_SCHEDULE_DATE IN DATE
	) RETURN NUMBER IS
	v_STRIKE_PRICE NUMBER;
BEGIN
	SELECT NVL(SUM(PRICE), 0)
	INTO v_STRIKE_PRICE
	FROM IT_SCHEDULE I
	WHERE I.TRANSACTION_ID = p_TXN_ID
	AND I.SCHEDULE_TYPE = p_STATEMENT_TYPE
	AND I.SCHEDULE_STATE = GA.INTERNAL_STATE
	AND I.SCHEDULE_DATE = p_SCHEDULE_DATE
	AND I.AS_OF_DATE = DATE'1900-01-01'; --LOW_DATE;

	RETURN v_STRIKE_PRICE;
	
END GET_STRIKE_PRICE_WITH_ID;
--------------------------------------------------------------------------------------------------------------------
FUNCTION GET_CONTRACT_LEVEL
	(
	p_TXN_NAME IN INTERCHANGE_TRANSACTION.TRANSACTION_NAME%TYPE,
	p_STATEMENT_TYPE IN STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE,
	p_SCHEDULE_DATE IN DATE
	) RETURN NUMBER IS
	v_CONTRACT_LEVEL NUMBER;
BEGIN
	SELECT SUM(AMOUNT)
	INTO v_CONTRACT_LEVEL
	FROM IT_SCHEDULE I, INTERCHANGE_TRANSACTION T
	WHERE T.TRANSACTION_NAME = p_TXN_NAME
	AND I.TRANSACTION_ID = T.TRANSACTION_ID
	AND I.SCHEDULE_TYPE = p_STATEMENT_TYPE
	AND I.SCHEDULE_STATE = GA.INTERNAL_STATE
	AND I.SCHEDULE_DATE = p_SCHEDULE_DATE
	AND I.AS_OF_DATE = LOW_DATE;

	RETURN NVL(v_CONTRACT_LEVEL, 0);
END GET_CONTRACT_LEVEL;
--------------------------------------------------------------------------------------------------------------------
FUNCTION GET_CONTRACT_LEVEL_WITH_ID
	(
	p_TXN_ID IN INTERCHANGE_TRANSACTION.TRANSACTION_ID%TYPE,
	p_STATEMENT_TYPE IN STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE,
	p_SCHEDULE_DATE IN DATE
	) RETURN NUMBER IS
	v_CONTRACT_LEVEL NUMBER;
BEGIN
	SELECT SUM(AMOUNT)
	INTO v_CONTRACT_LEVEL
	FROM IT_SCHEDULE I
	WHERE I.TRANSACTION_ID = p_TXN_ID
	AND I.SCHEDULE_TYPE = p_STATEMENT_TYPE
	AND I.SCHEDULE_STATE = GA.INTERNAL_STATE
	AND I.SCHEDULE_DATE = p_SCHEDULE_DATE;
	--AND I.AS_OF_DATE = DATE'1900-01-01'; --LOW_DATE;

	RETURN NVL(v_CONTRACT_LEVEL, 0);
END GET_CONTRACT_LEVEL_WITH_ID;
--------------------------------------------------------------------------------------------------------------------
FUNCTION FAST_GET_MARKET_PRICE
	(
	p_MARKET_PRICE_ID IN MARKET_PRICE_VALUE.MARKET_PRICE_ID%TYPE,
	p_CUT_DATE IN DATE,
    p_ERROR_ON_MISSING IN CHAR DEFAULT 'Y'
	) RETURN NUMBER IS

    -- LOCAL VARIABLES --
	v_PRICE MARKET_PRICE_VALUE.PRICE%TYPE;

BEGIN

   SELECT PRICE INTO v_PRICE
   FROM
   (
      SELECT B.PRICE
      FROM MARKET_PRICE_VALUE B
      WHERE  B.MARKET_PRICE_ID = p_MARKET_PRICE_ID
         AND B.PRICE_CODE IN ('F','P','A')
         AND B.PRICE_DATE = p_CUT_DATE
         AND B.AS_OF_DATE = DATE '1900-01-01'
      ORDER BY DECODE(PRICE_CODE,'F',1,'P',2,'A',3) DESC
   ) WHERE ROWNUM = 1;

   RETURN v_PRICE;

EXCEPTION
   WHEN NO_DATA_FOUND THEN
      IF p_ERROR_ON_MISSING = 'Y' THEN
         RAISE_APPLICATION_ERROR(-20000, 'MARKET PRICE NOT FOUND FOR '||FROM_CUT_AS_HED(p_CUT_DATE,LOCAL_TIME_ZONE));
      ELSE
         RETURN 0.0;
      END IF;
END FAST_GET_MARKET_PRICE;

END MM_SEM_CFD_CALC;
/

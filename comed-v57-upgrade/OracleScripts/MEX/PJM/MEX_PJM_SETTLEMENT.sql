CREATE OR REPLACE PACKAGE MEX_PJM_SETTLEMENT IS
-- $Revision: 1.31 $
   -- Author  : JHUMPHRIES
   -- Created : 9/7/2004 2:15:20 PM
   -- Purpose : Perform market exchange logic for transferring settlement results from PJM

   FUNCTION WHAT_VERSION RETURN VARCHAR2;

	-- This group of procedures take CSV file as a CLOB and parse them into object tables
PROCEDURE PARSE_MONTHLY_STATEMENT(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_MONTHLY_STATEMENT_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SCHEDULE9_10_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SCHED9_10_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_NITS_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_NITS_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_EXPANSION_COST_SUMMARY
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_NITS_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_OPER_RES_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_OPER_RES_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_OPER_RES_GEN_CREDITS
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_OPRES_GEN_CREDITS_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_LOSSES_CHARGES(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_LOSSES_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_LOSSES_CREDITS(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_LOSSES_CREDITS_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_TRANS_REVNEUT_CHARGES(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_TRANS_REVNEUT_CHG_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_MONTHLY_CREDIT_ALLOC(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_MONTHLY_CRED_ALLOC_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SYNCH_CONDENS_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SYNCH_COND_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SCHEDULE1A_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_REGULATION_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_REGULATION_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_FTR_AUCTION(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_FTR_AUCTION_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_FTR_TARGET_ALLOCATION(
	p_CSV IN CLOB,
	p_WORK_ID IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_BLACK_START_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_BLACKSTART_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_ARR_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_ARR_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_REACTIVE_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_REACTIVE_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_EN_IMB_CRE_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_EN_IMB_CRE_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_CAP_CRED_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_CAP_CRED_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SPIN_RES_SUMMARY(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SPIN_RES_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_FIRM_TRANS_SERV_CHARGES(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_TRANS_SERV_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_NON_FM_TRANS_SV_CHARGES
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_NFIRM_TRANS_SV_CHG_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SCHEDULE1A_RECONCILE
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SCHEDULE1_RECONCILE
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_ENERGY_CHARGES_RECONCIL
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_REG_CHARGES_RECONCIL
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_SPIN_RES_CH_RECONCIL
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_TRANS_LOSS_CR_RECONCIL
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE PARSE_REACTIVE_SERV_SUMMARY
	(
	p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_REACTIVE_SERV_SUMM_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE PARSE_OP_RES_LOST_OPP_COST
    (
    p_CSV IN CLOB,
	p_RECORDS OUT MEX_PJM_OP_RES_LOC_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
    );

-- This group of procedures, however, takes parameters for what to import and actually fetches the CSV via PJM-Browserless interface
PROCEDURE FETCH_ARR_SUMMARY(p_BEGIN_DATE IN DATE,
							p_END_DATE   IN DATE,
							p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    						p_CRED	   	 IN	 MEX_CREDENTIALS,
							p_LOG_ONLY   IN  NUMBER,
							p_RECORDS    OUT MEX_PJM_ARR_SUMMARY_TBL,
							p_STATUS     OUT NUMBER,
							p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_BLACK_START_SUMMARY(p_BEGIN_DATE IN DATE,
									p_END_DATE   IN DATE,
									p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    								p_CRED	   IN	 MEX_CREDENTIALS,
									p_LOG_ONLY   IN  NUMBER,
									p_RECORDS    OUT MEX_PJM_BLACKSTART_SUMMARY_TBL,
									p_STATUS     OUT NUMBER,
									p_MESSAGE    OUT VARCHAR2);
PROCEDURE FETCH_CAP_CRED_SUMMARY(p_BEGIN_DATE IN DATE,
							p_END_DATE   IN DATE,
							p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    						p_CRED	   	 IN	 MEX_CREDENTIALS,
							p_LOG_ONLY   IN  NUMBER,
							p_RECORDS    OUT MEX_PJM_CAP_CRED_SUMMARY_TBL,
							p_STATUS     OUT NUMBER,
							p_MESSAGE    OUT VARCHAR2);
PROCEDURE FETCH_CONGESTION_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_EN_IMB_CRE_SUMMARY(p_BEGIN_DATE IN DATE,
							p_END_DATE   IN DATE,
							p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    						p_CRED	   	 IN	 MEX_CREDENTIALS,
							p_LOG_ONLY   IN  NUMBER,
							p_RECORDS    OUT MEX_PJM_EN_IMB_CRE_SUMMARY_TBL,
							p_STATUS     OUT NUMBER,
							p_MESSAGE    OUT VARCHAR2);
PROCEDURE FETCH_ENERGY_CHARGES_RECONCIL
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_EXPANSION_COST_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_NITS_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_EXPLICIT_CONGESTION(p_BEGIN_DATE IN DATE,
									p_END_DATE   IN DATE,
									p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    								p_CRED	   	 IN	 MEX_CREDENTIALS,
									p_LOG_ONLY   IN  NUMBER,
									p_STATUS     OUT NUMBER,
									p_MESSAGE    OUT VARCHAR2);
PROCEDURE FETCH_FIRM_TRANS_SERV_CHARGES
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_TRANS_SERV_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_FTR_AUCTION
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_FTR_AUCTION_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_FTR_TARGET_ALLOCATION
	(
	p_WORK_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_LOSSES_CHARGES
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_LOSSES_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
	PROCEDURE FETCH_LOSSES_CREDITS
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_LOSSES_CREDITS_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	) ;
PROCEDURE FETCH_MONTHLY_CREDIT_ALLOC
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_MONTHLY_CRED_ALLOC_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_MONTHLY_STATEMENT
	(
	p_BEGIN_DATE 	IN DATE,
	p_END_DATE 		IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS 		OUT MEX_PJM_MONTHLY_STATEMENT_TBL,
	p_STATUS 		OUT NUMBER,
	p_MESSAGE 		OUT VARCHAR2
	);
PROCEDURE FETCH_NITS_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_NITS_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_NON_FM_TRANS_SV_CHARGES
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_NFIRM_TRANS_SV_CHG_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_OP_RES_LOST_OPP_COST
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_OP_RES_LOC_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_OPER_RES_GEN_CREDITS
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_OPRES_GEN_CREDITS_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_OPER_RES_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_OPER_RES_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	) ;
PROCEDURE FETCH_REACTIVE_SERV_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_REACTIVE_SERV_SUMM_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	) ;

PROCEDURE FETCH_REACTIVE_SUMMARY(p_BEGIN_DATE IN DATE,
							p_END_DATE   IN DATE,
							p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    						p_CRED	   	 IN	 MEX_CREDENTIALS,
							p_LOG_ONLY   IN  NUMBER,
							p_RECORDS    OUT MEX_PJM_REACTIVE_SUMMARY_TBL,
							p_STATUS     OUT NUMBER,
							p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_REG_CHARGES_RECONCIL
	(p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE FETCH_REGULATION_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_REGULATION_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE FETCH_SCHEDULE1_RECONCILE
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_SCHEDULE1A_RECONCILE
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_SCHEDULE1A_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_SCHEDULE1A_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE FETCH_SCHEDULE9_10_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_SCHED9_10_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_SPIN_RES_CH_RECONCIL
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_SPIN_RES_SUMMARY(p_BEGIN_DATE IN DATE,
									p_END_DATE   IN DATE,
									p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    								p_CRED	   	 IN	 MEX_CREDENTIALS,
									p_LOG_ONLY   IN  NUMBER,
                                    p_RECORDS    OUT MEX_PJM_SPIN_RES_SUMMARY_TBL,
                                    p_STATUS     OUT NUMBER,
									p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_SPOT_SUMMARY(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
    p_LOGGER    	IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	  	 	IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE FETCH_SYNCH_CONDENS_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_SYNCH_COND_SUMMARY_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_TRANS_LOSS_CR_RECONCIL
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   	 IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   	 IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_RECONCIL_CHARGES_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FETCH_TRANS_REVNEUT_CHARGES
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_LOGGER   IN  OUT MM_LOGGER_ADAPTER,
    p_CRED	   IN	 MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_RECORDS OUT MEX_PJM_TRANS_REVNEUT_CHG_TBL,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);
PROCEDURE FILL_MEX_QTY_TABLE
	(
    p_LINE IN VARCHAR,
    p_COLS IN OUT PARSE_UTIL.STRING_TABLE,
	p_TABLE IN OUT MEX_QUANTITY_TABLE,
    p_ERROR_MESSAGE OUT VARCHAR2,
   	p_STATUS OUT NUMBER);

PROCEDURE FETCH_EXPLICIT_LOSS(p_BEGIN_DATE IN DATE,
	p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
	p_STATUS     OUT NUMBER,
	p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_TXN_LOSS_CHARGE(p_BEGIN_DATE IN DATE,
    							p_END_DATE   IN DATE,
								p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
								p_CRED		 IN MEX_CREDENTIALS,
								p_LOG_ONLY   IN  NUMBER,
    							p_STATUS     OUT NUMBER,
    							p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_ENERGY_RECON
    (
    p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_TXN_LOSS_CREDIT(p_BEGIN_DATE IN DATE,
    					p_END_DATE   IN DATE,
						p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
						p_CRED		 IN MEX_CREDENTIALS,
						p_LOG_ONLY   IN  NUMBER,
    					p_STATUS     OUT NUMBER,
    					p_MESSAGE    OUT VARCHAR2) ;

PROCEDURE FETCH_INADV_INTERCHG_CHARGE(p_BEGIN_DATE IN DATE,
    						p_END_DATE   IN DATE,
							p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
							p_CRED		 IN MEX_CREDENTIALS,
							p_LOG_ONLY   IN  NUMBER,
    						p_STATUS     OUT NUMBER,
    						p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_EDC_INADV_ALLOCS(p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_LOAD_ESCHED_WWO_LOSSES(p_BEGIN_DATE IN DATE,
    							p_END_DATE   IN DATE,
								p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
								p_CRED		 IN MEX_CREDENTIALS,
								p_LOG_ONLY   IN  NUMBER,
    							p_STATUS     OUT NUMBER,
    							p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_EDC_HRLY_DERATION(p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_LR_MNTHLY_SUMMARY(p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
 	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_MTR_CORR_CHARGE_SUMM(p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

PROCEDURE FETCH_MTR_ALLOC_CHARGE_SUMM(p_BEGIN_DATE IN DATE,
    p_END_DATE   IN DATE,
	p_LOGGER 	 IN OUT NOCOPY MM_LOGGER_ADAPTER,
	p_CRED		 IN MEX_CREDENTIALS,
	p_LOG_ONLY   IN  NUMBER,
    p_STATUS     OUT NUMBER,
    p_MESSAGE    OUT VARCHAR2);

  PROCEDURE PARSE_SPOT_SUMMARY
    (
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_CONGESTION_SUMMARY
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_EXPLICIT_CONGESTION
    (
    p_CSV     IN CLOB,
    p_STATUS  OUT NUMBER,
    p_MESSAGE OUT VARCHAR2
    );

  PROCEDURE PARSE_TXN_LOSS_CHARGE
    (
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_EXPLICIT_LOSS
    (
    p_CSV     IN CLOB,
    p_STATUS  OUT NUMBER,
    p_MESSAGE OUT VARCHAR2
    );

  PROCEDURE PARSE_TXN_LOSS_CREDIT
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_ENERGY_RECON
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_INADV_INTERCHG_CHARGE
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_EDC_INADV_ALLOCS
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

 PROCEDURE PARSE_LOAD_ESCHED_WWO_LOSSES
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_EDC_HRLY_DERATION
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_LR_MNTHLY_SUMMARY
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_MTR_CORR_CHARGE_SUMM
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_MTR_ALLOC_CHARGE_SUMM
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  PROCEDURE PARSE_SCHED1A_CHARGES
	(
	p_CSV IN CLOB,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR2
	);

  	g_TZ_DST CONSTANT VARCHAR2(3) := 'EDT';
  	g_TZ_NODST CONSTANT VARCHAR2(3) := 'EST';
  	g_ET_MONTHLY_BILLING_STATEMENT CONSTANT VARCHAR2(64) := 'Monthly Billing Statement';
	g_ET_SPOT_MKT_ENERGY_SUMMARY CONSTANT VARCHAR2(64) := 'Spot Market Energy Summary';
	g_ET_CONGESTION_SUMMARY CONSTANT VARCHAR2(64) := 'Congestion Summary';
	g_ET_SCHEDULE_9_AND_10_SUMMARY CONSTANT VARCHAR2(64) := 'Schedule 9 and 10 Summary';
	g_ET_NET_TRANS_SERVICE_SUMMARY CONSTANT VARCHAR2(64) := 'Network Trans. Service Summary';
	g_ET_EXP_COST_RECOVERY_CHARGES CONSTANT VARCHAR2(64) := 'Expansion Cost Recovery Charges';
	g_ET_REACTIVE_SERVICES_SUMMARY CONSTANT VARCHAR2(64) := 'Reactive Services Summary';
	g_ET_OPER_RESERVES_SUMMARY CONSTANT VARCHAR2(64) := 'Operating Reserves Summary';
	g_ET_DAILY_OPRES_GEN_CREDITS CONSTANT VARCHAR2(64) := 'Daily OpRes Generator Credits';
	g_ET_DLY_OPRES_LOST_OPP CONSTANT VARCHAR2(64) := 'Daily OpRes Lost Opportunity Cost Credits';
	g_ET_LOSSES_CHARGES CONSTANT VARCHAR2(64) := 'Losses Charges';
	g_ET_LOSSES_CREDITS CONSTANT VARCHAR2(64) := 'Losses Credits';
	g_ET_TRANS_REVENUE_NEUTRALITY CONSTANT VARCHAR2(64) := 'Transitional Revenue Neutrality Charges';
	g_ET_MONTHLY_CREDIT_ALLOC CONSTANT VARCHAR2(64) := 'Monthly Credit Allocations';
	g_ET_SYNC_CONDENSING_SUMMARY CONSTANT VARCHAR2(64) := 'Synchronous Condensing Summary';
	g_ET_REGULATION_SUMMARY CONSTANT VARCHAR2(64) := 'Regulation Summary';
	g_ET_FTR_TARGET_ALLOCATIONS CONSTANT VARCHAR2(64) := 'FTR Target Allocations';
	g_ET_FTR_AUCTION CONSTANT VARCHAR2(64) := 'FTR Auction';
	g_ET_BLACK_START_SUMMARY CONSTANT VARCHAR2(64) := 'Black Start Summary';
	g_ET_ARR_SUMMARY CONSTANT VARCHAR2(64) := 'ARR Summary';
	g_ET_REACTIVE_SUMMARY CONSTANT VARCHAR2(64) := 'Reactive Summary';
	g_ET_ENGY_IMBALANCE_CRED_ALLOC CONSTANT VARCHAR2(64) := 'Energy Imbalance Credit Allocation Summary';
	g_ET_CAP_CREDIT_MARKET_SUMMARY CONSTANT VARCHAR2(64) := 'Capacity Credit Market Summary';
	g_ET_SYNC_RESERVE_SUMMARY CONSTANT VARCHAR2(64) := 'Synchronized Reserve Summary';
	g_ET_EXP_CONGESTION_CHARGES CONSTANT VARCHAR2(64) := 'Explicit Congestion Charges';
	g_ET_FIRM_TRANS_SERVICE_CHAR CONSTANT VARCHAR2(64) := 'Firm Trans. Service Charges';
	g_ET_NON_FIRM_TRANS_SER_CHAR CONSTANT VARCHAR2(64) := 'Non-Firm Trans. Service Charges';
	g_ET_SCHEDULE_1_CHARGES CONSTANT VARCHAR2(64) := 'Schedule 1 Charges';
	g_ET_SCHEDULE_1A_CHARGES CONSTANT VARCHAR2(64) := 'Schedule 1A Charges';
	g_ET_ENERGY_CHAR_RECON CONSTANT VARCHAR2(64) := 'Energy Charge Reconciliation'; -- actual report name in fucntion
	g_ET_REGULATION_CHARGES CONSTANT VARCHAR2(64) := 'Regulation Charges';
	g_ET_SYNC_RESERVE_CHARGES CONSTANT VARCHAR2(64) := 'Synchronized Reserve Charges';
	g_ET_TRANS_LOSSES_CREDITS CONSTANT VARCHAR2(64) := 'Transmission Losses Credits';
	g_ET_EXPLICIT_LOSS_SUMMARY CONSTANT VARCHAR2(64) := 'Explicit Loss Summary';
	g_ET_TRANS_LOSS_CHARGE_SUMMARY CONSTANT VARCHAR2(64) := 'Transmission Loss Charge Summary';
	g_ET_TRANS_LOSS_CREDIT_SUMMARY CONSTANT VARCHAR2(64) := 'Transmission Loss Credit Summary';
	g_ET_ENGY_CONG_LOSSES_CHARGES CONSTANT VARCHAR2(64) := 'Energy Congestion Losses Charges';
	g_ET_INADVERT_INTER_SUMMARY CONSTANT VARCHAR2(64) := 'Inadvertent Interchange Charge Summary';
	g_ET_EDC_INADVERT_ALLOCATIONS CONSTANT VARCHAR2(64) := 'EDC Inadvertent Allocations';
	g_ET_LOAD_ESCHED_W_O_LOSSES CONSTANT VARCHAR2(64) := 'Load eSchedules With and Without Losses';
	g_ET_EDC_HOUR_LOSS_DERATION CONSTANT VARCHAR2(64) := 'EDC Hourly Loss Deration Factor';
	g_ET_LOAD_RESP_MONTHLY_SUMMARY CONSTANT VARCHAR2(64) := 'Load Response Monthly Summary Report';
	g_ET_METER_CORR_CHARGE_SUMMARY CONSTANT VARCHAR2(64) := 'Meter Correction Charge Summary';
	G_ET_METER_CORR_ALLOC_CHARGE CONSTANT VARCHAR2(64) := 'Meter Correction Allocation Charge Summary';
	g_ET_SCHEDULE_1A_SUMMARY CONSTANT VARCHAR2(64) := 'Schedule 1A Summary';



END MEX_PJM_SETTLEMENT;
/
CREATE OR REPLACE PACKAGE TX AS
--Revision $Revision: 1.18 $

-- Testing package.

FUNCTION WHAT_VERSION RETURN VARCHAR;

PROCEDURE TEST_SIMILAR_DAY_TYPE
	(
	p_FORECAST_YEAR IN VARCHAR,
	p_HISTORICAL_YEAR IN VARCHAR
	);

PROCEDURE CREATE_HISTORICAL_TEST_PROFILE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE CREATE_WEATHER_INDEXED_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE CREATE_AIRPORT_WEATHER
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE CREATE_TYPICAL_DAY_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE CREATE_WRF_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	) ;

PROCEDURE CREATE_SYSTEM_LOAD
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE POPULATE_AGGREGATE_ACCOUNT
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE
	);

PROCEDURE POPULATE_BILLED_USAGE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE
	);

PROCEDURE CREATE_PSE_PRE_SCHEDULE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	);

PROCEDURE RTO_TEST_SETUP
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	);

END TX;
/
CREATE OR REPLACE PACKAGE BODY TX AS
----------------------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR IS
BEGIN
    RETURN '$Revision: 1.18 $';
END WHAT_VERSION;
----------------------------------------------------------------------------------------------------
PROCEDURE TEST_SIMILAR_DAY_TYPE
	(
	p_FORECAST_YEAR IN VARCHAR,
	p_HISTORICAL_YEAR IN VARCHAR
	) AS

--BEGIN TX.TEST_SIMILAR_DAY_TYPE('2001','1998');END;

--CREATE TABLE TRACE_SIMILAR_DAY_TYPE(
--FORECAST_DATE VARCHAR(16),
--FORECAST_DAY_TYPE VARCHAR(16),
--HISTORICAL_DATE VARCHAR(16),
--HISTORICAL_DAY_TYPE VARCHAR(16))


v_FORECAST_DATE DATE;
v_FORECAST_END_DATE DATE;
v_BEGIN_DATE DATE;
v_END_DATE DATE;
v_HISTORICAL_DATE DATE;
v_LOOP_COUNTER NUMBER := 0;
v_STATUS NUMBER;

BEGIN

	v_FORECAST_DATE := TO_DATE('01-JAN-' || p_FORECAST_YEAR,'DD-MON-YYYY');
	v_FORECAST_END_DATE := LAST_DAY(ADD_MONTHS(v_FORECAST_DATE,11));
	v_BEGIN_DATE := TO_DATE('01-JAN-' || p_HISTORICAL_YEAR,'DD-MON-YYYY');
	v_END_DATE := LAST_DAY(ADD_MONTHS(v_BEGIN_DATE,11));

	WHILE v_FORECAST_DATE <= v_FORECAST_END_DATE LOOP

		FS.SIMILAR_DAY_TYPE(v_FORECAST_DATE, v_BEGIN_DATE, v_END_DATE, v_HISTORICAL_DATE,  v_STATUS);
/*
     		INSERT INTO TRACE_SIMILAR_DAY_TYPE VALUES (
			TO_CHAR(v_FORECAST_DATE,'DD-MON-YYYY'),
			TO_CHAR(v_FORECAST_DATE,'DAY'),
			TO_CHAR(v_HISTORICAL_DATE,'DD-MON-YYYY'),
			TO_CHAR(v_HISTORICAL_DATE,'DAY'));
*/
		v_FORECAST_DATE := v_FORECAST_DATE + 1;
		v_LOOP_COUNTER := v_LOOP_COUNTER + 1;
		IF v_LOOP_COUNTER > 370 THEN
			RAISE_APPLICATION_ERROR(-20901,'RUNAWAY LOOP');
		END IF;

	END LOOP;

END TEST_SIMILAR_DAY_TYPE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_HISTORICAL_TEST_PROFILE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_HISTORICAL_TEST_PROFILE(
--	TO_DATE('1-JAN-2000','DD-MON-YYYY'),
--	TO_DATE('31-DEC-2000','DD-MON-YYYY'),
--	'EDT');END;

v_PROFILE_ID NUMBER;
v_POINT_DATE DATE;
v_POINT_VALUES VARCHAR(1024) := '';
v_LOOP_COUNTER INTEGER := 0;
v_HOUR INTEGER;
v_PROFILE_VAL NUMBER := 0;
v_CALENDAR_ID NUMBER;
v_ACCOUNT_ID NUMBER;
v_STATUS NUMBER;

BEGIN

    ID.ID_FOR_LOAD_PROFILE('Testing','Historical Test',v_PROFILE_ID);

	UPDATE LOAD_PROFILE
	SET PROFILE_TYPE = 'Historical'
	WHERE PROFILE_ID = v_PROFILE_ID;

	v_POINT_DATE := ADD_SECONDS_TO_DATE(TRUNC(p_FROM_DATE),3600);

	WHILE v_POINT_DATE <= TRUNC(p_TO_DATE) + 1 LOOP

		FOR v_HOUR IN 1..24 LOOP
			v_PROFILE_VAL := v_PROFILE_VAL + 1;
			IF v_HOUR < 24 THEN
				v_POINT_VALUES := v_POINT_VALUES || TO_CHAR(v_PROFILE_VAL) || ',';
			ELSE
				v_POINT_VALUES := v_POINT_VALUES || TO_CHAR(v_PROFILE_VAL);
			END IF;
		END LOOP;

		PF.PUT_LOAD_PROFILE_POINTS(v_PROFILE_ID,1,v_POINT_DATE,LOW_DATE,p_TIME_ZONE,v_POINT_VALUES,v_STATUS);
		v_POINT_DATE := v_POINT_DATE + 1;
		v_POINT_VALUES := '';
		v_LOOP_COUNTER := v_LOOP_COUNTER + 1;
		IF v_LOOP_COUNTER > 370 THEN
			RAISE_APPLICATION_ERROR(-20901,'RUNAWAY LOOP IN CREATE_TEST_HISTORICAL_PROFILE');
		END IF;

	END LOOP;

	PF.PUT_LOAD_PROFILE_STATISTICS(v_PROFILE_ID,LOW_DATE,TRUNC(p_FROM_DATE),TRUNC(p_TO_DATE),
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,v_STATUS);

	DELETE CALENDAR WHERE CALENDAR_ID = 2001;
	INSERT INTO CALENDAR VALUES(2001,'Historical Test','Historical Test','Historical Test',SYSDATE);

	DELETE CALENDAR_PROFILE WHERE CALENDAR_ID = 2001;
	INSERT INTO CALENDAR_PROFILE VALUES(2001,v_PROFILE_ID,LOW_DATE,NULL,SYSDATE);

END CREATE_HISTORICAL_TEST_PROFILE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_WEATHER_INDEXED_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_WEATHER_INDEXED_PROFILE('EDT');END;

v_PROFILE_ID NUMBER;
v_POINT_DATE DATE;
v_POINT_VALUES VARCHAR(1024) := '';
v_HOUR INTEGER;
v_PROFILE_VAL NUMBER := 0;
v_CALENDAR_ID NUMBER;
v_STATUS NUMBER;
v_POINT_INDEX NUMBER;

BEGIN

    ID.ID_FOR_LOAD_PROFILE('Testing','Weather Indexed Test',v_PROFILE_ID);

	UPDATE LOAD_PROFILE
	SET PROFILE_TYPE = 'Weather Indexed'
	WHERE PROFILE_ID = v_PROFILE_ID;

	v_POINT_DATE := ADD_MINUTES_TO_DATE(LOW_DATE,60);

	FOR v_POINT_INDEX IN 60..80 LOOP

		v_POINT_VALUES := '';

		FOR v_HOUR IN 1..24 LOOP
			v_POINT_VALUES := v_POINT_VALUES || TO_CHAR(v_POINT_INDEX) || ',';
		END LOOP;
		v_POINT_VALUES := RTRIM(v_POINT_VALUES,',');

		PF.PUT_LOAD_PROFILE_POINTS(v_PROFILE_ID,v_POINT_INDEX,v_POINT_DATE,LOW_DATE,p_TIME_ZONE,v_POINT_VALUES,v_STATUS);

	END LOOP;

	PF.PUT_LOAD_PROFILE_STATISTICS(v_PROFILE_ID,LOW_DATE,LOW_DATE,LOW_DATE,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,v_STATUS);

	DELETE CALENDAR WHERE CALENDAR_ID = 2002;
	INSERT INTO CALENDAR VALUES(2002,'Weather Indexed Test','Weather Indexed Test','Weather Indexed Test',SYSDATE);

	DELETE CALENDAR_PROFILE WHERE CALENDAR_ID = 2002;
	INSERT INTO CALENDAR_PROFILE VALUES(2002,v_PROFILE_ID,LOW_DATE,NULL,SYSDATE);

END CREATE_WEATHER_INDEXED_PROFILE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_AIRPORT_WEATHER
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_AIRPORT_WEATHER(
--	TO_DATE('1-JUL-2000,'DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'),
--	'EDT');END;

v_PARAMETER_DATE DATE;
v_PARAMETER_VALUES VARCHAR(1024) := '';
v_HOUR INTEGER;
v_PARAMETER_VAL NUMBER := 60;
v_STATUS NUMBER;

BEGIN

	DELETE WEATHER_STATION WHERE STATION_ID = 2101;
    INSERT INTO WEATHER_STATION VALUES(2101,'Airport','Airport','Airport','Eastern',0,SYSDATE);

	DELETE WEATHER_PARAMETER WHERE PARAMETER_ID IN (2102,2103,2104);
    INSERT INTO WEATHER_PARAMETER VALUES(2102,'Temperature','T','Temperature','Temperature',SYSDATE);
    INSERT INTO WEATHER_PARAMETER VALUES(2103,'Relative Humidity','RH','Relative Humidity','Relative Humidity',SYSDATE);
    INSERT INTO WEATHER_PARAMETER VALUES(2104,'Wind Speed','WS','Wind Speed','Wind Speed',SYSDATE);

	v_PARAMETER_DATE := ADD_MINUTES_TO_DATE(TRUNC(p_FROM_DATE),60);

	WHILE v_PARAMETER_DATE <= TRUNC(p_TO_DATE) + 1 LOOP

		v_PARAMETER_VALUES := '';

		FOR v_HOUR IN 1..24 LOOP
			v_PARAMETER_VALUES := v_PARAMETER_VALUES || TO_CHAR(v_PARAMETER_VAL) || ',';
			v_PARAMETER_VAL := v_PARAMETER_VAL + 1;
			IF v_PARAMETER_VAL > 80 THEN
			    v_PARAMETER_VAL := 60;
			END IF;
		END LOOP;

		WR.STATION_PARAMETER_READINGS('Airport','Temperature','F',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);
		WR.STATION_PARAMETER_READINGS('Airport','Relative Humidity','F',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);
		WR.STATION_PARAMETER_READINGS('Airport','Wind Speed','F',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);

	    v_PARAMETER_VAL := 62;
		v_PARAMETER_VALUES := '';

		FOR v_HOUR IN 1..24 LOOP
			v_PARAMETER_VALUES := v_PARAMETER_VALUES || TO_CHAR(v_PARAMETER_VAL) || ',';
			v_PARAMETER_VAL := v_PARAMETER_VAL + 1;
			IF v_PARAMETER_VAL > 80 THEN
			    v_PARAMETER_VAL := 60;
			END IF;
		END LOOP;

		WR.STATION_PARAMETER_READINGS('Airport','Temperature','A',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);
		WR.STATION_PARAMETER_READINGS('Airport','Relative Humidity','A',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);
		WR.STATION_PARAMETER_READINGS('Airport','Wind Speed','A',TO_CHAR(v_PARAMETER_DATE,'DD-MON-YYYY HH24'),
		    'DD-MON-YYYY HH24',p_TIME_ZONE,3600,RTRIM(v_PARAMETER_VALUES,','),v_STATUS);

		v_PARAMETER_DATE := v_PARAMETER_DATE + 1;

	END LOOP;

	UPDATE STATION_PARAMETER_VALUE SET PARAMETER_VAL = PARAMETER_VAL - 15 WHERE PARAMETER_ID = 2103;
	UPDATE STATION_PARAMETER_VALUE SET PARAMETER_VAL = PARAMETER_VAL - 60 WHERE PARAMETER_ID = 2104;

END CREATE_AIRPORT_WEATHER;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_TYPICAL_DAY_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_TYPICAL_DAY_PROFILE('EDT');END;

v_PROFILE_ID NUMBER;
v_POINT_DATE DATE;
v_POINT_VALUES VARCHAR(1024) := '';
v_HOUR INTEGER;
v_PROFILE_VAL NUMBER := 0;
v_CALENDAR_ID NUMBER;
v_STATUS NUMBER;
v_POINT_INDEX NUMBER := 1;
v_PROFILES GA.STRING_TABLE;
v_INDEX BINARY_INTEGER;

BEGIN

	v_PROFILES(1) := 'Winter-Weekday';
	v_PROFILES(2) := 'Winter-Weekend';
	v_PROFILES(3) := 'Spring-Weekday';
	v_PROFILES(4) := 'Spring-Weekend';
	v_PROFILES(5) := 'Summer-Weekday';
	v_PROFILES(6) := 'Summer-Weekend';
	v_PROFILES(7) := 'Fall-Weekday';
	v_PROFILES(8) := 'Fall-Weekend';

	DELETE LOAD_PROFILE_LIBRARY WHERE PROFILE_LIBRARY_ID = 2101;
	INSERT INTO LOAD_PROFILE_LIBRARY VALUES(2101,'Typical Day Test Lib','Typical Day Test Lib',NULL,SYSDATE);

    FOR v_INDEX IN 1..8 LOOP

	    ID.ID_FOR_LOAD_PROFILE('Typical Day Test Lib',v_PROFILES(v_INDEX),v_PROFILE_ID);

		UPDATE LOAD_PROFILE
		SET PROFILE_TYPE = 'Typical Day',
		    PROFILE_TEMPLATE_ID = 1400 + v_INDEX
		WHERE PROFILE_ID = v_PROFILE_ID;

		v_POINT_DATE := ADD_MINUTES_TO_DATE(LOW_DATE,60);
		v_POINT_VALUES := '';

		FOR v_HOUR IN 1..24 LOOP
			v_POINT_VALUES := v_POINT_VALUES || TO_CHAR(v_INDEX) || ',';
		END LOOP;
		v_POINT_VALUES := RTRIM(v_POINT_VALUES,',');

		PF.PUT_LOAD_PROFILE_POINTS(v_PROFILE_ID,v_POINT_INDEX,v_POINT_DATE,LOW_DATE,p_TIME_ZONE,v_POINT_VALUES,v_STATUS);
		PF.PUT_LOAD_PROFILE_STATISTICS(v_PROFILE_ID,LOW_DATE,LOW_DATE,LOW_DATE,
		    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,v_STATUS);

	END LOOP;


	DELETE CALENDAR WHERE CALENDAR_ID = 2101;
	INSERT INTO CALENDAR VALUES(2101,'Typical Day Test','Typical Day Test','Typical Day Test',SYSDATE);

	DELETE CALENDAR_PROFILE_LIBRARY WHERE CALENDAR_ID = 2101;
	INSERT INTO CALENDAR_PROFILE_LIBRARY VALUES(2101,2101,LOW_DATE,NULL,SYSDATE);

END CREATE_TYPICAL_DAY_PROFILE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_WRF_PROFILE
	(
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_WRF_PROFILE('EDT');END;

v_PROFILE_ID NUMBER;
v_HOUR INTEGER;
v_PROFILES GA.STRING_TABLE;
v_INDEX BINARY_INTEGER;
v_LINE_NBR NUMBER;
v_WRF_ID NUMBER := 1700;

BEGIN

	v_PROFILES(1) := 'WRF Monday';
	v_PROFILES(2) := 'WRF Tuesday';
	v_PROFILES(3) := 'WRF Wednesday';
	v_PROFILES(4) := 'WRF Thursday';
	v_PROFILES(5) := 'WRF Friday';
	v_PROFILES(6) := 'WRF Saturday';
	v_PROFILES(7) := 'WRF Sunday';

	DELETE LOAD_PROFILE_LIBRARY WHERE PROFILE_LIBRARY_ID = 2201;
	INSERT INTO LOAD_PROFILE_LIBRARY VALUES(2201,'WRF Test Lib','WRF Test Lib',NULL,SYSDATE);

    FOR v_INDEX IN 1..7 LOOP

	    ID.ID_FOR_LOAD_PROFILE('WRF Test Lib',v_PROFILES(v_INDEX),v_PROFILE_ID);

		UPDATE LOAD_PROFILE
		SET PROFILE_TYPE = 'WRF',
		    PROFILE_TEMPLATE_ID = 1500 + v_INDEX
		WHERE PROFILE_ID = v_PROFILE_ID;

		DELETE LOAD_PROFILE_WRF WHERE PROFILE_ID = v_PROFILE_ID;
		INSERT INTO LOAD_PROFILE_WRF VALUES(v_PROFILE_ID,1,LOW_DATE,0,60,v_WRF_ID + 1);
		INSERT INTO LOAD_PROFILE_WRF VALUES(v_PROFILE_ID,2,LOW_DATE,61,70,v_WRF_ID + 2);
		INSERT INTO LOAD_PROFILE_WRF VALUES(v_PROFILE_ID,3,LOW_DATE,71,120,v_WRF_ID + 3);

		FOR v_LINE_NBR IN 1..3 LOOP
			FOR v_HOUR IN 1..24 LOOP
				INSERT INTO LOAD_PROFILE_WRF_LINE VALUES(v_WRF_ID + v_LINE_NBR,v_HOUR,0,v_INDEX + ((v_LINE_NBR - 1)* 0.333),0,0,0,0,0,0);
			END LOOP;
		END LOOP;
		v_WRF_ID := v_WRF_ID + 3;
	END LOOP;

	DELETE CALENDAR WHERE CALENDAR_ID = 2201;
	INSERT INTO CALENDAR VALUES(2201,'WRF Test','WRF Test','WRF Test',SYSDATE);

	DELETE CALENDAR_PROFILE_LIBRARY WHERE CALENDAR_ID = 2201;
	INSERT INTO CALENDAR_PROFILE_LIBRARY VALUES(2201,2201,LOW_DATE,NULL,SYSDATE);

END CREATE_WRF_PROFILE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_SYSTEM_LOAD
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_SYSTEM_LOAD(
--	TO_DATE('1-JUL-2000','DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'),
--	'EDT');END;

v_LOAD_VAL NUMBER;
v_LOAD_DATE DATE;
v_END_DATE DATE;
v_LOAD GA.NUMBER_TABLE;
v_INDEX BINARY_INTEGER;

BEGIN

	v_LOAD(1) := 500;
	v_LOAD(2) := 600;
	v_LOAD(3) := 700;
	v_LOAD(4) := 800;
	v_LOAD(5) := 900;
	v_LOAD(6) := 1000;
	v_LOAD(7) := 1100;
	v_LOAD(8) := 1200;
	v_LOAD(9) := 1300;
	v_LOAD(10) := 1400;
	v_LOAD(11) := 1500;
	v_LOAD(12) := 1600;
	v_LOAD(13) := 1600;
	v_LOAD(14) := 1500;
	v_LOAD(15) := 1400;
	v_LOAD(16) := 1300;
	v_LOAD(17) := 1200;
	v_LOAD(18) := 1100;
	v_LOAD(19) := 1000;
	v_LOAD(20) := 900;
	v_LOAD(21) := 800;
	v_LOAD(22) := 700;
	v_LOAD(23) := 600;
	v_LOAD(24) := 500;

    DELETE SYSTEM_LOAD WHERE SYSTEM_LOAD_ID = 1901;
	INSERT INTO SYSTEM_LOAD VALUES(1901,'System Load','System A',NULL,SYSDATE);
	DELETE AREA WHERE AREA_ID = 1902;
	INSERT INTO AREA VALUES(1902,'System Area','Area A',NULL,SYSDATE);
    DELETE SYSTEM_LOAD_AREA WHERE SYSTEM_LOAD_ID = 1901 AND  AREA_ID = 1902;
	INSERT INTO SYSTEM_LOAD_AREA VALUES(1901,1902,'A');
	DELETE AREA_LOAD WHERE AREA_ID = 1902;

	v_LOAD_DATE := BEGIN_HOUR_ENDING_CUT_DAY(p_FROM_DATE,p_TIME_ZONE);
	v_END_DATE := ADD_MINUTES_TO_DATE(END_HOUR_ENDING_CUT_DAY(p_TO_DATE,p_TIME_ZONE),-60);

	WHILE v_LOAD_DATE <= v_END_DATE LOOP
	    v_INDEX := TO_NUMBER(TO_CHAR(v_LOAD_DATE,'HH24')) +1;
		v_LOAD_VAL := v_LOAD(v_INDEX);
	    INSERT INTO AREA_LOAD VALUES(1902,v_LOAD_DATE,'F',v_LOAD_VAL);
	    INSERT INTO AREA_LOAD VALUES(1902,v_LOAD_DATE,'A',v_LOAD_VAL + v_INDEX);
		v_LOAD_DATE := ADD_MINUTES_TO_DATE(v_LOAD_DATE,60);
	END LOOP;

END CREATE_SYSTEM_LOAD;
----------------------------------------------------------------------------------------------------
PROCEDURE PUT_AGGREGATE_ACCOUNT_SERVICE
	(
	p_AGGREGATE_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_SERVICE_ACCOUNTS IN NUMBER
	) AS

BEGIN

	UPDATE AGGREGATE_ACCOUNT_SERVICE
	SET SERVICE_ACCOUNTS = p_SERVICE_ACCOUNTS
	WHERE AGGREGATE_ID = p_AGGREGATE_ID
	    AND SERVICE_DATE = p_SERVICE_DATE;

    IF SQL%NOTFOUND THEN
	    INSERT INTO AGGREGATE_ACCOUNT_SERVICE (
		    AGGREGATE_ID,
			SERVICE_DATE,
		    SERVICE_ACCOUNTS)
		VALUES (
		    p_AGGREGATE_ID,
			p_SERVICE_DATE,
		    p_SERVICE_ACCOUNTS);
	END IF;

END PUT_AGGREGATE_ACCOUNT_SERVICE;
----------------------------------------------------------------------------------------------------
PROCEDURE POPULATE_AGGREGATE_ACCOUNT
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE
	) AS

-- BEGIN TX.POPULATE_AGGREGATE_ACCOUNT(
--	TO_DATE('1-JUL-2000','DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'));END;

v_AGGREGATE_ID NUMBER;
v_COUNT NUMBER := 1;
v_SERVICE_DATE DATE;

BEGIN

    FOR v_AGGREGATE_ID IN 2001..2018 LOOP
	    v_SERVICE_DATE := TRUNC(p_FROM_DATE);
	    WHILE v_SERVICE_DATE <= TRUNC(p_TO_DATE) LOOP
		    PUT_AGGREGATE_ACCOUNT_SERVICE(v_AGGREGATE_ID,v_SERVICE_DATE,v_COUNT);
			v_COUNT := v_COUNT + 1;
		    v_SERVICE_DATE := v_SERVICE_DATE + 1;
		END LOOP;
	END LOOP;

END POPULATE_AGGREGATE_ACCOUNT;
----------------------------------------------------------------------------------------------------
PROCEDURE POPULATE_BILLED_USAGE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE
	) AS

-- BEGIN TX.POPULATE_BILLED_USAGE(
--	TO_DATE('1-JUL-2000','DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'));END;

v_FROM_DATE VARCHAR(16);
v_TO_DATE VARCHAR(16);
v_FORMAT VARCHAR(16) := 'DD-MON-YYYY';
v_BILLED_USAGE VARCHAR(16) := '10000';
v_METERS_READ NUMBER := 25;
p_STATUS NUMBER;

BEGIN

	 v_FROM_DATE := TO_CHAR(p_FROM_DATE,v_FORMAT);
	 v_TO_DATE := TO_CHAR(p_TO_DATE,v_FORMAT);

	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS1','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS2','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS3','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS4','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS5','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS6','MidAmerican',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);

	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS1','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS2','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS3','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS4','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS5','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS6','Energy America',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);

	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS1','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS2','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS3','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS4','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS5','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);
	 MS.IMPORT_AGGREGATE_BILLED_USAGE('RS6','Green Mountain',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,v_METERS_READ,p_STATUS);

	 MS.IMPORT_ACCOUNT_BILLED_USAGE('Melrose Distribution',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_ACCOUNT_BILLED_USAGE('Jefferson School',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_ACCOUNT_BILLED_USAGE('Lafayette School',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_ACCOUNT_BILLED_USAGE('Sonoco Products Company',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_ACCOUNT_BILLED_USAGE('RTC Industries',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_ACCOUNT_BILLED_USAGE('Rockford Fastener',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);

	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','037220190',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','050829876',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','074723579',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','076661385',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','082762271',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','083034965',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','083091792',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);
	 MS.IMPORT_METER_BILLED_USAGE('Cincinnati Gas and Electric','083091793',v_FROM_DATE,v_TO_DATE,v_FORMAT,v_BILLED_USAGE,1,p_STATUS);

END POPULATE_BILLED_USAGE;
----------------------------------------------------------------------------------------------------
PROCEDURE CREATE_PSE_PRE_SCHEDULE
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.CREATE_PSE_PRE_SCHEDULE(
--	TO_DATE('1-JUL-2000','DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'),
--	'EDT');END;

v_LOAD_VAL NUMBER;
v_LOAD_DATE DATE;
v_END_DATE DATE;
v_LOAD GA.NUMBER_TABLE;
v_INDEX BINARY_INTEGER;

BEGIN

	v_LOAD(1) := 500;
	v_LOAD(2) := 600;
	v_LOAD(3) := 700;
	v_LOAD(4) := 800;
	v_LOAD(5) := 900;
	v_LOAD(6) := 1000;
	v_LOAD(7) := 1100;
	v_LOAD(8) := 1200;
	v_LOAD(9) := 1300;
	v_LOAD(10) := 1400;
	v_LOAD(11) := 1500;
	v_LOAD(12) := 1600;
	v_LOAD(13) := 1600;
	v_LOAD(14) := 1500;
	v_LOAD(15) := 1400;
	v_LOAD(16) := 1300;
	v_LOAD(17) := 1200;
	v_LOAD(18) := 1100;
	v_LOAD(19) := 1000;
	v_LOAD(20) := 900;
	v_LOAD(21) := 800;
	v_LOAD(22) := 700;
	v_LOAD(23) := 600;
	v_LOAD(24) := 500;

    DELETE PSE_PRE_SCHEDULE WHERE PSE_ID IN (1011, 1012);

	v_LOAD_DATE := BEGIN_HOUR_ENDING_CUT_DAY(p_FROM_DATE,p_TIME_ZONE);
	v_END_DATE := ADD_MINUTES_TO_DATE(END_HOUR_ENDING_CUT_DAY(p_TO_DATE,p_TIME_ZONE),-60);

	WHILE v_LOAD_DATE <= v_END_DATE LOOP
	    v_INDEX := TO_NUMBER(TO_CHAR(v_LOAD_DATE,'HH24')) +1;
		v_LOAD_VAL := v_LOAD(v_INDEX);
	    INSERT INTO PSE_PRE_SCHEDULE VALUES(1011,v_LOAD_DATE,v_LOAD_VAL);
	    INSERT INTO PSE_PRE_SCHEDULE VALUES(1012,v_LOAD_DATE,v_LOAD_VAL);
		v_LOAD_DATE := ADD_MINUTES_TO_DATE(v_LOAD_DATE,60);
	END LOOP;

END CREATE_PSE_PRE_SCHEDULE;
----------------------------------------------------------------------------------------------------
PROCEDURE RTO_TEST_SETUP
	(
	p_FROM_DATE IN DATE,
	p_TO_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR
	) AS

-- BEGIN TX.RTO_TEST_SETUP(
--	TO_DATE('1-JUL-2000','DD-MON-YYYY'),
--	TO_DATE('31-JUL-2000','DD-MON-YYYY'),
--	'EDT');END;

BEGIN

	CREATE_AIRPORT_WEATHER(p_FROM_DATE,p_TO_DATE,p_TIME_ZONE);
	CREATE_HISTORICAL_TEST_PROFILE(p_FROM_DATE,p_TO_DATE,p_TIME_ZONE);
	CREATE_SYSTEM_LOAD(p_FROM_DATE,p_TO_DATE,p_TIME_ZONE);
	CREATE_TYPICAL_DAY_PROFILE(p_TIME_ZONE);
	CREATE_WEATHER_INDEXED_PROFILE(p_TIME_ZONE);
	CREATE_WRF_PROFILE(p_TIME_ZONE);
	CREATE_PSE_PRE_SCHEDULE(p_FROM_DATE,p_TO_DATE,p_TIME_ZONE);
	POPULATE_AGGREGATE_ACCOUNT(p_FROM_DATE,p_TO_DATE);

END RTO_TEST_SETUP;
----------------------------------------------------------------------------------------------------
END TX;
/

CREATE OR REPLACE PACKAGE MESSAGES IS
-- $Revision: 1.5 $

FUNCTION WHAT_VERSION RETURN VARCHAR2;

PROCEDURE SEND_MESSAGE
(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
);

PROCEDURE SEND_MESSAGE_RECPIENT_COLL
(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER_COLLECTION := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
);

PROCEDURE SEND_SYSTEM_MESSAGE
(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
);

PROCEDURE SEND_SYSTEM_MESSAGE_RECP_COLL
(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER_COLLECTION := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
);

END MESSAGES;
/
CREATE OR REPLACE PACKAGE BODY MESSAGES IS
----------------------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR2 IS
BEGIN
    RETURN '$Revision: 1.5 $';
END WHAT_VERSION;
---------------------------------------------------------------------------------------------------
PROCEDURE SEND_MESSAGE_INTERNAL
	(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_FROM_USER_ID IN NUMBER,
	p_TO_USER_ID IN NUMBER_COLLECTION,
	p_OCCURRENCE_ID IN NUMBER,
	p_PROCESS_ID IN NUMBER,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
	) AS

	v_TO_USERS NUMBER_COLLECTION := CASE WHEN p_TO_USER_ID IS NULL THEN NUMBER_COLLECTION(CONSTANTS.ALL_ID)
		ELSE p_TO_USER_ID END;

	----------------------------------------------------------
	PROCEDURE STORE_RECORD IS
	BEGIN
		INSERT INTO SYSTEM_MESSAGE (MESSAGE_ID, OCCURRENCE_ID, PROCESS_ID, FROM_USER_ID, TO_USER_ID,
			SEND_DATE, SUBJECT, BODY)
		SELECT SYSTEM_MESSAGE_ID.NEXTVAL, p_OCCURRENCE_ID, p_PROCESS_ID, p_FROM_USER_ID,
			U.USER_ID, SYSDATE, p_SUBJECT, p_BODY
		FROM APPLICATION_USER U,
			TABLE(CAST(v_TO_USERS AS NUMBER_COLLECTION)) X
		WHERE U.USER_ID = X.COLUMN_VALUE OR X.COLUMN_VALUE = CONSTANTS.ALL_ID;
	END STORE_RECORD;
	----------------------------------------------------------
	PROCEDURE STORE_RECORD_AUTONOMOUS IS
		PRAGMA AUTONOMOUS_TRANSACTION;
	BEGIN
		STORE_RECORD;
		COMMIT;
	END STORE_RECORD_AUTONOMOUS;
	----------------------------------------------------------
BEGIN

	IF p_AUTONOMOUS_TRANSACTION THEN
		STORE_RECORD_AUTONOMOUS;
	ELSE
		STORE_RECORD;
	END IF;

END SEND_MESSAGE_INTERNAL;
----------------------------------------------------------------------------------------------------
PROCEDURE SEND_MESSAGE
	(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
	) AS

BEGIN

	SEND_MESSAGE_INTERNAL(p_SUBJECT, p_BODY, SECURITY_CONTROLS.CURRENT_USER_ID,
		CASE WHEN p_TO_USER_ID IS NULL THEN NULL ELSE NUMBER_COLLECTION(p_TO_USER_ID) END,
		p_OCCURRENCE_ID, p_PROCESS_ID, p_AUTONOMOUS_TRANSACTION);

END SEND_MESSAGE;
----------------------------------------------------------------------------------------------------
PROCEDURE SEND_MESSAGE_RECPIENT_COLL
	(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER_COLLECTION := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
	) AS

BEGIN

	SEND_MESSAGE_INTERNAL(p_SUBJECT, p_BODY, SECURITY_CONTROLS.CURRENT_USER_ID, p_TO_USER_ID,
		p_OCCURRENCE_ID, p_PROCESS_ID, p_AUTONOMOUS_TRANSACTION);

END SEND_MESSAGE_RECPIENT_COLL;
----------------------------------------------------------------------------------------------------
PROCEDURE SEND_SYSTEM_MESSAGE
	(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
	) AS

BEGIN

	SEND_MESSAGE_INTERNAL(p_SUBJECT, p_BODY, SECURITY_CONTROLS.c_SUSER_ID_SYSTEM,
		CASE WHEN p_TO_USER_ID IS NULL THEN NULL ELSE NUMBER_COLLECTION(p_TO_USER_ID) END,
		p_OCCURRENCE_ID, p_PROCESS_ID, p_AUTONOMOUS_TRANSACTION);

END SEND_SYSTEM_MESSAGE;
----------------------------------------------------------------------------------------------------
PROCEDURE SEND_SYSTEM_MESSAGE_RECP_COLL
	(
	p_SUBJECT IN VARCHAR2,
	p_BODY IN CLOB,
	p_TO_USER_ID IN NUMBER_COLLECTION := NULL,
		-- NULL INDICATES A BROADCAST TO ALL USERS
	p_OCCURRENCE_ID IN NUMBER := NULL,
	p_PROCESS_ID IN NUMBER := NULL,
	p_AUTONOMOUS_TRANSACTION IN BOOLEAN := TRUE
	) AS

BEGIN

	SEND_MESSAGE_INTERNAL(p_SUBJECT, p_BODY, SECURITY_CONTROLS.c_SUSER_ID_SYSTEM, p_TO_USER_ID,
			p_OCCURRENCE_ID, p_PROCESS_ID, p_AUTONOMOUS_TRANSACTION);

END SEND_SYSTEM_MESSAGE_RECP_COLL;
----------------------------------------------------------------------------------------------------
END MESSAGES;
/

CREATE OR REPLACE PROCEDURE PERFORM_GRANTS
	(
	p_TARGET_USER_OR_ROLE_NAME IN VARCHAR2,
	p_SOURCE_USER_OR_ROLE_NAME IN VARCHAR2 := NULL,
	p_SOURCE_IS_USER IN BOOLEAN := TRUE
	) AS
--Revision: $Revision: 1.2 $

v_IS_USER NUMBER := CASE WHEN p_SOURCE_IS_USER THEN 1 ELSE 0 END;
CURSOR c_REVOKES IS
	SELECT COLUMN_VALUE as REVOKE_TEXT
	FROM TABLE(CAST(LIST_REVOKES(p_TARGET_USER_OR_ROLE_NAME) AS STRING_COLLECTION));
CURSOR c_OBJs IS
	SELECT COLUMN_VALUE as GRANT_TEXT
	FROM TABLE(CAST(LIST_OBJECT_GRANTS(p_TARGET_USER_OR_ROLE_NAME,p_SOURCE_USER_OR_ROLE_NAME,v_IS_USER) AS STRING_COLLECTION));
CURSOR c_CODE IS
	SELECT COLUMN_VALUE as GRANT_TEXT
	FROM TABLE(CAST(LIST_EXECUTE_GRANTS(p_TARGET_USER_OR_ROLE_NAME) AS STRING_COLLECTION));

BEGIN

	-- First revoke existing privileges
	FOR v_REVOKE IN c_REVOKES LOOP
		EXECUTE IMMEDIATE v_REVOKE.REVOKE_TEXT;
	END LOOP;
	
	-- Then re-grant the privileges
	FOR v_OBJ IN c_OBJS LOOP
		EXECUTE IMMEDIATE v_OBJ.GRANT_TEXT;
	END LOOP;
	FOR v_CODE IN c_CODE LOOP
		EXECUTE IMMEDIATE v_CODE.GRANT_TEXT;
	END LOOP;

END PERFORM_GRANTS;
/

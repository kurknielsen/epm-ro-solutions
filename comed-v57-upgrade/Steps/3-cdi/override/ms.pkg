CREATE OR REPLACE PACKAGE MS AS
--Revision $Revision: 1.157 $

-- Meter Read and Settlement Package.

FUNCTION WHAT_VERSION RETURN VARCHAR;

PROCEDURE IMPORT_METER_INTERVAL_USAGE
	(
	p_MRSP_NAME IN VARCHAR DEFAULT NULL,
	p_METER_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_USAGE_DATE IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR DEFAULT 'DD-MON-YYYY',
	p_INTERVAL IN VARCHAR DEFAULT 3600,
	p_USAGE_VALUES IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_METER_NM_INTERVAL_USAGE
	(
	p_MRSP_NAME IN VARCHAR DEFAULT NULL,
	p_METER_NAME IN VARCHAR,
	p_USAGE_DATE IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR DEFAULT 'DD-MON-YYYY',
	p_INTERVAL IN VARCHAR DEFAULT 3600,
	p_USAGE_VALUES IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_ACCOUNT_INTERVAL_USAGE
	(
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_USAGE_DATE IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR DEFAULT 'DD-MON-YYYY',
	p_INTERVAL IN VARCHAR DEFAULT 3600,
	p_USAGE_VALUES IN VARCHAR,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE IMPORT_PROVIDER_INTERVAL_USAGE
	(
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_EDC_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_ESP_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_PSE_EXTERNAL_IDENTIFIER IN VARCHAR,
-- Begin Implementation Override --
   p_POOL_EXTERNAL_IDENTIFIER IN VARCHAR,
-- End Implementation Override --
	p_USAGE_DATE IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR DEFAULT 'DD-MON-YYYY',
	p_INTERVAL IN VARCHAR DEFAULT 3600,
	p_USAGE_VALUES IN VARCHAR,
	p_TRANSMISSION_LOSS_FACTOR IN NUMBER,
	p_DISTRIBUTION_LOSS_FACTOR IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE IMPORT_METER_BILLED_USAGE
	(
	p_METER_ID IN NUMBER,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_METER_BILLED_USAGE
	(
	p_METER_NAME IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_METER_NM_BILLED_USAGE
	(
	p_METER_NAME IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_ACCOUNT_BILLED_USAGE
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_ESP_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_ACCOUNT_BILLED_USAGE
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_ACCOUNT_BILLED_USAGE
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_AGGREGATE_BILLED_USAGE
	(
	p_ACCOUNT_ID IN NUMBER,
	p_ESP_ID IN NUMBER,
	p_POOL_ID IN NUMBER,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_AGGREGATE_BILLED_USAGE
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_ESP_IDENTIFIER IN VARCHAR,
	p_ESP_IDENTIFIER_TYPE IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_AGGREGATE_BILLED_USAGE
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_ESP_NAME IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_PROVIDER_CONSUMPTION
	(
	p_ACCOUNT_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_EDC_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_ESP_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_PSE_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_POOL_EXTERNAL_IDENTIFIER IN VARCHAR,
	p_BEGIN_DATE IN VARCHAR,
	p_END_DATE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR,
	p_BILLED_USAGE IN VARCHAR,
	p_METERS_READ IN VARCHAR,
	p_METERED_USAGE IN VARCHAR,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE IMPORT_SERVICE_CONSUMPTION
	(
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_BEGIN_DATE DATE,
	p_END_DATE IN DATE,
	p_BILL_CODE IN CHAR,
	p_CONSUMPTION_CODE IN CHAR,
	p_BILLED_USAGE IN NUMBER,
	p_BILLED_DEMAND IN NUMBER,
	p_METERED_USAGE IN NUMBER,
	p_METERED_DEMAND IN NUMBER,
	p_METERS_READ IN NUMBER,
	p_METER_READING IN VARCHAR,
	p_RECEIVED_DATE IN DATE,
	p_IGNORE_CONSUMPTION IN NUMBER,
	p_STATUS OUT NUMBER,
	p_CONSUMPTION_ID OUT NUMBER
	);

PROCEDURE IMPORT_SERVICE_CONSUMP_READ
	(
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_READ_BEGIN_DATE IN DATE,
	p_READ_END_DATE IN DATE,
    p_BILL_CODE IN CHAR,
	p_CONSUMPTION_CODE IN CHAR,
	p_BILLED_USAGE IN NUMBER,
	p_BILLED_DEMAND IN NUMBER,
	p_METERED_USAGE IN NUMBER,
	p_METERED_DEMAND IN NUMBER,
	p_METERS_READ IN NUMBER,
	p_METER_READING IN VARCHAR,
	p_RECEIVED_DATE IN DATE,
	p_IGNORE_CONSUMPTION IN NUMBER,
	p_STATUS OUT NUMBER,
	p_CONSUMPTION_ID OUT NUMBER
	);

PROCEDURE PUT_ACCOUNT_INTERVAL_USAGE
	(
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_USAGE_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR,
	p_USAGE_VALUES IN GA.NUMBER_TABLE
	);

PROCEDURE ACCEPT_BILLED_USAGE_RECORD
	(
	p_DATE_FORMAT IN VARCHAR,
	p_USE_EXTERNAL_IDENTIFIER IN NUMBER,
	p_LINE IN VARCHAR2,
	p_DELIMITER IN VARCHAR,
	p_SUCCESS IN OUT BOOLEAN
	);

PROCEDURE ACCEPT_INTERVAL_USAGE_RECORD
	(
	p_AS_OF_DATE IN DATE,
	p_DATE_FORMAT IN VARCHAR,
	p_USE_EXTERNAL_IDENTIFIER IN NUMBER,
	p_LINE IN VARCHAR2,
	p_TIME_ZONE IN VARCHAR,
	p_DELIMITER IN VARCHAR,
	p_SUCCESS IN OUT BOOLEAN
	);

PROCEDURE IMPORT_AREA_LOAD
	(
	p_AREA_NAME IN VARCHAR,
	p_LOAD_CODE IN VARCHAR,
	p_LOAD_DATE IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_DATE_FORMAT IN VARCHAR DEFAULT 'DD-MON-YYYY',
	p_INTERVAL IN VARCHAR DEFAULT 3600,
	p_LOAD_VALUES IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCEPT_ACCOUNT_SERVICE
	(
	p_ACCOUNT_NAME IN VARCHAR,
	p_METER_NAME IN VARCHAR,
	p_ESP_NAME IN VARCHAR,
	p_SERVICE_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_STATUS OUT NUMBER
	);

PROCEDURE DELETE_REQUEST
	(
	p_REQUEST_TYPE IN VARCHAR,
	p_MODEL_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_METER_TYPE IN CHAR,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE DELETE_REQUEST
	(
	p_REQUEST_TYPE IN VARCHAR,
	p_MODEL_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE INTERVAL_METERED_USAGE
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCEPT_INTERVAL_USAGE_RECORDS
	(
	p_AS_OF_DATE IN DATE,
	p_DATE_FORMAT IN VARCHAR,
	p_USE_EXTERNAL_IDENTIFIER IN NUMBER,
	p_RECORD_STREAM IN VARCHAR,
	p_TIME_ZONE IN VARCHAR,
	p_STATUS OUT NUMBER
	);

PROCEDURE IMPORT_SERVICE_LOAD_DATA
	(
	p_ACCOUNT_ID IN NUMBER,
	p_SERVICE_LOCATION_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_INTERVAL_ABBR IN VARCHAR2,
	p_AS_OF_DATE IN DATE,
	p_USAGE_DATA IN GA.FLOAT_TABLE,
	p_USAGE_DATES IN GA.DATE_TABLE,
	p_SUCCESS IN OUT BOOLEAN,
	p_SCENARIO_ID IN NUMBER := GA.BASE_SCENARIO_ID,
	p_SERVICE_CODE IN CHAR := GA.ACTUAL_SERVICE,
	p_EDC_ID IN NUMBER := NULL,
	p_ESP_ID IN NUMBER := NULL,
	p_PSE_ID IN NUMBER := NULL,
	p_POOL_ID IN NUMBER := NULL,
	p_DELETE_FIRST IN NUMBER := 0,
    p_SKIP_PROCESSING_LOSS_FACTOR IN BOOLEAN := FALSE
	);

PROCEDURE IMPORT_SERVICE_LOAD_DATA
	(
	p_SETTLEMENT_TYPE_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_SERVICE_LOCATION_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_INTERVAL_ABBR IN VARCHAR2,
	p_AS_OF_DATE IN DATE,
	p_USAGE_DATA IN GA.FLOAT_TABLE,
	p_USAGE_DATES IN GA.DATE_TABLE,
	p_SUCCESS IN OUT BOOLEAN,
	p_EDC_ID IN NUMBER := NULL,
	p_ESP_ID IN NUMBER := NULL,
	p_PSE_ID IN NUMBER := NULL,
	p_POOL_ID IN NUMBER := NULL,
	p_DELETE_FIRST IN NUMBER := 0
	);

-- When passed for p_BILL_CYCLE_MONTH parameter of IMPORT_SERVICE_CONS_DATA, bill cycle month will be
-- automatically calculated as the bill cycle month that corresponds to the end date - based on the account's/meter's
-- assigned bill cycle. If no bill cycle is assigned, the month the end date is used (i.e. if end date is 3/15/2009,
-- bill cycle month would be 3/1/2009).
c_AUTO_BILL_CYCLE	CONSTANT DATE := DATE '0999-9-9';

PROCEDURE IMPORT_SERVICE_CONS_DATA
	(
	p_ACCOUNT_ID IN NUMBER,
	p_SERVICE_LOCATION_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_AS_OF_DATE IN DATE,
	p_BEGIN_DATE DATE,
	p_END_DATE IN DATE,
	p_BILLED_USAGE IN NUMBER,
	p_BILLED_DEMAND IN NUMBER,
	p_METERED_USAGE IN NUMBER,
	p_METERED_DEMAND IN NUMBER,
	p_METERS_READ IN NUMBER,
	p_METER_READING IN VARCHAR,
	p_RECEIVED_DATE IN DATE,
	p_IGNORE_CONSUMPTION IN NUMBER,
	p_SUCCESS IN OUT BOOLEAN,
	p_CONSUMPTION_ID OUT NUMBER,
	p_TEMPLATE_ID IN NUMBER := CONSTANTS.NOT_ASSIGNED,
	p_PERIOD_ID IN NUMBER := CONSTANTS.NOT_ASSIGNED,
	p_BILL_CODE IN CHAR := GA.BILL_CONSUMPTION,
	p_CONSUMPTION_CODE IN CHAR := GA.ACTUAL_CONSUMPTION,
	p_UNIT_OF_MEASURE IN VARCHAR2 := NULL,
	p_SCENARIO_ID IN NUMBER := GA.BASE_SCENARIO_ID,
	p_EDC_ID IN NUMBER := NULL,
	p_ESP_ID IN NUMBER := NULL,
	p_PSE_ID IN NUMBER := NULL,
	p_POOL_ID IN NUMBER := NULL,
	p_READ_BEGIN_DATE IN DATE := NULL,
	p_READ_END_DATE IN DATE := NULL,
	p_CONVERSION_FACTOR IN NUMBER := NULL,
	p_BILL_CYCLE_MONTH IN DATE := NULL,
	p_BILL_PROCESSED_DATE IN DATE := NULL
	);

PROCEDURE IMPORT_SERVICE_CONS_DATA
	(
	p_SETTLEMENT_TYPE_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_SERVICE_LOCATION_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_AS_OF_DATE IN DATE,
	p_BEGIN_DATE DATE,
	p_END_DATE IN DATE,
	p_BILLED_USAGE IN NUMBER,
	p_BILLED_DEMAND IN NUMBER,
	p_METERED_USAGE IN NUMBER,
	p_METERED_DEMAND IN NUMBER,
	p_METERS_READ IN NUMBER,
	p_METER_READING IN VARCHAR,
	p_RECEIVED_DATE IN DATE,
	p_IGNORE_CONSUMPTION IN NUMBER,
	p_SUCCESS IN OUT BOOLEAN,
	p_CONSUMPTION_ID OUT NUMBER,
	p_TEMPLATE_ID IN NUMBER := CONSTANTS.NOT_ASSIGNED,
	p_PERIOD_ID IN NUMBER := CONSTANTS.NOT_ASSIGNED,
	p_BILL_CODE IN CHAR := GA.BILL_CONSUMPTION,
	p_UNIT_OF_MEASURE IN VARCHAR2 := NULL,
	p_EDC_ID IN NUMBER := NULL,
	p_ESP_ID IN NUMBER := NULL,
	p_PSE_ID IN NUMBER := NULL,
	p_POOL_ID IN NUMBER := NULL,
	p_READ_BEGIN_DATE IN DATE := NULL,
	p_READ_END_DATE IN DATE := NULL,
	p_CONVERSION_FACTOR IN NUMBER := NULL,
	p_BILL_CYCLE_MONTH IN DATE := NULL,
	p_BILL_PROCESSED_DATE IN DATE := NULL
	);

PROCEDURE PUT_SERVICE_CONSUMPTION
	(
	p_SCENARIO_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
    p_SERVICE_LOCATION_ID IN NUMBER,
    p_METER_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_BILL_CODE IN CHAR,
	p_CONSUMPTION_CODE IN CHAR,
	p_RECEIVED_DATE IN DATE,
	p_TEMPLATE_ID IN NUMBER,
	p_PERIOD_ID IN NUMBER,
    p_UNIT_OF_MEASUREMENT VARCHAR2,
	p_METER_TYPE IN CHAR,
    p_METER_READING IN VARCHAR2,
	p_BILLED_USAGE IN NUMBER,
	p_BILLED_DEMAND IN NUMBER,
	p_METERED_USAGE IN NUMBER,
	p_METERED_DEMAND IN NUMBER,
	p_METERS_READ IN NUMBER,
    p_CONVERSION_FACTOR IN NUMBER,
	p_IGNORE_CONSUMPTION IN NUMBER,
    p_BILL_CYCLE_MONTH IN DATE,
    p_BILL_PROCESSED_DATE IN DATE,
    p_READ_BEGIN_DATE IN DATE,
    p_READ_END_DATE IN DATE,
	p_CONSUMPTION_ID OUT NUMBER,
    p_PERFORM_VALIDATION IN BOOLEAN := TRUE,
    p_AGGREGATE_ID IN NUMBER := CONSTANTS.NOT_ASSIGNED
	);

FUNCTION GET_METER_OWNER
    (
    p_METER_ID IN NUMBER,
    p_SERVICE_DATE DATE
    ) RETURN NUMBER;

PROCEDURE PROCESS_USAGE_FACTORS(p_SERVICE_CONSUMPTION IN SERVICE_CONSUMPTION%ROWTYPE);

PROCEDURE PURGE_CALENDAR_PROFILE_VALUE;


TYPE ALLOCATION_RECORD IS RECORD (SERVICE_ID NUMBER(9), ALLOCATION NUMBER(16,6));
TYPE ALLOCATION_TABLE IS TABLE OF ALLOCATION_RECORD INDEX BY BINARY_INTEGER;

g_MY_THREAD_PROCESS NUMBER(2) := -2;
g_DOMAIN_NAME VARCHAR(32) := 'Settlement';
g_APP_NAME VARCHAR(16) := 'RetailOffice';
g_EVENT_NAME VARCHAR(32) := 'Run Usage Allocation';
g_EVENT_TEXT VARCHAR(512);
g_MODULE_NAME VARCHAR(16) := 'SETTLEMENT';
g_APPLY_UFE_CODE NUMBER(1) := 0;
g_UNKNOWN VARCHAR(8) := 'UNKNOWN';
g_MODEL_ID NUMBER(1) := 1; -- Electric Model.
g_ACCOUNT_PROCESS_MODE NUMBER(1) := 0;
g_SELECT_ALL_CONSUMPTION_MODE BOOLEAN := TRUE;
g_LOCAL_TIME_ZONE CHAR(3) := LOCAL_TIME_ZONE;

----------------------------------------------------------------------------------------------------
-- This routine is used to bulk process service consumption records to calculate usage factors based
-- on the calendars and the date range specified.
-- p_ENTITY_IDS is a collection of CALENDAR_IDs.
PROCEDURE BULK_PROCESS_USAGE_FACTORS(
  p_BEGIN_DATE     IN DATE,
  p_END_DATE       IN DATE,
  p_ENTITY_IDS      IN NUMBER_COLLECTION,
  p_TRACE_ON       IN NUMBER,
  p_MESSAGE        OUT VARCHAR2,
  p_PROCESS_ID     OUT VARCHAR2,
  p_PROCESS_STATUS OUT NUMBER);

----------------------------------------------------------------------------------------------------
-- PRIVATE methods
----------------------------------------------------------------------------------------------------

$if $$UNIT_TEST_MODE = 1 $then

PROCEDURE PUT_SERVICE_CONSUMPTION
	(
	p_SERVICE_CONSUMPTION IN SERVICE_CONSUMPTION%ROWTYPE,
	p_CONSUMPTION_ID OUT NUMBER
	);

PROCEDURE VALIDATE_CALENDAR_PROFILE_DATA
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CALENDAR_ID IN NUMBER
	);

c_USAGE_FACTOR_HORIZON_ELEC 	NUMBER := NVL(GET_DICTIONARY_VALUE('Calculated Usage Factor Horizon', CONSTANTS.ELECTRIC_MODEL, 'Load Management', 'Usage Factors'), 10);
c_USAGE_FACTOR_HORIZON_GAS 		NUMBER := NVL(GET_DICTIONARY_VALUE('Calculated Usage Factor Horizon', CONSTANTS.GAS_MODEL, 'Load Management', 'Usage Factors'), 10);
c_IS_PROCESSING_UF_ELECTRIC 	BOOLEAN := UT.BOOLEAN_FROM_STRING(NVL(GET_DICTIONARY_VALUE('Calculate Usage Factors on Consumption Import', CONSTANTS.ELECTRIC_MODEL, 'Load Management', 'Usage Factors'), '1'));
c_IS_PROCESSING_UF_GAS 			BOOLEAN := UT.BOOLEAN_FROM_STRING(NVL(GET_DICTIONARY_VALUE('Calculate Usage Factors on Consumption Import', CONSTANTS.GAS_MODEL, 'Load Management', 'Usage Factors'), '1'));


$end
----------------------------------------------------------------------------------------------------

END MS;
/


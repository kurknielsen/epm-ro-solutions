CREATE OR REPLACE TYPE MEX_CERTIFICATE AS OBJECT
(
	-- base64-encoded and encrypted certificate file
	CERTIFICATE			CLOB,
	-- base64-encoded and encrypted certificate password
	CERT_PASSWORD		VARCHAR2(32),
	-- the type of certificate - should be 'Authentication' or 'Signature'
	CERT_TYPE			VARCHAR2(32)
);
/
CREATE OR REPLACE TYPE MEX_CERTIFICATE_TBL AS TABLE OF MEX_CERTIFICATE;
/
CREATE OR REPLACE TYPE MEX_COOKIE IS OBJECT (
	NAME     VARCHAR2(256),   -- Cookie name
	VALUE    VARCHAR2(4000),  -- Cookie value
	EXPIRES  VARCHAR2(64),    -- Expiration Date - NULL is cookie should not be persisted
	DOMAIN   VARCHAR2(128),   -- Domain name - for persistent cookies only
	PATH     VARCHAR2(1024),  -- URL path for which the cookie applies
	IS_SECURE NUMBER(1),      -- 1 if cookie should only be used for HTTPS, 0 otherwise
	IS_HIDDEN NUMBER(1)       -- 1 if cookie should be hidden from client apps (non-scriptable), 0 otherwise
);
/
CREATE OR REPLACE TYPE MEX_COOKIE_TBL IS TABLE OF MEX_COOKIE;
/
CREATE OR REPLACE TYPE MEX_CREDENTIALS AS OBJECT
(
	-- flag
	IS_USING_UNAME_PW	NUMBER(1),
	-- plain-text username
	USERNAME			VARCHAR2(32),
	-- base64-encoded and encrypted password
	PASSWORD			VARCHAR2(32),
	-- between zero and two (inclusive)
	NUMBER_OF_CERTS		NUMBER(1),
	-- certificates
	CERTIFICATES		MEX_CERTIFICATE_TBL,
	-- external account name (aka ISO account name)
	EXTERNAL_ACCOUNT_NAME	VARCHAR2(64),

	MEMBER PROCEDURE ADD_TO_REQUEST(SELF IN MEX_CREDENTIALS, p_REQUEST IN OUT CLOB, p_PRETTY_REQUEST IN OUT CLOB),
	CONSTRUCTOR FUNCTION MEX_CREDENTIALS RETURN SELF AS RESULT,
	CONSTRUCTOR FUNCTION MEX_CREDENTIALS
    	(
    	p_USER_NAME IN VARCHAR2,
    	p_PASSWORD IN VARCHAR2,
    	p_PASSWORD_IS_ENCRYPTED IN BOOLEAN := FALSE
    	) RETURN SELF AS RESULT,
    CONSTRUCTOR FUNCTION MEX_CREDENTIALS
    	(
    	p_CERTIFICATE IN BLOB,
    	p_PASSWORD IN VARCHAR2
    	) RETURN SELF AS RESULT,
    CONSTRUCTOR FUNCTION MEX_CREDENTIALS
    	(
    	p_CERTIFICATE IN CLOB,
    	p_PASSWORD IN VARCHAR2
    	) RETURN SELF AS RESULT
);
/
CREATE OR REPLACE TYPE MEX_CREDENTIALS_TBL IS TABLE OF MEX_CREDENTIALS;
/
CREATE OR REPLACE TYPE MEX_LOGGER AS OBJECT
(
-- This object is really like an "interface" - we only care about the methods it provides.
-- But to keep the compiler happy - we must have at least one attribute
DUMMY	NUMBER,

-- These methods will be called by MEX_SWITCHBOARD package to record log events.
-- Caller can pass NULL logger to skip logging, but caller can also provide a sub-class
-- of MEX_LOGGER that overrides all of these to perform app-specific logging.

-- The default implementations in this object do nothing - all log events are ignored.

MEMBER PROCEDURE LOG_START ( p_MARKET IN VARCHAR2, p_ACTION IN VARCHAR2 ),
MEMBER PROCEDURE LOG_ERROR ( p_MESSAGE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_WARN ( p_MESSAGE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_INFO ( p_MESSAGE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_REQUEST ( p_REQUEST_HEADERS IN CLOB ,
								p_REQUEST_BODY IN CLOB ,
								p_BODY_CONTENT_TYPE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_RESPONSE ( p_RESPONSE_HEADERS IN CLOB ,
								p_RESPONSE_BODY IN CLOB ,
								p_BODY_CONTENT_TYPE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_ATTACHMENT ( p_DESCRIPTION IN VARCHAR2,
                                  p_ATTACHMENT_TYPE IN VARCHAR2,
                                  p_ATTACHMENT IN CLOB ),
MEMBER PROCEDURE LOG_DEBUG ( p_MESSAGE IN VARCHAR2 ),
MEMBER PROCEDURE LOG_STOP ( p_RESULT IN MEX_RESULT ),

-- no-arg constructor
CONSTRUCTOR FUNCTION MEX_LOGGER RETURN SELF AS RESULT
)
NOT FINAL;
/
CREATE OR REPLACE TYPE MEX_RESULT AS OBJECT
(
    STATUS_CODE NUMBER(1),
    REQUESTID VARCHAR2(64),
    HEADER_NAMES STRING_COLLECTION,
    HEADER_VALUES STRING_COLLECTION,
    COOKIES MEX_COOKIE_TBL,
    RESPONSE_CONTENTTYPE VARCHAR2(64),
    RESPONSE CLOB,

	-- looks up a cookie by name
    MEMBER FUNCTION GET_COOKIE(p_COOKIE_NAME IN VARCHAR2) RETURN MEX_COOKIE,

	-- looks up a header value by name - if there are multiple headers with this name,
	-- this will return the value only for the first one
    MEMBER FUNCTION GET_HEADER(p_HEADER_NAME IN VARCHAR2) RETURN VARCHAR2,

	-- looks up a header value by name - if there are multiple headers with this name,
	-- this returns all of them in a collection
    MEMBER FUNCTION GET_HEADER_VALUES(p_HEADER_NAME IN VARCHAR2) RETURN STRING_COLLECTION,

	-- constructor- this will parse out the success flag, the response content-type, and
	-- all cookies from the specified headers
    CONSTRUCTOR FUNCTION MEX_RESULT(p_HEADER_NAMES IN STRING_COLLECTION,
                                    p_HEADER_VALUES IN STRING_COLLECTION,
                                    p_RESPONSE IN CLOB)
                                    RETURN SELF AS RESULT,
	-- constructor- this indicates an error result
    CONSTRUCTOR FUNCTION MEX_RESULT(p_ERROR_MESSAGE IN VARCHAR2)
                                    RETURN SELF AS RESULT
);
/
CREATE OR REPLACE TYPE MM_CREDENTIALS_SET AS OBJECT
(
	CREDENTIALS		MEX_CREDENTIALS_TBL,
	LOGGER			MM_LOGGER_ADAPTER,
	IDX				NUMBER,
	MEMBER FUNCTION HAS_NEXT RETURN BOOLEAN,
	MEMBER FUNCTION GET_NEXT(SELF IN OUT MM_CREDENTIALS_SET) RETURN MEX_CREDENTIALS,
	CONSTRUCTOR FUNCTION MM_CREDENTIALS_SET (p_CREDENTIALS MEX_CREDENTIALS_TBL,
											 p_LOGGER MM_LOGGER_ADAPTER)
											RETURN SELF AS RESULT
)
/
CREATE OR REPLACE TYPE MM_LOGGER_ADAPTER UNDER MEX_LOGGER
(
	EXTERNAL_SYSTEM_ID		NUMBER(9),
	EXTERNAL_SYSTEM_NAME	VARCHAR2(64),
	EXTERNAL_ACCOUNT_NAME	VARCHAR2(64),
	PROCESS_NAME			VARCHAR2(64),
	EXCHANGE_NAME			VARCHAR2(64),
	TRACE_ON				NUMBER(1),
	LOG_TYPE				NUMBER(1),
	EXCHANGE_IS_ACTIVE		NUMBER(1),
	MEX_MARKET				VARCHAR2(64),
	MEX_ACTION				VARCHAR2(64),
	LAST_EVENT_ID		    NUMBER(18),
	PROCESS_STARTED			NUMBER(1),
	FINISH_MESSAGE			VARCHAR2(4000),
-- functions for examining the LOG_TYPE field
MEMBER FUNCTION IS_LOGGING RETURN BOOLEAN,
MEMBER FUNCTION IS_LOGGING_EVENTS RETURN BOOLEAN,
MEMBER FUNCTION IS_LOGGING_EXCHANGES RETURN BOOLEAN,
-- Override all methods to actually perform logging.
MEMBER PROCEDURE LOG_START,
OVERRIDING MEMBER PROCEDURE LOG_START ( p_MARKET IN VARCHAR2, p_ACTION IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_ERROR ( p_MESSAGE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_WARN ( p_MESSAGE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_INFO ( p_MESSAGE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_REQUEST ( p_REQUEST_HEADERS IN CLOB ,
										  p_REQUEST_BODY IN CLOB ,
										  p_BODY_CONTENT_TYPE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_RESPONSE ( p_RESPONSE_HEADERS IN CLOB ,
										   p_RESPONSE_BODY IN CLOB ,
										   p_BODY_CONTENT_TYPE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_ATTACHMENT ( p_DESCRIPTION IN VARCHAR2,
                                             p_ATTACHMENT_TYPE IN VARCHAR2,
                                             p_ATTACHMENT IN CLOB ),
OVERRIDING MEMBER PROCEDURE LOG_DEBUG ( p_MESSAGE IN VARCHAR2 ),
OVERRIDING MEMBER PROCEDURE LOG_STOP ( p_RESULT IN MEX_RESULT ),
MEMBER PROCEDURE LOG_STOP ( p_STATUS IN NUMBER, p_MESSAGE IN VARCHAR2 ),
MEMBER FUNCTION GET_END_MESSAGE RETURN VARCHAR2,
MEMBER PROCEDURE LOG_EXCHANGE_ERROR (p_EXCHANGE_ERROR IN VARCHAR2),
MEMBER PROCEDURE LOG_EXCHANGE_IDENTIFIER (p_EXCHANGE_IDENTIFIER IN VARCHAR2),
-- constructor
CONSTRUCTOR FUNCTION MM_LOGGER_ADAPTER ( p_EXTERNAL_SYSTEM_ID IN NUMBER,
										 p_EXTERNAL_ACCOUNT_NAME IN VARCHAR2,
										 p_PROCESS_NAME IN VARCHAR2,
										 p_EXCHANGE_NAME IN VARCHAR2,
										 p_LOG_TYPE IN NUMBER := 3,
										 p_TRACE_ON IN NUMBER := 0
									   ) RETURN SELF AS RESULT
) NOT FINAL;

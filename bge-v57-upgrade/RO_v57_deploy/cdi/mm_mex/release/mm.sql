CREATE OR REPLACE PACKAGE MM AS
--Revision $Revision: 1.31 $

--Market Manager GUI Interface package stub.
--Use MM package from MarketManager folder for bodies.

-- Implementations of XS stubs
FUNCTION WHAT_VERSION RETURN VARCHAR;

PROCEDURE BID_OFFER_TRANSACTION_LIST
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_CURSOR IN OUT GA.REFCURSOR
    );

PROCEDURE SYSTEM_ACTION_USES_HOURS
   (
    p_ACTION IN VARCHAR2,
   p_SHOW_HOURS OUT NUMBER
    );

PROCEDURE GET_BID_OFFER_SUBMIT_WARNING
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR,
   p_IS_TEST_MODE IN NUMBER,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_SUBMIT_HOURS IN VARCHAR,
   p_TIME_ZONE IN VARCHAR,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR,
   p_CONTINUE_BUTTON_CAPTION OUT VARCHAR,
   p_CANCEL_BUTTON_CAPTION OUT VARCHAR,
   p_MUST_CANCEL_SUBMIT OUT NUMBER
   );

PROCEDURE BID_OFFER_SUBMIT
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR2,
   p_IS_TEST_MODE IN NUMBER,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_SUBMIT_HOURS IN VARCHAR2,
   p_TIME_ZONE IN VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR2
   );

PROCEDURE DATA_EXCHANGE_ENTITY_LIST
   (
   p_REQUEST_TYPE IN CHAR,
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_AS_OF_DATE IN DATE,
   p_EXCHANGE_TYPE IN VARCHAR,
   p_MODULE_NAME IN VARCHAR,
   p_ENTITY_LABEL OUT VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_CURSOR OUT GA.REFCURSOR
   );

PROCEDURE DATA_MARKET_EXCHANGE
   (
   p_REQUEST_TYPE IN CHAR,
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_AS_OF_DATE IN DATE,
   p_EXCHANGE_TYPE IN VARCHAR2,
   p_MODULE_NAME IN VARCHAR2,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_IS_FILE_IMPORT IN NUMBER,
   p_RECORD_DELIMITER IN CHAR,
   p_RECORDS IN VARCHAR2,
   p_FILE_PATH IN VARCHAR2,
   p_LAST_TIME IN NUMBER,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR2
   );

FUNCTION GET_BID_OFFER_INTERVAL
   (
   p_TRANSACTION IN INTERCHANGE_TRANSACTION%ROWTYPE
   ) RETURN VARCHAR2;

FUNCTION GET_BID_OFFER_INTERVAL
   (
   p_TRANSACTION_ID IN NUMBER
   ) RETURN VARCHAR2;

PROCEDURE GET_TRAITS_FOR_TRANSACTION
   (
   p_TRANSACTION_ID IN NUMBER,
   p_REPORT_TYPE IN VARCHAR2,
   p_TRAIT_GROUP_FILTER IN VARCHAR2,
   p_INTERVAL IN VARCHAR2,
   p_WORK_ID OUT NUMBER
   );

FUNCTION GET_DEFAULT_NUMBER_OF_SETS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER
   ) RETURN NUMBER;
   
PROCEDURE GET_DEFAULT_SYSTEM_ACTION
   (
   p_CONTEXT_ID IN NUMBER,
   p_CONTEXT_TYPE IN VARCHAR,
   p_ACTION_TYPE IN VARCHAR,
   p_MODULE_NAME IN VARCHAR,
   p_ACTION_ID OUT NUMBER,
   p_STATUS OUT NUMBER
   );
   
PROCEDURE GET_AFFECTED_DATE_RANGE
   (
   p_TRANSACTION_ID IN NUMBER,
   p_CUT_DATE IN DATE,
   p_IS_SUB_DAILY IN BOOLEAN,
   p_BEGIN_DATE OUT DATE,
   p_END_DATE OUT DATE
   );

FUNCTION TRAIT_AFFECTS_STATUS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER,
   p_TRAIT_INDEX IN NUMBER
   ) RETURN BOOLEAN;

FUNCTION NO_OP_UPDATE_AFFECTS_STATUS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER,
   p_TRAIT_INDEX IN NUMBER
   ) RETURN BOOLEAN;

END MM;
/
CREATE OR REPLACE PACKAGE BODY MM AS
-------------------------------------------------------------------------------------
-- Implementations of XS stubs
-------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR IS
BEGIN
    RETURN '$Revision: 1.31 $';
END WHAT_VERSION;
----------------------------------------------------------------------------------------------------
PROCEDURE BID_OFFER_TRANSACTION_LIST
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_CURSOR IN OUT GA.REFCURSOR
    ) AS
BEGIN
   p_SOMETHING_DONE := FALSE;
END BID_OFFER_TRANSACTION_LIST;
-------------------------------------------------------------------------------------
PROCEDURE SYSTEM_ACTION_USES_HOURS
   (
    p_ACTION IN VARCHAR2,
   p_SHOW_HOURS OUT NUMBER
    ) AS
BEGIN
   p_SHOW_HOURS := 1;
END SYSTEM_ACTION_USES_HOURS;
-------------------------------------------------------------------------------------
PROCEDURE GET_BID_OFFER_SUBMIT_WARNING
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR,
   p_IS_TEST_MODE IN NUMBER,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_SUBMIT_HOURS IN VARCHAR,
   p_TIME_ZONE IN VARCHAR,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR,
   p_CONTINUE_BUTTON_CAPTION OUT VARCHAR,
   p_CANCEL_BUTTON_CAPTION OUT VARCHAR,
   p_MUST_CANCEL_SUBMIT OUT NUMBER
   ) AS
BEGIN
   p_SOMETHING_DONE := FALSE;
END GET_BID_OFFER_SUBMIT_WARNING;
-------------------------------------------------------------------------------------
PROCEDURE BID_OFFER_SUBMIT
   (
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_ACTION IN VARCHAR2,
   p_IS_TEST_MODE IN NUMBER,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_SUBMIT_HOURS IN VARCHAR2,
   p_TIME_ZONE IN VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR2
   ) AS
BEGIN
   p_SOMETHING_DONE := FALSE;
END BID_OFFER_SUBMIT;
----------------------------------------------------------------------------------------------------
PROCEDURE DATA_EXCHANGE_ENTITY_LIST
   (
   p_REQUEST_TYPE IN CHAR,
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_AS_OF_DATE IN DATE,
   p_EXCHANGE_TYPE IN VARCHAR,
   p_MODULE_NAME IN VARCHAR,
   p_ENTITY_LABEL OUT VARCHAR2,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_CURSOR OUT GA.REFCURSOR
   ) AS
BEGIN
   p_SOMETHING_DONE := FALSE;
END DATA_EXCHANGE_ENTITY_LIST;
----------------------------------------------------------------------------------------------------
PROCEDURE DATA_MARKET_EXCHANGE
   (
   p_REQUEST_TYPE IN CHAR,
   p_BEGIN_DATE IN DATE,
   p_END_DATE IN DATE,
   p_AS_OF_DATE IN DATE,
   p_EXCHANGE_TYPE IN VARCHAR2,
   p_MODULE_NAME IN VARCHAR2,
   p_ENTITY_LIST IN VARCHAR2,
   p_ENTITY_LIST_DELIMITER IN CHAR,
   p_IS_FILE_IMPORT IN NUMBER,
   p_RECORD_DELIMITER IN CHAR,
   p_RECORDS IN VARCHAR2,
   p_FILE_PATH IN VARCHAR2,
   p_LAST_TIME IN NUMBER,
   p_SOMETHING_DONE OUT BOOLEAN,
   p_STATUS OUT NUMBER,
   p_MESSAGE OUT VARCHAR2
   ) AS
BEGIN
   p_SOMETHING_DONE := FALSE;
END DATA_MARKET_EXCHANGE;
----------------------------------------------------------------------------------------------------
FUNCTION GET_BID_OFFER_INTERVAL
   (
   p_TRANSACTION IN INTERCHANGE_TRANSACTION%ROWTYPE
   ) RETURN VARCHAR2 IS
BEGIN
   RETURN
      CASE
      WHEN NVL(p_TRANSACTION.EXTERNAL_INTERVAL, CONSTANTS.UNDEFINED_ATTRIBUTE) = CONSTANTS.UNDEFINED_ATTRIBUTE THEN
         p_TRANSACTION.TRANSACTION_INTERVAL
      ELSE
         p_TRANSACTION.EXTERNAL_INTERVAL
      END;
END GET_BID_OFFER_INTERVAL;
----------------------------------------------------------------------------------------------------
FUNCTION GET_BID_OFFER_INTERVAL
   (
   p_TRANSACTION_ID IN  NUMBER
   ) RETURN VARCHAR2 IS
   v_TRANSACTION INTERCHANGE_TRANSACTION%ROWTYPE;
BEGIN
   SELECT * INTO v_TRANSACTION FROM INTERCHANGE_TRANSACTION WHERE TRANSACTION_ID = p_TRANSACTION_ID;
   RETURN GET_BID_OFFER_INTERVAL(v_TRANSACTION);
END GET_BID_OFFER_INTERVAL;
----------------------------------------------------------------------------------------------------
PROCEDURE GET_TRAITS_FOR_TRANSACTION
   (
   p_TRANSACTION_ID IN NUMBER,
   p_REPORT_TYPE IN VARCHAR2,
   p_TRAIT_GROUP_FILTER IN VARCHAR2,
   p_INTERVAL IN VARCHAR2,
   p_WORK_ID OUT NUMBER
   ) AS
   v_TRANSACTION INTERCHANGE_TRANSACTION%ROWTYPE;
BEGIN
   --Return the list of Trait Groups that should be associated with this transaction.
   --By default, match Trait Category and SC_ID.  This can be overridden by
   --market-specific code in the non-stub version of this package.

         UT.GET_RTO_WORK_ID(p_WORK_ID);

          SELECT * INTO v_TRANSACTION
         FROM INTERCHANGE_TRANSACTION
         WHERE TRANSACTION_ID = p_TRANSACTION_ID;

         INSERT INTO RTO_WORK(WORK_ID, WORK_SEQ, WORK_XID)
         SELECT p_WORK_ID, B.TRAIT_INDEX, A.TRAIT_GROUP_ID
         FROM TRANSACTION_TRAIT_GROUP A, TRANSACTION_TRAIT B
         WHERE (A.SC_ID = -1 OR A.SC_ID = v_TRANSACTION.SC_ID)
            AND NVL(v_TRANSACTION.TRAIT_CATEGORY,' ') LIKE A.TRAIT_CATEGORY
        AND (A.TRAIT_GROUP_TYPE = '%' OR A.TRAIT_GROUP_TYPE LIKE p_TRAIT_GROUP_FILTER)
            AND B.TRAIT_GROUP_ID = A.TRAIT_GROUP_ID;

END GET_TRAITS_FOR_TRANSACTION;
----------------------------------------------------------------------------------------------------
FUNCTION GET_DEFAULT_NUMBER_OF_SETS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER
   ) RETURN NUMBER IS
   v_TRANSACTION INTERCHANGE_TRANSACTION%ROWTYPE;
BEGIN
   --Return the max number of sets -- to be used by the fill dialog.
   --for a given Trait Group and Transaction.  This can be overridden by
   --market-specific code in the non-stub version of this package.
   IF p_TRAIT_GROUP_ID = 1 /* COMMENTED TO AVOID CIRCULAR REFERENCE TG.g_TG_OFFER_CURVE */ THEN
      RETURN 20;
   ELSIF p_TRAIT_GROUP_ID = 2 /* COMMENTED TO AVOID CIRCULAR REFERENCE TG.g_TG_RAMP_CURVE */ THEN
      RETURN 10;
   ELSE
      RETURN 3;
   END IF;

END GET_DEFAULT_NUMBER_OF_SETS;
----------------------------------------------------------------------------------------------------
PROCEDURE GET_DEFAULT_SYSTEM_ACTION
   (
   p_CONTEXT_ID IN NUMBER,
   p_CONTEXT_TYPE IN VARCHAR,
   p_ACTION_TYPE IN VARCHAR,
   p_MODULE_NAME IN VARCHAR,
   p_ACTION_ID OUT NUMBER,
   p_STATUS OUT NUMBER
   ) AS
BEGIN
   --DO NOTHING.
   p_ACTION_ID := 140;
   p_STATUS := GA.SUCCESS;
END GET_DEFAULT_SYSTEM_ACTION;   
----------------------------------------------------------------------------------------------------
PROCEDURE GET_AFFECTED_DATE_RANGE
   (
   p_TRANSACTION_ID IN NUMBER,
   p_CUT_DATE IN DATE,
   p_IS_SUB_DAILY IN BOOLEAN,
   p_BEGIN_DATE OUT DATE,
   p_END_DATE OUT DATE
   ) AS

BEGIN
    p_BEGIN_DATE := p_CUT_DATE;
    p_END_DATE := p_CUT_DATE;    
END GET_AFFECTED_DATE_RANGE;
----------------------------------------------------------------------------------------------------
FUNCTION TRAIT_AFFECTS_STATUS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER,
   p_TRAIT_INDEX IN NUMBER
   ) RETURN BOOLEAN IS
BEGIN
    RETURN TRUE;
END TRAIT_AFFECTS_STATUS;
----------------------------------------------------------------------------------------------------
FUNCTION NO_OP_UPDATE_AFFECTS_STATUS
   (
   p_TRANSACTION_ID IN NUMBER,
   p_TRAIT_GROUP_ID IN NUMBER,
   p_TRAIT_INDEX IN NUMBER
   ) RETURN BOOLEAN IS
BEGIN
   RETURN FALSE;
END NO_OP_UPDATE_AFFECTS_STATUS;
----------------------------------------------------------------------------------------------------
END MM;
/

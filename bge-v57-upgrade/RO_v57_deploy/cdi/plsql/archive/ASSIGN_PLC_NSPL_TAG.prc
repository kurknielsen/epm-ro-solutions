PROCEDURE ASSIGN_PLC_NSPL_TAG AS
v_TAG_TYPE CHAR(1);
v_COUNT PLS_INTEGER := 0;
v_MESSAGE VARCHAR2(1000);
v_MARK_TIME PLS_INTEGER := DBMS_UTILITY.GET_TIME;
CURSOR c_PLC_NSPL IS
   SELECT ANCILLARY_SERVICE_ID, ANCILLARY_SERVICE_NAME, CASE ANCILLARY_SERVICE_NAME WHEN 'ICAP' THEN 'C' WHEN 'Network Service' THEN 'T' ELSE '?' END "TAG_TYPE"
   FROM ANCILLARY_SERVICE
   WHERE ANCILLARY_SERVICE_NAME IN ('ICAP','Network Service');
CURSOR c_DEFAULT(p_ANCILLARY_SERVICE_ID IN NUMBER, p_TAG_TYPE IN CHAR) IS
   SELECT DISTINCT A.BILL_ACCOUNT, A.SERVICE_POINT, A.PREMISE_NUMBER, TO_CHAR(B.BEGIN_DATE,'YYYY') || p_TAG_TYPE "TAG_ID", B.BEGIN_DATE, B.END_DATE, B.DEFAULT_VAL,
      TO_CHAR(A.BILL_ACCOUNT)||','||TO_CHAR(A.SERVICE_POINT)||','||TO_CHAR(A.PREMISE_NUMBER)||','||TO_CHAR(B.BEGIN_DATE,'YYYY')||p_TAG_TYPE||','||TO_CHAR(B.BEGIN_DATE,c_DATE_FORMAT)||','||TO_CHAR(B.END_DATE,c_DATE_FORMAT)||','||TO_CHAR(B.DEFAULT_VAL) "RECORD"
   FROM CDI_MISSING_PLC_NSPL_TAG_CACHE A
      JOIN ANCILLARY_SERVICE_ALLOCATION B ON B.ANCILLARY_SERVICE_ID = p_ANCILLARY_SERVICE_ID AND B.ALLOCATION_NAME =  A.RATE_CLASS || '-' || A.VOLTAGE_LEVEL AND B.END_DATE >= A.EFFECTIVE_DATE
   WHERE A.TAG_TYPE = p_TAG_TYPE
      AND A.SOURCE_BILL_ACCOUNT IS NULL
      AND A.EFFECTIVE_DATE <> A.TERMINATION_DATE
      AND A.RATE_CLASS IS NOT NULL
      AND A.VOLTAGE_LEVEL IS NOT NULL
   ORDER BY A.BILL_ACCOUNT, A.SERVICE_POINT, A.PREMISE_NUMBER, B.BEGIN_DATE;     
BEGIN
   EXECUTE IMMEDIATE 'TRUNCATE TABLE CDI_MISSING_PLC_NSPL_TAG_CACHE';
   FOR v_PLC_NSPL IN c_PLC_NSPL LOOP 
      v_COUNT := 0;
      LOGS.LOG_INFO('Assign New Account Defaults For Ancillary Service: ' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME);
      v_TAG_TYPE := v_PLC_NSPL.TAG_TYPE;
-- Cache Accounts Without An Assignment --
      INSERT INTO CDI_MISSING_PLC_NSPL_TAG_CACHE(TAG_TYPE, BILL_ACCOUNT, SERVICE_POINT, PREMISE_NUMBER, EFFECTIVE_DATE, TERMINATION_DATE, RATE_CLASS, VOLTAGE_LEVEL)
      SELECT DISTINCT v_TAG_TYPE, BILL_ACCOUNT, SERVICE_POINT, PREMISE_NUMBER, EFFECTIVE_DATE, TERMINATION_DATE, RATE_CLASS, VOLTAGE_LEVEL
      FROM BGE_CI_STAGING V
      WHERE V.EFFECTIVE_DATE <> V.TERMINATION_DATE
         AND NOT EXISTS (SELECT NULL FROM CDI_PLC_ICAP_TX WHERE BILL_ACCOUNT = V.BILL_ACCOUNT AND SERVICE_POINT = V.SERVICE_POINT AND PREMISE_NUMBER = V.PREMISE_NUMBER AND SUBSTR(TAG_ID,5,1) = v_TAG_TYPE AND TO_NUMBER(SUBSTR(TAG_ID,1,4)) = TO_NUMBER(TO_CHAR(V.EFFECTIVE_DATE,'YYYY')));
      LOGS.LOG_INFO('Number Of "' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME || '" Ancillary Service Accounts Missing An Assignment: ' || TO_CHAR(SQL%ROWCOUNT));
-- Select A Source Bill Account/Service Point Candidate Based On Premise Inheritance --      
      MERGE INTO CDI_MISSING_PLC_NSPL_TAG_CACHE T
      USING
         (SELECT * 
         FROM
            (SELECT A.TAG_TYPE, A.BILL_ACCOUNT, A.SERVICE_POINT, B.BILL_ACCOUNT "SOURCE_BILL_ACCOUNT", A.PREMISE_NUMBER, B.SERVICE_POINT "SOURCE_SERVICE_POINT", ROW_NUMBER() OVER(PARTITION BY B.PREMISE_NUMBER ORDER BY B.PREMISE_NUMBER, B.BEGIN_DATE DESC) "TARGET_ROW"
            FROM CDI_MISSING_PLC_NSPL_TAG_CACHE A
               JOIN CDI_PLC_ICAP_TX B ON B.BILL_ACCOUNT <> A.BILL_ACCOUNT AND B.SERVICE_POINT <> A.SERVICE_POINT AND B.PREMISE_NUMBER = A.PREMISE_NUMBER AND SUBSTR(B.TAG_ID,5,1) = v_TAG_TYPE AND TO_NUMBER(SUBSTR(B.TAG_ID,1,4)) <= TO_NUMBER(TO_CHAR(A.EFFECTIVE_DATE,'YYYY'))
            WHERE TAG_TYPE = v_TAG_TYPE
               AND NVL(A.RATE_CLASS,'X') NOT IN ('PL','SL'))
         WHERE TARGET_ROW = 1) S
      ON (T.TAG_TYPE = S.TAG_TYPE AND T.BILL_ACCOUNT = S.BILL_ACCOUNT AND T.SERVICE_POINT = S.SERVICE_POINT AND T.PREMISE_NUMBER = S.PREMISE_NUMBER)
      WHEN MATCHED THEN
         UPDATE SET T.SOURCE_BILL_ACCOUNT = S.SOURCE_BILL_ACCOUNT, T.SOURCE_SERVICE_POINT = S.SOURCE_SERVICE_POINT;
      LOGS.LOG_INFO('Number Of "' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME || '" Premise Inheritance Source Candidates: ' || TO_CHAR(SQL%ROWCOUNT));
-- Utilize Premise Inheritance To Assign The Default PLC/NSPL Value --
      MERGE INTO CDI_PLC_ICAP_TX T
      USING
         (SELECT DISTINCT A.BILL_ACCOUNT, A.SERVICE_POINT, A.PREMISE_NUMBER, B.TAG_ID, B.BEGIN_DATE, B.END_DATE, B.TAG_VAL
         FROM CDI_MISSING_PLC_NSPL_TAG_CACHE A
            JOIN CDI_PLC_ICAP_TX B ON B.BILL_ACCOUNT = A.SOURCE_BILL_ACCOUNT AND B.SERVICE_POINT = A.SOURCE_SERVICE_POINT AND B.PREMISE_NUMBER = A.PREMISE_NUMBER AND SUBSTR(B.TAG_ID,5,1) = v_TAG_TYPE AND TO_NUMBER(SUBSTR(B.TAG_ID,1,4)) >= TO_NUMBER(TO_CHAR(EFFECTIVE_DATE,'YYYY'))
         WHERE A.TAG_TYPE = v_TAG_TYPE) S
      ON (T.BILL_ACCOUNT = S.BILL_ACCOUNT AND T.SERVICE_POINT = S.SERVICE_POINT AND T.PREMISE_NUMBER = S.PREMISE_NUMBER AND T.TAG_ID = S.TAG_ID)
      WHEN NOT MATCHED THEN
         INSERT(BILL_ACCOUNT, SERVICE_POINT, PREMISE_NUMBER, TAG_ID, BEGIN_DATE, END_DATE, TAG_VAL)
         VALUES(S.BILL_ACCOUNT, S.SERVICE_POINT, S.PREMISE_NUMBER, S.TAG_ID, S.BEGIN_DATE, S.END_DATE, S.TAG_VAL);
      LOGS.LOG_INFO('Number Of "' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME || '" Premise Inheritance Assignment Records: ' || TO_CHAR(SQL%ROWCOUNT));
-- For Any Default Account Without A Premise Inheritance Assignment Use Rate Class/Voltage Lookup Assignment --
      v_COUNT := 0;
      FOR v_DEFAULT IN c_DEFAULT(v_PLC_NSPL.ANCILLARY_SERVICE_ID, v_TAG_TYPE) LOOP
         BEGIN
            LOGS.LOG_DEBUG(v_PLC_NSPL.ANCILLARY_SERVICE_NAME || ' Default Assignment: ' || v_DEFAULT.RECORD);
            MERGE INTO CDI_PLC_ICAP_TX T
            USING (SELECT v_DEFAULT.BILL_ACCOUNT "BILL_ACCOUNT", v_DEFAULT.SERVICE_POINT "SERVICE_POINT", v_DEFAULT.PREMISE_NUMBER "PREMISE_NUMBER", v_DEFAULT.TAG_ID "TAG_ID", v_DEFAULT.BEGIN_DATE "BEGIN_DATE", v_DEFAULT.END_DATE "END_DATE", v_DEFAULT.DEFAULT_VAL "TAG_VAL" FROM DUAL) S
            ON (T.BILL_ACCOUNT = S.BILL_ACCOUNT AND T.SERVICE_POINT = S.SERVICE_POINT AND T.PREMISE_NUMBER = S.PREMISE_NUMBER AND T.TAG_ID = S.TAG_ID)
            WHEN NOT MATCHED THEN
               INSERT(BILL_ACCOUNT, SERVICE_POINT, PREMISE_NUMBER, TAG_ID, BEGIN_DATE, END_DATE, TAG_VAL)
               VALUES(S.BILL_ACCOUNT, S.SERVICE_POINT, S.PREMISE_NUMBER, S.TAG_ID, S.BEGIN_DATE, S.END_DATE, S.TAG_VAL);
            v_COUNT := v_COUNT + SQL%ROWCOUNT;
         EXCEPTION
            WHEN OTHERS THEN
               v_MESSAGE := SQLERRM;
               LOGS.LOG_DEBUG(v_MESSAGE);
               ERRS.LOG_AND_CONTINUE('Error In Default ' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME || ' Assignment: ' || v_DEFAULT.RECORD);
         END;
      END LOOP;
      LOGS.LOG_INFO('Number Of "' || v_PLC_NSPL.ANCILLARY_SERVICE_NAME || '" Default Assignment Records: ' || TO_CHAR(v_COUNT));
   END LOOP;
   LOGS.LOG_INFO('Assign Default PLC/NSPL Tag Complete. Elapsed Seconds: ' || TO_CHAR(ROUND((DBMS_UTILITY.GET_TIME-v_MARK_TIME)/100)));
   COMMIT;
EXCEPTION
   WHEN OTHERS THEN
     ERRS.LOG_AND_CONTINUE('Exception In Assignment Of Default PLC Tags.');
END ASSIGN_PLC_NSPL_TAG;

PROCEDURE SYNC_AGGREGATE_ACCOUNT_SERVICE(p_FROM_DATE IN DATE, p_TO_DATE IN DATE) AS
v_SERVICE_DATE DATE := p_FROM_DATE;
v_TOTAL_TIME   PLS_INTEGER := DBMS_UTILITY.GET_TIME;
v_MARK_TIME    PLS_INTEGER;
BEGIN
-- Cache Usage Factors For The Sync Period --   
   CACHE_USAGE_FACTOR(p_FROM_DATE, p_TO_DATE);
-- Populate The ESP Service Accounts Of Record For Each Aggregate Account Over The Specified Time Period --
-- Iterate Over The Service Sync Period --
   WHILE v_SERVICE_DATE <= p_TO_DATE LOOP
      v_MARK_TIME := DBMS_UTILITY.GET_TIME;
      LOGS.LOG_INFO_DETAIL('Processing Service Date: ' || TO_CHAR(v_SERVICE_DATE, c_DATE_FORMAT));
      DELETE AGGREGATE_ACCOUNT_SERVICE WHERE CASE_ID = GA.BASE_CASE_ID AND SERVICE_DATE = v_SERVICE_DATE;
      INSERT INTO AGGREGATE_ACCOUNT_SERVICE(CASE_ID, AGGREGATE_ID, SERVICE_DATE, AS_OF_DATE, SERVICE_ACCOUNTS, ENROLLED_ACCOUNTS)
      SELECT GA.BASE_CASE_ID, AGGREGATE_ID, v_SERVICE_DATE, CONSTANTS.LOW_DATE, SUM(SERVICE_ACCOUNTS) "SERVICE_ACCOUNTS", SUM(SERVICE_ACCOUNTS) "ENROLLED_ACCOUNTS"
      FROM CDI_AGGREGATE_ACCOUNT$
      WHERE v_SERVICE_DATE BETWEEN BEGIN_DATE AND END_DATE
         AND AGGREGATE_ID IS NOT NULL
      GROUP BY AGGREGATE_ID;
      LOGS.LOG_INFO_DETAIL('Aggregate Account Service Enrollment Count: ' || TO_CHAR(SQL%ROWCOUNT) || ', Elapsed Seconds: ' || TO_CHAR(ROUND((DBMS_UTILITY.GET_TIME-v_MARK_TIME)/100)));
      v_MARK_TIME := DBMS_UTILITY.GET_TIME;
-- Get The Average Assigned Usage Factor Associated For The Aggregate Account --
      MERGE INTO AGGREGATE_ACCOUNT_SERVICE T
      USING (
         WITH SELECT_USAGE_FACTOR AS
            (SELECT A.RTO_ACCOUNT_ID, A.SUPPLIER, A.RTO_POOL_ID, AVG(NVL(B.USAGE_FACTOR,1)) "USAGE_FACTOR"
            FROM CDI_MAIN A
               LEFT JOIN CDI_USAGE_FACTOR_CACHE B ON B.BILL_ACCOUNT = A.BILL_ACCOUNT AND B.SERVICE_POINT = A.SERVICE_POINT 
            WHERE A.IDR_STATUS <> 'Y'
               AND v_SERVICE_DATE BETWEEN A.EFFECT_DATE AND A.TERM_DATE
            GROUP BY A.RTO_ACCOUNT_ID, A.SUPPLIER, A.RTO_POOL_ID)
         SELECT GA.BASE_CASE_ID "CASE_ID", G.AGGREGATE_ID, v_SERVICE_DATE "SERVICE_DATE", CONSTANTS.LOW_DATE "AS_OF_DATE", X.USAGE_FACTOR
         FROM SELECT_USAGE_FACTOR X
            LEFT JOIN ACCOUNT                 A ON A.ACCOUNT_EXTERNAL_IDENTIFIER = X.RTO_ACCOUNT_ID
            LEFT JOIN ENERGY_SERVICE_PROVIDER E ON E.ESP_EXTERNAL_IDENTIFIER = X.SUPPLIER
            LEFT JOIN POOL                    P ON P.POOL_EXTERNAL_IDENTIFIER = X.RTO_POOL_ID
            LEFT JOIN AGGREGATE_ACCOUNT_ESP   G ON G.ACCOUNT_ID = A.ACCOUNT_ID AND G.ESP_ID = E.ESP_ID AND G.POOL_ID = P.POOL_ID) S
      ON (T.CASE_ID = S.CASE_ID AND T.AGGREGATE_ID = S.AGGREGATE_ID AND T.SERVICE_DATE = S.SERVICE_DATE AND T.AS_OF_DATE = S.AS_OF_DATE)
      WHEN MATCHED THEN
         UPDATE SET T.USAGE_FACTOR = S.USAGE_FACTOR;
      LOGS.LOG_INFO_DETAIL('Aggregate Account Service Usage Factor Update Count: ' || TO_CHAR(SQL%ROWCOUNT) || ', Elapsed Seconds: ' || TO_CHAR(ROUND((DBMS_UTILITY.GET_TIME-v_MARK_TIME)/100)));
-- Advance The Service Date --
      v_SERVICE_DATE := v_SERVICE_DATE + 1;
   END LOOP;
   GATHER_TABLE_STATS('AGGREGATE_ACCOUNT_SERVICE');
   LOGS.LOG_INFO('Aggregate Account Service Elapsed Seconds: ' || TO_CHAR(ROUND((DBMS_UTILITY.GET_TIME-v_TOTAL_TIME)/100)));
END SYNC_AGGREGATE_ACCOUNT_SERVICE;

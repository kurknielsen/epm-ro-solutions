CREATE TABLE X_PARTITION_STATEMENT(ENTRY_TYPE CHAR(1), ENTRY_ID NUMBER, ENTRY_TEXT VARCHAR2(4000));
 
DECLARE
v_TARGET_TABLE VARCHAR2(32) := 'SERVICE_STATE'; -- SERVICE_STATE, SERVICE_LOAD, SERVICE_OBLIGATION_LOAD --
v_BEGIN_DATE DATE := TO_DATE('1-JAN-2019');
v_END_DATE DATE := TO_DATE('31-DEC-2020');
v_COUNT PLS_INTEGER;
v_SERVICE_DATE DATE;
v_PARTITION_DATE DATE;
v_PARTITION VARCHAR2(4000);
v_PARTITION_DATA_TABLESPACE VARCHAR2(64) := 'SERVICE_LOAD';
v_PARTITION_INDEX_TABLESPACE VARCHAR2(64) := 'SERVICE_LOAD';
-- Do Not Create A Sub-Partition For "Forecast"--
v_DATA_TEMPLATE  VARCHAR2(4000) := 'PARTITION Pmmddyyyy VALUES LESS THAN (TO_DATE('' yyyy-mm-dd hh:mi:ss'', ''SYYYY-MM-DD HH24:MI:SS'')) TABLESPACE <partition_data_tablespace> (SUBPARTITION PmmddyyyyB VALUES(''B'') TABLESPACE <partition_data_tablespace>, SUBPARTITION PmmddyyyyA VALUES (''A'') TABLESPACE <partition_data_tablespace>),';
v_INDEX_TEMPLATE VARCHAR2(4000) := 'PARTITION Pmmddyyyy TABLESPACE <partition_index_tablespace> (SUBPARTITION PmmddyyyyB TABLESPACE <partition_index_tablespace>, SUBPARTITION PmmddyyyyA TABLESPACE <partition_index_tablespace>),';
--v_DATA_TEMPLATE  VARCHAR2(4000) := 'PARTITION Pmmddyyyy VALUES LESS THAN (TO_DATE('' yyyy-mm-dd hh:mi:ss'', ''SYYYY-MM-DD HH24:MI:SS'')) TABLESPACE <partition_data_tablespace> (SUBPARTITION PmmddyyyyF VALUES(''F'') TABLESPACE <partition_data_tablespace>, SUBPARTITION PmmddyyyyB VALUES(''B'') TABLESPACE <partition_data_tablespace>, SUBPARTITION PmmddyyyyA VALUES (''A'') TABLESPACE <partition_data_tablespace>),';
--v_INDEX_TEMPLATE VARCHAR2(4000) := 'PARTITION Pmmddyyyy TABLESPACE <partition_index_tablespace> (SUBPARTITION PmmddyyyyF TABLESPACE <partition_index_tablespace>, SUBPARTITION PmmddyyyyB TABLESPACE <partition_index_tablespace>, SUBPARTITION PmmddyyyyA TABLESPACE <partition_index_tablespace>),';
BEGIN
   EXECUTE IMMEDIATE 'TRUNCATE TABLE X_PARTITION_STATEMENT';
   v_SERVICE_DATE := v_BEGIN_DATE;
   v_COUNT := 1;
   WHILE v_SERVICE_DATE <= v_END_DATE LOOP
      v_PARTITION_DATE := CASE WHEN v_TARGET_TABLE IN ('SERVICE_LOAD','SERVICE_OBLIGATION_LOAD') THEN ADD_SECONDS_TO_DATE(TO_CUT(v_SERVICE_DATE + 1, LOCAL_TIME_ZONE),1) ELSE v_SERVICE_DATE + 1 END; 
      v_PARTITION := REPLACE(REPLACE(v_DATA_TEMPLATE,'mmddyyyy', TO_CHAR(v_SERVICE_DATE,'MMDDYYYY')), 'yyyy-mm-dd hh:mi:ss', TO_CHAR(v_PARTITION_DATE,'YYYY-MM-DD HH24:MI:SS'));
      v_PARTITION := REPLACE(v_PARTITION, '<partition_data_tablespace>', v_PARTITION_DATA_TABLESPACE);
      INSERT INTO X_PARTITION_STATEMENT(ENTRY_TYPE, ENTRY_ID, ENTRY_TEXT) VALUES('T', v_COUNT, v_PARTITION);
      v_COUNT := v_COUNT + 1;
      v_SERVICE_DATE := v_SERVICE_DATE + 1;
   END LOOP;
   v_SERVICE_DATE := v_BEGIN_DATE;
   v_COUNT := 1;
   WHILE v_SERVICE_DATE <= v_END_DATE LOOP
      v_PARTITION := REPLACE(v_INDEX_TEMPLATE,'mmddyyyy', TO_CHAR(v_SERVICE_DATE,'MMDDYYYY'));
      v_PARTITION := REPLACE(v_PARTITION, '<partition_index_tablespace>', v_PARTITION_INDEX_TABLESPACE);
      INSERT INTO X_PARTITION_STATEMENT(ENTRY_TYPE, ENTRY_ID, ENTRY_TEXT) VALUES('I', v_COUNT, v_PARTITION);
      v_COUNT := v_COUNT + 1;
      v_SERVICE_DATE := v_SERVICE_DATE + 1;
   END LOOP;
END;

SELECT ENTRY_TEXT FROM X_PARTITION_STATEMENT WHERE ENTRY_TYPE = 'T' ORDER BY ENTRY_ID;

SELECT ENTRY_TEXT FROM X_PARTITION_STATEMENT WHERE ENTRY_TYPE = 'I' ORDER BY ENTRY_ID;

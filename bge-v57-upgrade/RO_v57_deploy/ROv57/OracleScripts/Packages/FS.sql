CREATE OR REPLACE PACKAGE FS AS
--Revision $Revision: 1.305 $

-- Forecast and Settlement Package.

FUNCTION WHAT_VERSION RETURN VARCHAR;


PROCEDURE RUN_CAST_SERVICE_REQUEST
	(
	p_REQUEST_TYPE IN CHAR,
	p_REQUEST_MODE IN NUMBER,
	p_SCENARIO_ID IN NUMBER,
	p_MODEL_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_ESP_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_INPUT_AS_OF_DATE IN DATE,
	p_OUTPUT_AS_OF_DATE IN DATE,
	p_PROFILE_BEGIN_DATE IN DATE,
	p_PROFILE_AS_OF_DATE IN DATE,
	p_APPLY_USAGE_FACTOR IN NUMBER,
	p_APPLY_UFE IN NUMBER,
	p_APPLY_UFE_OTHER IN NUMBER,
	p_APPLY_EXTERNAL_FORECAST IN NUMBER,
	p_SCHEDULE_RUN IN NUMBER,
	p_RUN_AT IN DATE,
	p_REQUESTOR IN VARCHAR,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	) ;

PROCEDURE CAST_DELETE_REQUEST
	(
	p_REQUEST_TYPE IN VARCHAR,
	p_SCENARIO_ID IN NUMBER,
	p_MODEL_ID IN NUMBER,
	p_ACCOUNT_TYPE IN CHAR,
	p_METER_TYPE IN CHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_REQUESTOR IN VARCHAR,
	p_RECALC_TOTALS IN NUMBER := 0,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE COMPOSITE_PROFILE_FOR_CALENDAR
	(
	p_CALENDAR_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR,
	p_STATION_ID IN NUMBER,
	p_COMPOSITE_PROFILE OUT VARCHAR
	);

PROCEDURE COMPOSITE_PROFILE_FOR_CALENDAR
	(
	p_STATION_ID IN NUMBER,
	p_CALENDAR_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_COMPOSITE_PROFILE IN OUT NOCOPY GA.NUMBER_TABLE,
	p_TRACE_ON BOOLEAN DEFAULT FALSE,
	p_PARAMETER_CODE CHAR DEFAULT 'F'
	);

PROCEDURE CAST_CANDIDATES
	(
	p_EDC_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT GA.REFCURSOR
	);

PROCEDURE MONITOR_REQUEST
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_PROFILE_AS_OF_DATE IN DATE,
	p_USAGE_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE MONITOR_PROFILE_REQUEST
	(
	p_CALENDAR_TYPE IN VARCHAR,
	p_ACCOUNT_ID IN NUMBER,
	p_METER_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_PROFILE_AS_OF_DATE IN DATE,
	p_USAGE_AS_OF_DATE IN DATE,
	p_DAY_SELECTION IN CHAR,
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT GA.REFCURSOR
	);

PROCEDURE CAST_SERVICE_REQUEST
	(
	p_REQUEST_TYPE IN CHAR,
	p_REQUEST_MODE IN NUMBER,
	p_SCENARIO_ID IN NUMBER,
	p_MODEL_ID IN NUMBER,
	p_PROCESS_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_ESP_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_INPUT_AS_OF_DATE IN DATE,
	p_OUTPUT_AS_OF_DATE IN DATE,
	p_PROFILE_BEGIN_DATE IN DATE,
	p_PROFILE_AS_OF_DATE IN DATE,
	p_APPLY_USAGE_FACTOR IN NUMBER,
	p_APPLY_UFE IN NUMBER,
	p_APPLY_UFE_OTHER IN NUMBER,
	p_APPLY_EXTERNAL_FORECAST IN NUMBER,
	p_REQUESTOR IN VARCHAR,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE CAST_SERVICE_REQUEST
	(
	p_REQUEST_TYPE IN CHAR,
	p_REQUEST_MODE IN NUMBER,
	p_SCENARIO_ID IN NUMBER,
	p_MODEL_ID IN NUMBER,
	p_PROCESS_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_ESP_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_INPUT_AS_OF_DATE IN DATE,
	p_OUTPUT_AS_OF_DATE IN DATE,
	p_PROFILE_BEGIN_DATE IN DATE,
	p_PROFILE_AS_OF_DATE IN DATE,
	p_APPLY_USAGE_FACTOR IN NUMBER,
	p_APPLY_UFE IN NUMBER,
	p_APPLY_UFE_OTHER IN NUMBER,
	p_APPLY_EXTERNAL_FORECAST IN NUMBER,
	p_REQUESTOR IN VARCHAR,
	p_TRACE_ON IN NUMBER
	);

PROCEDURE SIMILAR_DAY_TYPE
	(
	p_EDC_ID IN NUMBER,
	p_FORECAST_DATE IN DATE,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_HISTORICAL_DATE OUT DATE,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCOUNT_PROFILE
	(
	p_ACCOUNT_IDENT IN VARCHAR,
	p_IDENT_TYPE IN CHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_PROFILE OUT GA.NUMBER_TABLE,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCOUNT_PROFILE
	(
	p_ACCOUNT_NAME IN VARCHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_PROFILE OUT GA.NUMBER_TABLE,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCOUNT_PROFILE_ENERGY
	(
	p_ACCOUNT_IDENT IN VARCHAR,
	p_IDENT_TYPE IN CHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_PARAMETER_CODE IN CHAR, --F or A for Weather Parameter Code.  F used to be used always.
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_ENERGY OUT NUMBER,
	p_STATUS OUT NUMBER
	);

PROCEDURE ACCOUNT_PROFILE_ENERGY
	(
	p_ACCOUNT_NAME IN VARCHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_PARAMETER_CODE IN CHAR, --F or A for Weather Parameter Code.  F used to be used always.
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_ENERGY OUT NUMBER,
	p_STATUS OUT NUMBER
	);

PROCEDURE METER_PROFILE
	(
	p_ACCOUNT_IDENT IN VARCHAR,
	p_METER_ID  NUMBER,
	p_IDENT_TYPE IN CHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_PROFILE OUT GA.NUMBER_TABLE,
	p_STATUS OUT NUMBER
	);

PROCEDURE METER_PROFILE_ENERGY
	(
	p_ACCOUNT_IDENT IN VARCHAR,
	p_METER_ID  NUMBER,
	p_IDENT_TYPE IN CHAR,
	p_FORECAST_OR_SETTLEMENT IN VARCHAR,
	p_PARAMETER_CODE IN CHAR, --F or A for Weather Parameter Code.  F used to be used always.
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_ENERGY OUT NUMBER,
	p_STATUS OUT NUMBER
	);

PROCEDURE PROFILE_FROM_CALENDAR
	(
	p_CALENDAR_ID IN NUMBER,
	p_STATION_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_STATUS OUT NUMBER,
	p_ENERGY OUT NUMBER,
	p_DEMAND OUT NUMBER,
	p_PROFILE OUT GA.NUMBER_TABLE
	);

PROCEDURE PROJECTION_FROM_CALENDAR
	(
	p_CALENDAR_ID IN NUMBER,
	p_STATION_ID IN NUMBER,
	p_TEMPLATE_IDS IN VARCHAR,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE WRF_PROFILE_PROJECTION
	(
	p_PROFILE_ID IN NUMBER,
	p_PROJECTION_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_TRACE_ON IN NUMBER,
	p_WRF_VAR_1 IN OUT NOCOPY GA.NUMBER_TABLE,
	p_WRF_VAR_2 IN OUT NOCOPY GA.NUMBER_TABLE,
	p_WRF_PROFILE IN OUT NOCOPY GA.NUMBER_TABLE,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE SERVICE_VALIDATION_REQUEST
	(
	p_MODEL_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
	p_HISTORICAL IN NUMBER,
	p_AVERAGE IN NUMBER,
	p_MOST_RECENT IN NUMBER,
	p_ESP_IDS IN VARCHAR,
	p_REQUESTOR IN VARCHAR,
	p_TRACE IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE ACCEPT_EXTERNAL_CAST
	(
	p_REQUEST_TYPE IN CHAR,
	p_MODEL_ID IN NUMBER,
	p_SCENARIO_ID IN NUMBER,	--USE GA.BASE_SCENARIO_ID FOR OLD BEHAVIOR.
	p_ACCOUNT_IDENTIFIER IN VARCHAR,
	p_ACCOUNT_IDENTIFIER_TYPE IN CHAR,
	p_SERVICE_DATE IN DATE,
	p_INPUT_AS_OF_DATE IN DATE,
	p_OUTPUT_AS_OF_DATE IN DATE,
	p_CAST IN GA.NUMBER_TABLE,
	p_MINUTE_INTERVAL IN NUMBER,
	p_APPLY_USAGE_FACTOR IN NUMBER,
	p_APPLY_TD_LOSSES IN NUMBER,
	p_APPLY_UFE IN NUMBER,
	p_APPLY_UFE_OTHER IN NUMBER,
	p_APPLY_TO_INTERNAL IN NUMBER,
	p_REQUESTOR IN VARCHAR,
	p_TRACE_ON IN NUMBER,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE APPLY_LOSS_FACTORS
	(
	p_ACCOUNT_SERVICE_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_SERVICE_DATE IN DATE,
	p_LOAD IN GA.FLOAT_TABLE,
	p_TX_LOSS IN OUT NOCOPY GA.FACTOR_TABLE,
	p_DX_LOSS IN OUT NOCOPY GA.FACTOR_TABLE,
	p_UE_LOAD IN OUT NOCOPY GA.FACTOR_TABLE,
	p_FAULT_CACHE IN BOOLEAN DEFAULT FALSE
	);

PROCEDURE CREATE_LONG_TERM_PROFILES
	(
	p_MODEL_ID IN NUMBER,
	p_RUN_MODE IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR2,
	p_STATUS OUT NUMBER,
	p_TRACE_ON BOOLEAN DEFAULT FALSE
	);

PROCEDURE ALLOCATE_SERVICE_OBL_UFE
	(
	p_EDC_IDs IN NUMBER_COLLECTION,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR2,
	p_SERVICE_CODE IN VARCHAR2
	);

-- This procedure populates the SERVICE_OBLIGATION table and aggregates
-- Ancillary Service data into the SERVICE_OBLIGATION_ANC_SVC child table.
PROCEDURE AGGREGATE_ANC_SVC
	(
	p_ANCILLARY_SERVICE_ID IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_TIME_ZONE IN VARCHAR2
	);

PROCEDURE ENSURE_SERVICE_DETAILS
	(
	p_REQUEST_TYPE IN CHAR,
	p_MODEL_ID IN NUMBER,
	p_SCENARIO_ID IN NUMBER,
	p_EDC_ID IN NUMBER,
	p_ESP_ID IN NUMBER,
	p_ACCOUNT_ID IN NUMBER_COLLECTION,
	p_CUT_BEGIN IN DATE,
	p_CUT_END IN DATE,
	p_AS_OF_DATE IN DATE
	);


$if $$UNIT_TEST_MODE = 1 $then

PROCEDURE DELETE_SERVICE
	(
	p_CAST_CONTEXT IN CAST_CONTEXT_TYPE
	);

$end

-- CONSTANTS
g_WILD_CARD CONSTANT CHAR(1) := '*';
g_ALL CONSTANT NUMBER(2) := -1;
g_DEFAULT_POINT_INDEX CONSTANT NUMBER(1) := 1;
g_ANYTIME CONSTANT NUMBER(1) := 1;
g_PROJECTION_TEMPLATE CONSTANT NUMBER(1) := 2;
g_SECOND CONSTANT NUMBER(6,5) :=  .00001;
g_ANY_DAY CONSTANT NUMBER(1) := 1;
g_SUMMARY_ONLY CONSTANT NUMBER(2) := 5;
g_CUSTOMER_USAGE_WRF_CALENDAR CONSTANT NUMBER(1) := 1;
g_DATE_FORMAT CONSTANT CHAR(11) := 'DD-MON-YYYY';
g_LOW_DATE CONSTANT DATE := CONSTANTS.LOW_DATE;
g_OFF CONSTANT NUMBER(1) := 0;
g_ON CONSTANT NUMBER(1) := 1;

g_ACTUAL_USAGE_PROFILE CONSTANT CHAR(1) := 'A';
g_PROXY_USAGE_PROFILE CONSTANT CHAR(1) := 'P';
g_HISTORICAL_PROFILE CONSTANT CHAR(1) := 'H';
g_INDEXED_PROFILE CONSTANT CHAR(1) := 'I';
g_WRF_PROFILE CONSTANT CHAR(1) := 'W';
g_TYPICAL_PROFILE CONSTANT CHAR(1) := 'T';
g_COMPOSITE_PROFILE CONSTANT CHAR(1) := 'C';
g_CUSTOMER_USAGE_WRF_PROFILE CONSTANT CHAR(1) := 'X';
g_USAGE_WRF_PROFILE CONSTANT CHAR(1) := 'R';
g_EXTERNAL_PROFILE CONSTANT CHAR(1) := 'E';
g_ZERO_PROFILE CONSTANT CHAR(1) := 'Z';


TYPE SHORT_COLLECTION IS TABLE OF NUMBER(4)  INDEX BY BINARY_INTEGER;
TYPE INTEGER_COLLECTION IS TABLE OF NUMBER(9)  INDEX BY BINARY_INTEGER;
TYPE BYTE_COLLECTION IS TABLE OF CHAR(1)  INDEX BY BINARY_INTEGER;
TYPE DATE_COLLECTION IS TABLE OF DATE  INDEX BY BINARY_INTEGER;
TYPE FLOAT_COLLECTION IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
-- need a bigger index than allowed by binary_integer - due to limitations
-- in Oracle, this means we have to use VARCHAR as the index
TYPE BIG_INTEGER_COLLECTION IS TABLE OF NUMBER(9) INDEX BY VARCHAR2(16);

TYPE SUB_POOL_ALLOC IS RECORD
(
	SERVICE_OBLIGATION_ID SERVICE_OBLIGATION.SERVICE_OBLIGATION_ID%TYPE,
	ALLOCATION_PERCENTAGE POOL_SUB_POOL.ALLOCATION_PCT%TYPE
);

TYPE SUB_POOLS IS TABLE OF SUB_POOL_ALLOC;

TYPE SUB_POOLS_COLLECTION IS TABLE OF SUB_POOLS INDEX BY BINARY_INTEGER;

TYPE TOU_PERIOD_CACHE IS TABLE OF INTEGER_COLLECTION INDEX BY VARCHAR2(32);
TYPE TOU_USAGE_FACTOR_MAP IS TABLE OF NUMBER INDEX BY VARCHAR2(16);

-- Service daily accumulation global area.
g_SERVICE_MODEL_XREF INTEGER_COLLECTION;
g_SERVICE_XREF INTEGER_COLLECTION;
g_SERVICE_ID INTEGER_COLLECTION;
g_ACCOUNT_SERVICE_ID INTEGER_COLLECTION;
g_PROVIDER_SERVICE_ID INTEGER_COLLECTION;
g_SERVICE_DELIVERY_ID INTEGER_COLLECTION;
g_SERVICE_DATE DATE_COLLECTION;
g_SERVICE_OBLIGATION_ID INTEGER_COLLECTION;
g_POOL_ID INTEGER_COLLECTION;
g_SERVICE_POINT_ID INTEGER_COLLECTION;
g_SCHEDULE_GROUP_ID INTEGER_COLLECTION;
g_STATION_ID INTEGER_COLLECTION;
g_CAST_CALENDAR_ID INTEGER_COLLECTION;
g_PROXY_DAY_METHOD_ID INTEGER_COLLECTION;
g_SETTLEMENT_PROFILE_ID INTEGER_COLLECTION;
g_IS_UFE_PARTICIPANT BYTE_COLLECTION;
g_IS_CREATE_SETTLEMENT_PROFILE BYTE_COLLECTION;
g_SERVICE_ACCOUNTS FLOAT_COLLECTION;
g_METER_TYPE BYTE_COLLECTION;
g_SUPPLY_TYPE BYTE_COLLECTION;
g_IS_BUG BYTE_COLLECTION;
g_IS_WHOLESALE BYTE_COLLECTION;
g_IS_EXTERNAL_FORECAST BYTE_COLLECTION;
g_IS_AGGREGATE_ACCOUNT BYTE_COLLECTION;
g_IS_AGGREGATE_POOL BYTE_COLLECTION;
g_PROFILE_TYPE BYTE_COLLECTION;
g_PROFILE_SOURCE_DATE DATE_COLLECTION;
g_PROFILE_ZERO_COUNT INTEGER_COLLECTION;
g_USAGE_FACTOR FLOAT_COLLECTION;
g_GROWTH_FACTOR FLOAT_COLLECTION;
g_SERVICE_INTERVALS INTEGER_COLLECTION;
g_AGGREGATE_POOLS_SUB_POOLS SUB_POOLS_COLLECTION;

-- Forecast/Backcast daily accumulation global area.
g_SERVICE_LOAD_XREF BIG_INTEGER_COLLECTION;
g_SERVICE_LOAD_ID INTEGER_COLLECTION;
g_SERVICE_LOAD_DATE DATE_COLLECTION;
g_SERVICE_LOAD_VAL FLOAT_COLLECTION;
g_SERVICE_LOAD_TX_LOSS_VAL FLOAT_COLLECTION;
g_SERVICE_LOAD_DX_LOSS_VAL FLOAT_COLLECTION;
g_SERVICE_LOAD_UE_LOSS_VAL FLOAT_COLLECTION;

g_SERVICE_LOAD_CACHE_SIZE PLS_INTEGER := 0;

-- Service Obligation Load daily accumulation global area.
g_SOB_LOAD_XREF BIG_INTEGER_COLLECTION;
g_SOB_LOAD_ID INTEGER_COLLECTION;
g_SOB_LOAD_DATE DATE_COLLECTION;
g_SOB_LOAD_VAL FLOAT_COLLECTION;
g_SOB_TX_LOSS_VAL FLOAT_COLLECTION;
g_SOB_DX_LOSS_VAL FLOAT_COLLECTION;
g_SOB_UE_LOSS_VAL FLOAT_COLLECTION;
g_SOB_AGG_LOAD_VAL FLOAT_COLLECTION;
g_SOB_AGG_TX_LOSS_VAL FLOAT_COLLECTION;
g_SOB_AGG_DX_LOSS_VAL FLOAT_COLLECTION;

-- TOU Usage Factors cache structure
g_TOU_PERIOD_IDs TOU_PERIOD_CACHE;

-- Used by the Data Exchange to reapply the loss factors for all records
-- within the SERVICE_LOAD table with SERVICE_CODE=A and where the LOAD_DATE
-- falls within the dates specified.
-- Calls the other APPLY_LOSS_FACTORS routine within this package.
PROCEDURE REAPPLY_LOSS_FACTORS
	(
	p_BEGIN_DATE     IN  DATE,
	p_END_DATE       IN  DATE,
   p_TRACE_ON       IN  NUMBER,
   p_MESSAGE        OUT VARCHAR2,
   p_PROCESS_ID     OUT VARCHAR2,
   p_PROCESS_STATUS OUT NUMBER
	);


END FS;
/
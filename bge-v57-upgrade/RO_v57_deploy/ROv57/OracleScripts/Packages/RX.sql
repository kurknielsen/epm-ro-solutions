CREATE OR REPLACE PACKAGE RX AS
--Revision $Revision: 1.17 $

FUNCTION WHAT_VERSION RETURN VARCHAR;

PROCEDURE PREPARE_ROLLUP_HIERARCHY;

END;
/

CREATE OR REPLACE PACKAGE BODY RX AS

FUNCTION WHAT_VERSION RETURN VARCHAR IS
BEGIN
    RETURN '$Revision: 1.17 $';
END WHAT_VERSION;
----------------------------------------------------------------------------------------------------
PROCEDURE PREPARE_ROLLUP_HIERARCHY AS

TYPE ROLLUP_HIERARCHY_RECORD IS RECORD (
	ROLLUP_ID NUMBER,
	ROLLUP_NAME VARCHAR(64),
	ROLLUP_CATEGORY VARCHAR(16),
	ROLLUP_PARENT_ID NUMBER,
	ROLLUP_CHILDREN NUMBER);

TYPE ROLLUP_HIERARCHY_TABLE IS TABLE OF ROLLUP_HIERARCHY_RECORD INDEX BY BINARY_INTEGER;

CURSOR c_ROLLUP IS
	SELECT
		ROLLUP_ID,
		ROLLUP_NAME,
		ROLLUP_CATEGORY,
		ROLLUP_PARENT_ID,
		NVL(ROLLUP_CHILDREN,0)
	FROM RTO_ROLLUP
	WHERE ROLLUP_ID > 0;

v_ROLLUP RTO_ROLLUP%ROWTYPE;
v_ROLLUP_ID NUMBER;
v_ROLLUP_NAME VARCHAR(64);
v_ROLLUP_CATEGORY VARCHAR(16);
v_ROLLUP_PARENT_ID NUMBER;
v_ROLLUP_CHILDREN NUMBER;
v_INDEX NUMBER;
v_ID2 NUMBER;
v_ID3 NUMBER;
v_ID4 NUMBER;
v_ROLLUP_HIERARCHY RTO_ROLLUP_HIERARCHY%ROWTYPE;
v_ROLLUP_HIERARCHY_TABLE ROLLUP_HIERARCHY_TABLE;
v_SQL_STRING VARCHAR(64);
v_CURSOR NUMBER;
v_NUMROWS NUMBER;
v_SYSDATE DATE;

BEGIN

	SELECT SYSDATE INTO v_SYSDATE FROM DUAL;

	UPDATE RTO_ROLLUP A
	SET A.ROLLUP_CHILDREN =
		(
		SELECT COUNT(*)
		FROM RTO_ROLLUP B
		WHERE B.ROLLUP_PARENT_ID = A.ROLLUP_ID
		);

	BEGIN
		v_CURSOR := DBMS_SQL.OPEN_CURSOR;
		v_SQL_STRING := 'TRUNCATE TABLE RTO_ROLLUP_HIERARCHY';
		DBMS_SQL.PARSE(v_CURSOR,v_SQL_STRING,DBMS_SQL.V7);
		v_NUMROWS := DBMS_SQL.EXECUTE(v_CURSOR);
		DBMS_SQL.CLOSE_CURSOR(v_CURSOR);
	EXCEPTION
		WHEN OTHERS THEN
			DBMS_SQL.CLOSE_CURSOR(v_CURSOR);
			RAISE;
	END;

	INSERT INTO RTO_ROLLUP_HIERARCHY VALUES ('Business',0,'NA',0,'NA',0,'NA',0,'NA',v_SYSDATE);
	INSERT INTO RTO_ROLLUP_HIERARCHY VALUES ('Delivery',0,'NA',0,'NA',0,'NA',0,'NA',v_SYSDATE);
	INSERT INTO RTO_ROLLUP_HIERARCHY VALUES ('Geographic',0,'NA',0,'NA',0,'NA',0,'NA',v_SYSDATE);

	OPEN c_ROLLUP;
	LOOP
		FETCH c_ROLLUP INTO
			v_ROLLUP_ID,
			v_ROLLUP_NAME,
			v_ROLLUP_CATEGORY,
			v_ROLLUP_PARENT_ID,
			v_ROLLUP_CHILDREN;
		EXIT WHEN c_ROLLUP%NOTFOUND;
		v_ROLLUP_HIERARCHY_TABLE(v_ROLLUP_ID).ROLLUP_ID := v_ROLLUP_ID;
		v_ROLLUP_HIERARCHY_TABLE(v_ROLLUP_ID).ROLLUP_NAME := v_ROLLUP_NAME;
		v_ROLLUP_HIERARCHY_TABLE(v_ROLLUP_ID).ROLLUP_CATEGORY := v_ROLLUP_CATEGORY;
		v_ROLLUP_HIERARCHY_TABLE(v_ROLLUP_ID).ROLLUP_PARENT_ID := v_ROLLUP_PARENT_ID;
		v_ROLLUP_HIERARCHY_TABLE(v_ROLLUP_ID).ROLLUP_CHILDREN := v_ROLLUP_CHILDREN;
	END LOOP;
	CLOSE c_ROLLUP;

	v_INDEX := v_ROLLUP_HIERARCHY_TABLE.FIRST;
	LOOP
		IF v_ROLLUP_HIERARCHY_TABLE(v_INDEX).ROLLUP_CHILDREN = 0 THEN
			v_ROLLUP_HIERARCHY.ROLLUP_ID_1 := v_ROLLUP_HIERARCHY_TABLE(v_INDEX).ROLLUP_ID;
			v_ROLLUP_HIERARCHY.ROLLUP_1 := v_ROLLUP_HIERARCHY_TABLE(v_INDEX).ROLLUP_NAME;
			v_ROLLUP_HIERARCHY.ROLLUP_CATEGORY := v_ROLLUP_HIERARCHY_TABLE(v_INDEX).ROLLUP_CATEGORY;
			v_ID2 := v_ROLLUP_HIERARCHY_TABLE(v_INDEX).ROLLUP_PARENT_ID;
			IF v_ROLLUP_HIERARCHY_TABLE.EXISTS(v_ID2) THEN
				v_ROLLUP_HIERARCHY.ROLLUP_ID_2 := v_ID2;
				v_ROLLUP_HIERARCHY.ROLLUP_2 := v_ROLLUP_HIERARCHY_TABLE(v_ID2).ROLLUP_NAME;
				v_ID3 := v_ROLLUP_HIERARCHY_TABLE(v_ID2).ROLLUP_PARENT_ID;
				IF v_ROLLUP_HIERARCHY_TABLE.EXISTS(v_ID3) THEN
					v_ROLLUP_HIERARCHY.ROLLUP_ID_3 := v_ID3;
					v_ROLLUP_HIERARCHY.ROLLUP_3 := v_ROLLUP_HIERARCHY_TABLE(v_ID3).ROLLUP_NAME;
					v_ID4 := v_ROLLUP_HIERARCHY_TABLE(v_ID3).ROLLUP_PARENT_ID;
					IF v_ROLLUP_HIERARCHY_TABLE.EXISTS(v_ID4) THEN
						v_ROLLUP_HIERARCHY.ROLLUP_ID_4 := v_ID4;
						v_ROLLUP_HIERARCHY.ROLLUP_4 := v_ROLLUP_HIERARCHY_TABLE(v_ID4).ROLLUP_NAME;
					ELSE
						v_ROLLUP_HIERARCHY.ROLLUP_ID_4 := 0;
						v_ROLLUP_HIERARCHY.ROLLUP_4 := 'NA';
					END IF;
				ELSE
					v_ROLLUP_HIERARCHY.ROLLUP_ID_3 := 0;
					v_ROLLUP_HIERARCHY.ROLLUP_3 := 'NA';
					v_ROLLUP_HIERARCHY.ROLLUP_ID_4 := 0;
					v_ROLLUP_HIERARCHY.ROLLUP_4 := 'NA';
				END IF;
			ELSE
				v_ROLLUP_HIERARCHY.ROLLUP_ID_2 := 0;
				v_ROLLUP_HIERARCHY.ROLLUP_2 := 'NA';
				v_ROLLUP_HIERARCHY.ROLLUP_ID_3 := 0;
				v_ROLLUP_HIERARCHY.ROLLUP_3 := 'NA';
				v_ROLLUP_HIERARCHY.ROLLUP_ID_4 := 0;
				v_ROLLUP_HIERARCHY.ROLLUP_4 := 'NA';
			END IF;

			INSERT INTO RTO_ROLLUP_HIERARCHY VALUES (
				v_ROLLUP_HIERARCHY.ROLLUP_CATEGORY,
				v_ROLLUP_HIERARCHY.ROLLUP_ID_1,
				v_ROLLUP_HIERARCHY.ROLLUP_1,
				v_ROLLUP_HIERARCHY.ROLLUP_ID_2,
				v_ROLLUP_HIERARCHY.ROLLUP_2,
				v_ROLLUP_HIERARCHY.ROLLUP_ID_3,
				v_ROLLUP_HIERARCHY.ROLLUP_3,
				v_ROLLUP_HIERARCHY.ROLLUP_ID_4,
				v_ROLLUP_HIERARCHY.ROLLUP_4,
				v_SYSDATE);

		END IF;
		EXIT WHEN v_INDEX = v_ROLLUP_HIERARCHY_TABLE.LAST;
		v_INDEX := v_ROLLUP_HIERARCHY_TABLE.NEXT(v_INDEX);
	END LOOP;

END PREPARE_ROLLUP_HIERARCHY;
---------------------------------------------------------------------------------------------------
END RX;
/


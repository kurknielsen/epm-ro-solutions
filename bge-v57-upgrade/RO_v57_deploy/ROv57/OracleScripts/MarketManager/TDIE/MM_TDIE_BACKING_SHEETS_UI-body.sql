CREATE OR REPLACE PACKAGE BODY MM_TDIE_BACKING_SHEETS_UI IS
------------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR2 IS
BEGIN
    RETURN '$Revision: 1.4 $';
END WHAT_VERSION;
---------------------------------------------------------------------------------------------------
PROCEDURE DUOS_RECIPIENT_LIST
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT DISTINCT DI.RECIPIENT_CID
		FROM TDIE_DUOS_INVOICE DI
		WHERE DI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
		ORDER BY 1;
END DUOS_RECIPIENT_LIST;
------------------------------------------------------------------------------------------
PROCEDURE DUOS_INV_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_RECIPIENT_CID IN VARCHAR2,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT DI.INVOICE_NUMBER,
			DI.SENDER_CID,
			DI.RECIPIENT_CID,
			DI.MARKET_TIMESTAMP,
			DI.CONTROL_TOTAL,
			DI.NET_CHARGE_AMT_IMPORTED,
			DI.GROSS_CHARGE_AMT_IMPORTED,
			DI.TOTAL_RECORDS,
			DI.RECORDS_IMPORTED,
			DI.IMPORT_TIMESTAMP,
			DI.FILE_NAME,
			DI.RETAIL_INVOICE_ID,
			(SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END FROM RETAIL_INVOICE_COMPONENT C WHERE C.RETAIL_INVOICE_ID = DI.RETAIL_INVOICE_ID) AS HAS_RUN_SETTLEMENT
		FROM TDIE_DUOS_INVOICE DI
		WHERE DI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
			AND DI.RECIPIENT_CID = p_RECIPIENT_CID
		ORDER BY DI.MARKET_TIMESTAMP DESC;
END DUOS_INV_SUMMARY;
------------------------------------------------------------------------------------------
PROCEDURE DUOS_INV_DETAILS
	(
	p_DETAIL_TYPE IN VARCHAR2, -- MPRN Details or Group Summary
	p_INVOICE_NUMBER IN VARCHAR2,
	p_MPRN_SEARCH_STRING IN VARCHAR2, -- Used when DETAIL_TYPE is MPRN Details
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN

	IF p_DETAIL_TYPE = 'MPRN Details' THEN
		OPEN p_CURSOR FOR
			SELECT INVOICE_NUMBER,
				INVOICE_ITEM_NUMBER,
				MPRN,
				ADJUSTED_REFERENCE,
				INVOICE_TYPE,
				DUOS_GROUP,
				BILLING_BEGIN_DATE,
				BILLING_END_DATE,
				ENERGY_CONSUMPTION_DAY,
				ENERGY_CHARGE_DAY,
				ENERGY_CONSUMPTION_NIGHT,
				ENERGY_CHARGE_NIGHT,
				ENERGY_CONSUMPTION_24HR,
				ENERGY_CHARGE_24HR,
				STANDING_CHARGE,
				CAPACITY_CHARGE,
				MAX_IMPORT_CAPACITY,
				MAX_KVA,
				MIC_SURCHARGE,
				REACTIVE_ENERGY,
				POWER_FACTOR_SURCHARGE,
				NET_AMOUNT,
				GROSS_AMOUNT
			FROM TDIE_DUOS_INVOICE_DETAIL DID
			WHERE DID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND DID.MPRN LIKE GUI_UTIL.FIX_SEARCH_STRING(p_MPRN_SEARCH_STRING)
			ORDER BY MPRN, BILLING_BEGIN_DATE,
			 	BILLING_END_DATE, INVOICE_TYPE, INVOICE_ITEM_NUMBER;
	ELSIF p_DETAIL_TYPE = 'Group Summary' THEN
		OPEN p_CURSOR FOR
			SELECT DUOS_GROUP,
				COUNT(DUOS_GROUP) AS TOTAL_RECORDS,
				SUM(ENERGY_CONSUMPTION_DAY) AS ENERGY_CONSUMPTION_DAY,
				SUM(ENERGY_CHARGE_DAY) AS ENERGY_CHARGE_DAY,
				SUM(ENERGY_CONSUMPTION_NIGHT) AS ENERGY_CONSUMPTION_NIGHT,
				SUM(ENERGY_CHARGE_NIGHT) AS ENERGY_CHARGE_NIGHT,
				SUM(ENERGY_CONSUMPTION_24HR) AS ENERGY_CONSUMPTION_24HR,
				SUM(ENERGY_CHARGE_24HR) AS ENERGY_CHARGE_24HR,
				SUM(REACTIVE_ENERGY) AS REACTIVE_CHARGE,
				SUM(STANDING_CHARGE) AS STANDING_CHARGE,
				SUM(CAPACITY_CHARGE) AS CAPACITY_CHARGE,
				SUM(MIC_SURCHARGE) AS MIC_SURCHARGE,
				SUM(POWER_FACTOR_SURCHARGE) AS POWER_FACTOR_SURCHARGE,
				SUM(CASE WHEN DID.INVOICE_TYPE = '1S' THEN 1 ELSE 0 END) AS TOTAL_NEW_CHARGES,
				SUM(CASE WHEN DID.INVOICE_TYPE = '2S' OR DID.INVOICE_TYPE = '2C' OR DID.INVOICE_TYPE = '2D' THEN 1 ELSE 0 END) AS CREDITS,
				SUM(CASE WHEN DID.INVOICE_TYPE = '3S' OR DID.INVOICE_TYPE = '3C' OR DID.INVOICE_TYPE = '3D' THEN 1 ELSE 0 END) AS DEBITS
			FROM TDIE_DUOS_INVOICE_DETAIL DID
			WHERE DID.INVOICE_NUMBER = p_INVOICE_NUMBER
			GROUP BY DUOS_GROUP
			ORDER BY DUOS_GROUP;
	END IF;
END DUOS_INV_DETAILS;
---------------------------------------------------------------------------------------------------
PROCEDURE DUOS_NI_RECIPIENT_LIST
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT DISTINCT DNI.SUPPLIER
		FROM TDIE_DUOS_NI_INVOICE DNI
		WHERE DNI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
		ORDER BY 1;
END DUOS_NI_RECIPIENT_LIST;
------------------------------------------------------------------------------------------
PROCEDURE DUOS_NI_INV_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_SUPPLIER IN VARCHAR2,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT DNI.INVOICE_NUMBER,
			DNI.SUPPLIER,
			DNI.MARKET_TIMESTAMP,
			DNI.TOTAL_ITEMISED_LINES,
			DNI.RECORDS_IMPORTED,
			DNI.MPRN_COUNT,
			DNI.IMPORTED_REVENUE,
            DNI.REVENUE_EXCL_VAT,
            DNI.REVENUE_INC_VAT,
			DNI.IMPORT_TIMESTAMP,
			DNI.FILE_NAME
		FROM TDIE_DUOS_NI_INVOICE DNI
		WHERE DNI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
			AND DNI.SUPPLIER = p_SUPPLIER
		ORDER BY DNI.MARKET_TIMESTAMP DESC;
END DUOS_NI_INV_SUMMARY;
------------------------------------------------------------------------------------------
PROCEDURE DUOS_NI_INV_DETAILS
	(
	p_DETAIL_TYPE IN VARCHAR2, -- MPRN Details or Group Summary
	p_INVOICE_NUMBER IN VARCHAR2,
    p_DUOS_GROUP IN VARCHAR2,
	p_MPRN_SEARCH_STRING IN VARCHAR2, -- Used when DETAIL_TYPE is MPRN Details
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN

	IF p_DETAIL_TYPE = 'MPRN Details' THEN
		OPEN p_CURSOR FOR
			SELECT INVOICE_NUMBER,
                   ITEM_NUMBER,
                   POD_ID,
                   ADJUST_REF,
                   INVOICE_TYPE,
                   DUOS_GROUP,
                   BILLING_BEGIN_DATE,
                   BILLING_END_DATE,
                   RATE_CATEGORY,
                   STAND_CHARGE,
                   UNR_VOLUME,
                   UNR_CHARGE,
                   D01_VOLUME,
                   D01_CHARGE,
                   N01_VOLUME,
                   N01_CHARGE,
                   D02_VOLUME,
                   D02_CHARGE,
                   N02_VOLUME,
                   N02_CHARGE,
                   N03_VOLUME,
                   N03_CHARGE,
                   N04_VOLUME,
                   N04_CHARGE,
                   HT1_VOLUME,
                   HT1_CHARGE,
                   HT2_VOLUME,
                   HT2_CHARGE,
                   HT3_VOLUME,
                   HT3_CHARGE,
                   W1_VOLUME,
                   W1_CHARGE,
                   W2_VOLUME,
                   W2_CHARGE,
                   FR1_VOLUME,
                   FR1_CHARGE,
                   FR2_VOLUME,
                   FR2_CHARGE,
                   FR3_VOLUME,
                   FR3_CHARGE,
                   FR4_VOLUME,
                   FR4_CHARGE,
                   KP5_VOLUME,
                   KP5_CHARGE,
                   KP6_VOLUME,
                   KP6_CHARGE,
                   KP7_VOLUME,
                   KP7_CHARGE,
                   KP8_VOLUME,
                   KP8_CHARGE,
                   R21_VOLUME,
                   R21_CHARGE,
                   R22_VOLUME,
                   R22_CHARGE,
                   R23_VOLUME,
                   R23_CHARGE,
                   R24_VOLUME,
                   R24_CHARGE,
                   R25_VOLUME,
                   R25_CHARGE,
                   UNMTRD_VOLUME,
                   UNMTRD_CHARGE,
                   SMO_VOLUME,
                   SMO_CHARGE,
                   NFD_VOLUME,
                   NFD_CHARGE,
                   DJD_VOLUME,
                   DJD_CHARGE,
                   NKP_VOLUME,
                   NKP_CHARGE,
                   DJPK_VOLUME,
                   DJPK_CHARGE,
                   EW_VOLUME,
                   EW_CHARGE,
                   NT_VOLUME,
                   NT_CHARGE,
                   RPC_VOLUME,
                   RPC_CHARGE,
                   CSC_VOLUME,
                   CSC_CHARGE,
                   MIC_VOLUME,
                   MIC_CHARGE,
                   R26_VOLUME,
                   R26_CHARGE,
                   TOTAL_REVENUE,
                   REVENUE_INC_VAT
			FROM TDIE_DUOS_NI_INVOICE_DETAIL DID
			WHERE DID.INVOICE_NUMBER = p_INVOICE_NUMBER
                AND DID.DUOS_GROUP = p_DUOS_GROUP
				AND DID.POD_ID LIKE GUI_UTIL.FIX_SEARCH_STRING(p_MPRN_SEARCH_STRING)
			ORDER BY POD_ID, BILLING_BEGIN_DATE,
			 	BILLING_END_DATE, INVOICE_TYPE, ITEM_NUMBER;
	END IF;
END DUOS_NI_INV_DETAILS;
------------------------------------------------------------------------------------------
PROCEDURE TUOS_INV_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT TI.INVOICE_NUMBER,
			TI.INVOICE_NAME,
			TI.INVOICE_START_DATE,
			TI.INVOICE_END_DATE,
			TI.INVOICE_DATE,
			TI.INVOICE_DUE_DATE,
			TI.CUSTOMER_ID,
			TI.CUSTOMER_NAME,
			TI.NET_CHARGE_AMT_IMPORTED,
			TI.GROSS_CHARGE_AMT_IMPORTED,
			TI.MPRN_COUNT,
			TI.SUPPLY_UNIT_COUNT,
			TI.RECORDS_IMPORTED,
			TI.IMPORT_TIMESTAMP,
			TI.FILE_NAME,
			TI.RETAIL_INVOICE_ID,
			(SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END FROM RETAIL_INVOICE_COMPONENT C WHERE C.RETAIL_INVOICE_ID = TI.RETAIL_INVOICE_ID) AS HAS_RUN_SETTLEMENT
		FROM TDIE_TUOS_INVOICE TI
		WHERE TI.INVOICE_START_DATE <= p_END_DATE
			AND TI.INVOICE_END_DATE >= p_BEGIN_DATE
		ORDER BY TI.INVOICE_DATE DESC;
END TUOS_INV_SUMMARY;
------------------------------------------------------------------------------------------
PROCEDURE TUOS_INV_DETAILS
	(
	p_DETAIL_TYPE IN VARCHAR2, -- Account Details or Tariff Summary
	p_INVOICE_NUMBER IN VARCHAR2,
	p_SEARCH_BY IN VARCHAR2,
	p_SEARCH_STRING IN VARCHAR2, -- Used when DETAIL_TYPE is Account Details
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	IF p_DETAIL_TYPE = 'Account Details' THEN
		OPEN p_CURSOR FOR
			SELECT TID.INVOICE_NUMBER,
				TID.ACCOUNT_XID,
				TID.ACCOUNT_CATEGORY,
				TID.ACCOUNT_TYPE,
				TID.ACCOUNT_CODE,
				TID.ACCOUNT_NAME,
				TID.METER_XID,
				TID.METER_CATEGORY,
				TID.METER_TYPE,
				TID.METER_CODE,
				TID.METER_NAME,
				TIC.INVOICE_CATEGORY,
				TID.BILL_NAME,
				TID.BILL_CONTACT,
				TID.BILL_ADDRESS1,
				TID.BILL_ADDRESS2,
				TID.BILL_CITY,
				TID.BILL_REGION,
				TID.BILL_COUNTRY,
				TID.BILL_POSTAL_CODE,
				TID.MPRN,
				TID.SUPPLY_UNIT,
				TIC.INV_DET_START_DATE,
				TIC.INV_DET_END_DATE,
				TIC.INV_DET_CATEGORY,
				TIC.INV_DET_TYPE,
				TIC.INV_DET_CODE,
				TIC.INV_DET_CATEGORY2,
				TIC.INV_DET_SEQ,
				TIC.INV_DET_NAME,
				TIC.INV_DET_VALUE,
				TIC.INV_DET_UOM,
				TIC.MULTI_CIP_FLAG,
				TIC.VAT_CHARGE,
				TIC.INV_DET_VALUE_CHARGE,
				TIC.INV_DET_VALUE_CHARGE_NO_VAT,
				TIC.INV_DET_TYPE_SORT,
				TIC.EIR_RPT_INV_DET_ID,
				TIC.BILL_DATE,
				TIC.CIP_DATE,
				TIC.INV_STATUS_DRAFT,
				TIC.INV_NUMBER_RELEASED,
				TIC.INV_DATE_RELEASED,
				TIC.INV_DET_NOTES,
				TIC.INV_DET_NOTE_SORT,
				TIC.DLAFG,
				TIC.DG
			FROM TDIE_TUOS_INVOICE_DETAIL TID,
				TDIE_TUOS_INV_CHARGE_DTL TIC
			WHERE TID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TIC.INVOICE_NUMBER = TID.INVOICE_NUMBER
				AND TIC.ACCOUNT_XID = TID.ACCOUNT_XID
				AND ((TID.ACCOUNT_NAME LIKE GUI_UTIL.FIX_SEARCH_STRING(p_SEARCH_STRING) AND p_SEARCH_BY = 'Account Name')
					OR (TID.ACCOUNT_XID LIKE GUI_UTIL.FIX_SEARCH_STRING(p_SEARCH_STRING) AND p_SEARCH_BY = 'Account Id'))
				AND TIC.METER_NAME = TID.METER_NAME
			ORDER BY TIC.INVOICE_NUMBER,
				TIC.INV_DET_START_DATE,
				TIC.INV_DET_END_DATE,
				TIC.INV_DET_CATEGORY,
				TIC.INV_DET_TYPE,
				TIC.INV_DET_CODE,
				TIC.INV_DET_CATEGORY2,
				TIC.INV_DET_SEQ,
				TIC.INV_DET_NOTE_SORT;
	ELSIF p_DETAIL_TYPE = 'Tariff Summary' THEN
		OPEN p_CURSOR FOR
			-- Total Customer
			SELECT 1 AS SORT_ORDER,
				TIC.INV_DET_CATEGORY,
				'-' AS TOTAL_TYPE,
				'Total Customers' AS INV_DET_CODE,
				COUNT(TID.MPRN) + COUNT(TID.SUPPLY_UNIT) AS VALUE
			FROM TDIE_TUOS_INVOICE_DETAIL TID,
				TDIE_TUOS_INV_CHARGE_DTL TIC
			WHERE TID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TIC.INVOICE_NUMBER = TID.INVOICE_NUMBER
				AND TIC.ACCOUNT_XID = TID.ACCOUNT_XID
				AND TIC.METER_NAME = TID.METER_NAME
				AND TIC.INV_DET_TYPE = 'CHARGING PARAMETERS'
				AND TIC.INV_DET_UOM = 'MWh'
			GROUP BY TIC.INVOICE_NUMBER,
				TIC.INV_DET_CATEGORY,
				TIC.INV_DET_CODE
			UNION ALL
			-- Energy Totals
			SELECT 2 AS SORT_ORDER,
				TIC.INV_DET_CATEGORY,
				'Energy Totals' AS TOTAL_TYPE,
				TIC.INV_DET_CODE,
				SUM(TIC.INV_DET_VALUE) AS VALUE
			FROM TDIE_TUOS_INVOICE_DETAIL TID,
				TDIE_TUOS_INV_CHARGE_DTL TIC
			WHERE TID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TIC.INVOICE_NUMBER = TID.INVOICE_NUMBER
				AND TIC.ACCOUNT_XID = TID.ACCOUNT_XID
				AND TIC.METER_NAME = TID.METER_NAME
				AND TIC.INV_DET_TYPE = 'CHARGING PARAMETERS'
				AND TIC.INV_DET_UOM = 'MWh'
			GROUP BY TIC.INVOICE_NUMBER,
				TIC.INV_DET_CATEGORY,
				TIC.INV_DET_CODE
			UNION ALL
			-- Charge Totals
			SELECT 3 AS SORT_ORDER,
				TIC.INV_DET_CATEGORY,
				'Charge Totals' AS TOTAL_TYPE,
				TIC.INV_DET_CODE,
				SUM(TIC.INV_DET_VALUE) AS VALUE
			FROM TDIE_TUOS_INVOICE_DETAIL TID,
				TDIE_TUOS_INV_CHARGE_DTL TIC
			WHERE TID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TIC.INVOICE_NUMBER = TID.INVOICE_NUMBER
				AND TIC.ACCOUNT_XID = TID.ACCOUNT_XID
				AND TIC.METER_NAME = TID.METER_NAME
				AND TIC.INV_DET_TYPE = 'CHARGES FOR ACCOUNT IN CHARGING INTERVAL'
			GROUP BY TIC.INVOICE_NUMBER,
				TIC.INV_DET_CATEGORY,
				TIC.INV_DET_CODE;
	END IF;
END TUOS_INV_DETAILS;
------------------------------------------------------------------------------------------
PROCEDURE UOS_RECIPIENT_LIST
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT DISTINCT UI.RECIPIENT_CID
		FROM TDIE_UOS_INVOICE UI
		WHERE UI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
		ORDER BY 1;
END UOS_RECIPIENT_LIST;
------------------------------------------------------------------------------------------
PROCEDURE UOS_INV_SUMMARY
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_RECIPIENT_CID IN VARCHAR2,
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	OPEN p_CURSOR FOR
		SELECT UI.INVOICE_NUMBER,
			RECIPIENT_CID,
			MARKET_TIMESTAMP,
			DUE_DATE,
			TOTAL_CONSUMPTION,
			TOTAL_CSC,
			TOTAL_REACTIVE,
			TOTAL_STANDING_CHARGE,
			TOTAL_TRANSMISSION_REBATE,
			TOTAL_AD_HOC,
			TOTAL_CONSUMPTION_ADJUSTMENT,
			TOTAL_VAT,
			TOTAL_CANCELED,
			TOTAL_CONSUMPTION_KWH,
			TOTAL_DETAIL_LINES,
			NET_CHARGE_AMT_IMPORTED,
			GROSS_CHARGE_AMT_IMPORTED,
			MPRN_COUNT AS TOTAL_CUSTOMERS,
			RECORDS_IMPORTED,
			IMPORT_TIMESTAMP,
			FILE_NAME,
			RETAIL_INVOICE_ID,
			(SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END FROM RETAIL_INVOICE_COMPONENT C WHERE C.RETAIL_INVOICE_ID = UI.RETAIL_INVOICE_ID) AS HAS_RUN_SETTLEMENT
		FROM TDIE_UOS_INVOICE UI
		WHERE UI.RECIPIENT_CID = p_RECIPIENT_CID
			AND UI.MARKET_TIMESTAMP BETWEEN p_BEGIN_DATE AND p_END_DATE
		ORDER BY UI.MARKET_TIMESTAMP DESC;
END UOS_INV_SUMMARY;
------------------------------------------------------------------------------------------
PROCEDURE UOS_INV_DETAILS
	(
	p_DETAIL_TYPE IN VARCHAR2, -- MPRN Details or Tariff Summary
	p_INVOICE_NUMBER IN VARCHAR2,
	p_MPRN_SEARCH_STRING IN VARCHAR2, -- Used when DETAIL_TYPE is MPRN Details
	p_CURSOR IN OUT GA.REFCURSOR
	) AS
BEGIN
	IF p_DETAIL_TYPE = 'MPRN Details' THEN
		OPEN p_CURSOR FOR
			SELECT INVOICE_NUMBER,
				RECORD_TYPE,
				MPRN,
				METER_ID_SERIAL_NUMBER,
				START_DATE,
				END_DATE,
				UNIT_OF_MEASURE,
				TIMESLOT_CODE,
				START_READ,
				START_READ_TYPE,
				END_READ,
				END_READ_TYPE,
				TOTAL_UNITS,
				ESTIMATED_UNITS,
				UOS_TARIFF,
				RATE,
				CHARGE,
				LAST_ACTUAL_READ_VALUE,
				LAST_ACTUAL_READ_DATE
			FROM TDIE_UOS_INVOICE_DETAIL TUID
			WHERE TUID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TUID.MPRN LIKE GUI_UTIL.FIX_SEARCH_STRING(p_MPRN_SEARCH_STRING)
			ORDER BY START_DATE,
			 	END_DATE,
				MPRN;
	ELSIF p_DETAIL_TYPE = 'Tariff Summary' THEN
		OPEN p_CURSOR FOR
			-- Total Customer
			SELECT 1 AS SORT_ORDER,
				TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF,
				'-' AS TOTAL_TYPE,
				'Total Customer' AS TIME_SLOT_OR_RECORD_TYPE,
				NULL AS AMOUNT,
				NULL AS QUANTITY,
				COUNT(DISTINCT TUID.MPRN) AS TOTAL_CUSTOMERS
			FROM TDIE_UOS_INVOICE_DETAIL TUID
			WHERE TUID.INVOICE_NUMBER = p_INVOICE_NUMBER
			GROUP BY TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF
			UNION ALL
			-- Energy Totals
			SELECT 2 AS SORT_ORDER,
				TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF,
				'Energy Totals' AS TOTAL_TYPE,
				TUID.TIMESLOT_CODE AS TIME_SLOT_OR_RECORD_TYPE,
				NULL AS AMOUNT,
				SUM(NVL(TUID.TOTAL_UNITS,0)) AS QUANTITY,
				NULL AS TOTAL_CUSTOMERS
			FROM TDIE_UOS_INVOICE_DETAIL TUID
			WHERE TUID.INVOICE_NUMBER = p_INVOICE_NUMBER
				AND TUID.RECORD_TYPE = 'KWH'
			GROUP BY TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF,
				TUID.TIMESLOT_CODE
			UNION ALL
			-- Charge Totals
			SELECT 3 AS SORT_ORDER,
				TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF,
				'Charge Totals' AS TOTAL_TYPE,
				TUID.RECORD_TYPE AS TIME_SLOT_OR_RECORD_TYPE,
				SUM(NVL(TUID.CHARGE,0)) AS AMOUNT,
				NULL AS QUANTITY,
				NULL AS TOTAL_CUSTOMERS
			FROM TDIE_UOS_INVOICE_DETAIL TUID
			WHERE TUID.INVOICE_NUMBER = p_INVOICE_NUMBER
			GROUP BY TUID.INVOICE_NUMBER,
				TUID.UOS_TARIFF,
				TUID.RECORD_TYPE;
	END IF;
END UOS_INV_DETAILS;
------------------------------------------------------------------------------------------
END MM_TDIE_BACKING_SHEETS_UI;
/

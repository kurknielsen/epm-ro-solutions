CREATE OR REPLACE PACKAGE MM_TDIE_INVOICE IS
-- $Revision: 1.21 $

	-- Author  : PMANNING
	-- Created : 12/14/2009 3:55:05 PM
	-- Purpose :

    FUNCTION WHAT_VERSION RETURN VARCHAR2;

	PROCEDURE RUN_ACCOUNT_VALIDATION
	(
	p_INVOICE_NUMBER IN VARCHAR2,
	p_SENDER_CID     IN VARCHAR2,
	p_PROCESS_ID 	 OUT VARCHAR2,
	p_PROCESS_STATUS OUT NUMBER,
	p_MESSAGE 		 OUT VARCHAR2,
	p_TRACE_ON       IN NUMBER := 0
	);

	-- Runs static data validation for the selected set of Invoices.
	-- %param p_INVOICE_NUMBER  The list of selected INVOICE_NUMBERs.
	-- %param p_SENDER_CID      The list of selected SENDER_CIDS. Used by the Canonicalizer
	--                          to determine which Invoice table is being used.
	-- %param p_PROCESS_ID      Outbound PROCESS_ID from the Process that is created.
	-- %param p_PROCESS_STATUS  Outbound PROCESS_STATUS from the Process that is created.
	-- %param p_MESSAGE         Outbound FINISH_MESSAGE from the Process that is created.
	-- %param p_TRACE_ON        Optional, inbound parameter used to turn on debug logging.
	PROCEDURE RUN_ACCOUNT_VALIDATIONS
	(
	p_INVOICE_NUMBERS IN STRING_COLLECTION,
	p_SENDER_CIDS     IN STRING_COLLECTION,
	p_PROCESS_ID 	  OUT VARCHAR2,
	p_PROCESS_STATUS  OUT NUMBER,
	p_MESSAGE 		  OUT VARCHAR2,
	p_TRACE_ON        IN NUMBER := 0
	);

    FUNCTION GET_TUOS_TDIE_INVOICE_DATA
	(
	p_INVOICE_NUMBER IN VARCHAR2
	) RETURN TDIE_INVOICE_DATA_TABLE PIPELINED;

    FUNCTION GET_DUOS_TDIE_INVOICE_DATA
	(
	p_INVOICE_NUMBER IN VARCHAR2
	) RETURN TDIE_INVOICE_DATA_TABLE PIPELINED;

    FUNCTION GET_DUOS_NI_TDIE_INVOICE_DATA
	(
	p_INVOICE_NUMBER IN VARCHAR2
	) RETURN TDIE_INVOICE_DATA_TABLE PIPELINED;

	FUNCTION GET_UOS_TDIE_INVOICE_DATA
	(
	p_INVOICE_NUMBER IN VARCHAR2,
	p_SENDER_CID IN VARCHAR2
	) RETURN TDIE_INVOICE_DATA_TABLE PIPELINED;

	PROCEDURE RUN_FINANCIAL_SETTLEMENT
	(
	p_INVOICE_NUMBER 	IN VARCHAR2,
	p_SENDER_CID     	IN VARCHAR2,
	p_STATEMENT_TYPE_ID IN NUMBER,
	p_PROCESS_ID 	 	OUT VARCHAR2,
	p_PROCESS_STATUS 	OUT NUMBER,
	p_MESSAGE 		 	OUT VARCHAR2,
	p_TRACE_ON       	IN NUMBER := 0
	);

	PROCEDURE RUN_FINANCIAL_SETTLEMENTS
	(
	p_INVOICE_NUMBERS 	IN STRING_COLLECTION,
	p_SENDER_CIDS     	IN STRING_COLLECTION,
	p_STATEMENT_TYPE_ID IN NUMBER,
	p_PROCESS_ID 	  	OUT VARCHAR2,
	p_PROCESS_STATUS  	OUT NUMBER,
	p_MESSAGE 		  	OUT VARCHAR2,
	p_TRACE_ON        	IN NUMBER := 0
	);

	PROCEDURE RUN_PSO_CCL_SSS_INVOICES
	(
	p_RETAIL_INVOICE_IDs        IN NUMBER_COLLECTION,
	p_SENDER_IDs     	        IN NUMBER_COLLECTION,
	p_INVOICE_STATEMENT_TYPE_ID IN NUMBER,
	p_PROCESS_ID 	  	        OUT VARCHAR2,
	p_PROCESS_STATUS  	        OUT NUMBER,
	p_MESSAGE 		  	        OUT VARCHAR2,
	p_TRACE_ON        	        IN NUMBER := 0
	);

	-- procedures to get the RETAIL_SETTLEMENT_INPUT_CURSOR for the CCL/PSO/SSS Invoices
	PROCEDURE GET_CCL_RETAIL_SETTLEMENT_CUR
	(
    p_RETAIL_INVOICE_ID IN NUMBER,
    p_CURSOR OUT RETAIL_SETTLEMENT.RETAIL_SETTLEMENT_INPUT_CURSOR
	);

	PROCEDURE GET_SSS_RETAIL_SETTLEMENT_CUR
	(
    p_RETAIL_INVOICE_ID IN NUMBER,
    p_CURSOR OUT RETAIL_SETTLEMENT.RETAIL_SETTLEMENT_INPUT_CURSOR
	);

	PROCEDURE GET_PSO_ROI_RETAIL_STLMNT_CUR
	(
    p_RETAIL_INVOICE_ID IN NUMBER,
    p_CURSOR OUT RETAIL_SETTLEMENT.RETAIL_SETTLEMENT_INPUT_CURSOR
	);

	PROCEDURE GET_PSO_NI_RETAIL_STLMNT_CUR
	(
    p_RETAIL_INVOICE_ID IN NUMBER,
    p_CURSOR OUT RETAIL_SETTLEMENT.RETAIL_SETTLEMENT_INPUT_CURSOR
	);

$if $$UNIT_TEST_MODE = 1 $then

    FUNCTION GET_RETAIL_INVOICE
	(
	p_INVOICE_NUMBER IN VARCHAR2,
	p_SENDER_CID     IN VARCHAR2
	) RETURN RETAIL_INVOICE%ROWTYPE;

	PROCEDURE APPLY_DX_LOSSES_TO_MTR_POINT(
	      p_BEGIN_DATE DATE,
	      p_END_DATE DATE,
	      p_METER_POINT_ID NUMBER
	);
$end

END MM_TDIE_INVOICE;
/
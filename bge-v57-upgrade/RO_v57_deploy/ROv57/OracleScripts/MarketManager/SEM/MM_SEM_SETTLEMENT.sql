CREATE OR REPLACE PACKAGE MM_SEM_SETTLEMENT IS
--Revision: $Revision: 1.43 $

TYPE REF_CURSOR IS REF CURSOR;

FUNCTION WHAT_VERSION RETURN VARCHAR;

PROCEDURE DOWNLOAD_SETTLEMENT_REPORTS
    (
    p_BEGIN_DATE IN DATE,
    p_END_DATE IN DATE,
    p_FORCE_DOWNLOADS IN NUMBER,
  	p_USE_DL_GROUPS IN NUMBER := 0,
    p_LOG_TYPE IN NUMBER,
    p_TRACE_ON IN NUMBER,
    p_STATUS  OUT NUMBER,
    p_MESSAGE OUT VARCHAR2
    );

PROCEDURE IMPORT_STATEMENT_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE IMPORT_PARTICIPANT_INFO_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE IMPORT_UNPROCESSED_PIRS
	(
	p_IMPORT_FILE_ID 	IN NUMBER_COLLECTION,
	p_STATEMENT_TYPE_ID	IN NUMBER,
	p_LOG_TYPE			IN NUMBER,
	p_TRACE_ON			IN NUMBER,
	p_STATUS  			OUT NUMBER,
  	p_MESSAGE 			OUT VARCHAR2
	);

PROCEDURE IMPORT_REALLOCATIONS_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE IMPORT_INVOICE_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE IMPORT_GP_REPORT_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	);

PROCEDURE GET_CHARGE_DETAIL
	(
	p_CALLING_MODULE IN VARCHAR,
	p_MODEL_ID IN NUMBER,
    p_CHARGE_VIEW_TYPE IN VARCHAR2,
	p_ENTITY_ID IN NUMBER,
	p_COMPONENT_ID IN NUMBER,
	p_WORK_ID IN NUMBER,
	p_TIME_ZONE IN VARCHAR,
	p_AS_OF_DATE IN DATE,
	p_BAND_KEYWORD OUT VARCHAR,
	p_HAS_SUBTOTALS OUT NUMBER,
    p_SHOW_BILL_AMOUNT IN NUMBER,
    p_SHOW_CHARGE_AMOUNT IN NUMBER,
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT REF_CURSOR
	);

PROCEDURE GET_INVOICE_REPORT_RECORDS
	(
    p_INVOICE_CATEGORY IN VARCHAR,
    p_INVOICE_ID IN NUMBER,
	p_STATUS OUT NUMBER,
    p_SOMETHING_DONE IN OUT BOOLEAN,
	p_CURSOR IN OUT REF_CURSOR
    );

PROCEDURE EXTRACT_SETTL_DETERMINANTS
    (
    p_STATEMENT_ID IN NUMBER
    );

PROCEDURE CALC_BILLS_FOR_OPERATING_DATE(p_OPERATING_DATE IN DATE);

PROCEDURE DL_SETTLEMENT_BY_OP_DATE(p_OPERATING_DATE IN DATE,
									  p_FORCE_DOWNLOADS IN NUMBER,
									  p_LOG_TYPE IN NUMBER,
									  p_TRACE_ON IN NUMBER,
									  p_STATUS OUT NUMBER,
									  p_MESSAGE OUT VARCHAR2);

PROCEDURE QUERY_CREDIT_COVER
(
    p_BEGIN_DATE   IN DATE,
	p_END_DATE     IN DATE,
    p_LOG_TYPE     IN NUMBER,
    p_TRACE_ON     IN NUMBER,
    p_STATUS       OUT NUMBER,
    p_MESSAGE      OUT VARCHAR2
);

PROCEDURE IMPORT_CREDIT_CLOB
(
	p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
);
PROCEDURE IMPORT_CANCELLED_SRA_CLOB
	(
    p_IMPORT_FILE_PATH IN VARCHAR2,
    p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_STATUS  OUT NUMBER,
  	p_MESSAGE OUT VARCHAR2
	) ;

----------------------------------------------------------------------------------------
-- CONSTANTS
----------------------------------------------------------------------------------------

g_ENERGY_MARKET_NAME CONSTANT VARCHAR2(16) := 'EN';
g_VARIABLE_MOC_MARKET_NAME CONSTANT VARCHAR2(16) := 'MO';
g_CAPACITY_MARKET_NAME CONSTANT VARCHAR2(16) := 'CA';
g_FIXED_MOC_MARKET_NAME CONSTANT VARCHAR2(16) := 'FMO';

g_MARKETS CONSTANT STRING_COLLECTION := STRING_COLLECTION(g_ENERGY_MARKET_NAME,g_CAPACITY_MARKET_NAME,g_VARIABLE_MOC_MARKET_NAME,g_FIXED_MOC_MARKET_NAME);

g_INVALID_FILENAME_ERR_NO CONSTANT BINARY_INTEGER := -20304;

x_INVALID_FILENAME EXCEPTION;
PRAGMA EXCEPTION_INIT(x_INVALID_FILENAME, -20304);

g_HOOK_PARM_INVOICE_ID CONSTANT VARCHAR2(32):= 'Invoice-Id';
g_HOOK_PARM_IMPORT_SOURCE CONSTANT VARCHAR2(32) := 'Import-Source';
g_HOOK_PARM_SETTLEMENT_FILE CONSTANT VARCHAR2(32):= 'Settlement-Filename';

g_IMPORT_SOURCE_FILE CONSTANT BINARY_INTEGER := 1;
g_IMPORT_SOURCE_QUERY CONSTANT BINARY_INTEGER := 2;
g_IMPORT_SOURCE_FORCED_QUERY CONSTANT BINARY_INTEGER := 3;

-- Constants for report types
g_STATEMENT_REPORT CONSTANT NUMBER(1) := 1;
g_PARTICIPANT_INFO_REPORT CONSTANT NUMBER(1) := 2;
g_REALLOCATION_REPORT CONSTANT NUMBER(1) := 3;
g_INVOICE_REPORT CONSTANT NUMBER(1) := 4;
g_CREDIT_REPORT CONSTANT NUMBER(1) := 5;
g_GENERAL_PUBLIC_REPORT CONSTANT NUMBER(1) := 6;
c_CANCELLED_SRA_REPORT	CONSTANT NUMBER(1) := 7;
g_UNKNOWN_REPORT CONSTANT NUMBER(1) := -9;

----------------------------------------------------------------------------------------------------
-- PRIVATE methods
----------------------------------------------------------------------------------------------------

$if $$UNIT_TEST_MODE = 1 $then

TYPE CONVERSION_RATE_ARRAY IS VARRAY(2) OF MARKET_PRICE_VALUE.PRICE%TYPE;

PROCEDURE PUT_SEM_STATEMENT_JOB(p_REC IN OUT SEM_STATEMENT_JOB%ROWTYPE);

FUNCTION GET_BILLING_STATEMENT_NOTES
    (
    p_HEAD_REC IN SEM_STATEMENT_H_TEMP%ROWTYPE
    ) RETURN VARCHAR2;

FUNCTION GET_VAT_COMPONENT
(
    p_DATE DATE,
    p_BILLING_ENTITY_ID NUMBER
)
RETURN VARCHAR;

PROCEDURE EXTRACT_CHARGE_DETAILS
    (
    p_STATEMENT_ID IN NUMBER,
    p_ENTITY_ID IN NUMBER,
    p_STATEMENT_TYPE IN NUMBER,
    p_SETTLEMENT_DAY IN DATE,
	p_LOGGER IN OUT MM_LOGGER_ADAPTER
    );

PROCEDURE PARSE_AND_VALIDATE_REP_NAME
	(
    p_REPORT_NAME IN VARCHAR2,
    p_REPORT_TYPE OUT BINARY_INTEGER,
    p_REPORT_STATEMENT_TYPE_ID OUT STATEMENT_TYPE.STATEMENT_TYPE_ID%TYPE,
    p_IS_VALID_REPORT_NAME OUT BOOLEAN,
    p_LOGGER IN OUT NOCOPY MM_LOGGER_ADAPTER
	);
 
FUNCTION GET_EXTERNAL_CHARGE_AMOUNT
    (
    p_CHARGE_ID IN NUMBER,
    p_CHARGE_DATE IN DATE,
    p_RESOURCE_NAME IN VARCHAR2,
    p_CONTRACT IN VARCHAR2 := NULL
    ) RETURN NUMBER;
$end
----------------------------------------------------------------------------------------------------
END MM_SEM_SETTLEMENT;
/
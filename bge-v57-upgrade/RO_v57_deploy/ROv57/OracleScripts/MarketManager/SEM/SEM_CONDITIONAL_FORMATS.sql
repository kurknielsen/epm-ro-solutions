--SET SERVEROUTPUT ON SIZE 500000
DECLARE

    PROCEDURE PUT_CONDITIONAL_FORMAT_ITEM
    (
    p_CONDITIONAL_FORMAT_NAME IN VARCHAR2,
    p_ITEM_NUMBER IN NUMBER,
	p_COLOR_WHEN_FORMULA IN VARCHAR,
	p_FOREGROUND_COLOR IN NUMBER,
	p_BACKGROUND_COLOR IN NUMBER,
	p_IS_BOLD IN NUMBER := 0,
	p_IS_ITALIC IN NUMBER := 0,
	p_IS_STRIKE_THROUGH IN NUMBER := 0,
	p_IS_UNDERLINE IN NUMBER := 0
    ) AS
        
    v_FORMAT_ID NUMBER(9) := 0;
    v_STATUS NUMBER(9) := 0;
        
	BEGIN
		
        -- Check for existing CONDITIONAL_FORMAT    
        BEGIN
            SELECT CF.CONDITIONAL_FORMAT_ID
            INTO v_FORMAT_ID
            FROM CONDITIONAL_FORMAT CF
            WHERE UPPER(CF.CONDITIONAL_FORMAT_NAME) = UPPER(LTRIM(RTRIM(p_CONDITIONAL_FORMAT_NAME)));
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                v_FORMAT_ID := 0;
        END;
        
        -- Insert/Update CONDITIONAL_FORMAT 
        BEGIN        
            IO.PUT_CONDITIONAL_FORMAT(v_FORMAT_ID, p_CONDITIONAL_FORMAT_NAME, '?', '?', v_FORMAT_ID, '?');            
            DBMS_OUTPUT.PUT_LINE('UPDATED FORMAT SUCCESSFULLY: ' || p_CONDITIONAL_FORMAT_NAME || '.  FORMAT_ID=' || v_FORMAT_ID);            
        EXCEPTION
		    WHEN OTHERS THEN
			    DBMS_OUTPUT.PUT_LINE('IO.PUT_CONDITIONAL_FORMAT:DID NOT SUCCESSFULLY CREATE ' || p_CONDITIONAL_FORMAT_NAME || '.  STATUS=' || SQLCODE);        
        END;                   
        
        -- Insert/Update CONDITIONAL_FORMAT_ITEM
        IF v_FORMAT_ID > 0 THEN 
            BEGIN
                EM.PUT_CONDITIONAL_FORMAT_ITEM(v_FORMAT_ID, p_ITEM_NUMBER, p_COLOR_WHEN_FORMULA, p_FOREGROUND_COLOR, p_BACKGROUND_COLOR, p_IS_BOLD, p_IS_ITALIC, p_IS_STRIKE_THROUGH, p_IS_UNDERLINE);
                DBMS_OUTPUT.PUT_LINE('UPDATED FORMAT ITEM SUCCESSFULLY: ' || p_CONDITIONAL_FORMAT_NAME || '.  FORMAT_ID=' || v_FORMAT_ID);
            EXCEPTION
		        WHEN OTHERS THEN
			        DBMS_OUTPUT.PUT_LINE('EM.PUT_CONDITIONAL_FORMAT_ITEM:DID NOT SUCCESSFULLY CREATE FORMAT ITEM: ' || p_CONDITIONAL_FORMAT_NAME || '.  STATUS=' || v_STATUS);        
            END;
        ELSE        
            DBMS_OUTPUT.PUT_LINE('DID NOT CALL EM.PUT_CONDITIONAL_FORMAT_ITEM(). FORMAT ID <= 0.');        
        END IF;
    
    END;

BEGIN -- MAIN

    -- Load Conditonal formats specific for SEM markets. 
    PUT_CONDITIONAL_FORMAT_ITEM('CR_DLY_FCST_DIFF_THRESHOLD', 1, 'CURRENT = 0', 0, -26215, 0,0,0,0);
    PUT_CONDITIONAL_FORMAT_ITEM('CR_DLY_FCST_DIFF_THRESHOLD', 2, 'CURRENT<> 0', 0, -39322, 1,0,0,0);

	--Credit Cover Format
    PUT_CONDITIONAL_FORMAT_ITEM('SEM Credit Totals', 1, 'REQD_CREDIT_COVER > POSTED_CREDIT_COVER', -1, -3407821, 1);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM Credit Totals', 2, '!IsBlank(TRADE_LIMIT) and REQD_CREDIT_COVER / POSTED_CREDIT_COVER >= TRADE_LIMIT', -16777216, -4813128, 1, 1);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM Credit Totals', 3, 'REQD_CREDIT_COVER / POSTED_CREDIT_COVER >= WARNING_LIMIT', -16777216, -39322, 1);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM Credit Totals', 4, 'REQD_CREDIT_COVER / POSTED_CREDIT_COVER >= WARNING_LIMIT - 0.1', -16777216, -13159);

    -- CFD Deal Capture conditional format
    PUT_CONDITIONAL_FORMAT_ITEM('CFD_TERMS_MODIFIED', 1, 'MODIFIED = 1', -16777216, -130);

    -- CFD Difference Payments and Mark to Market formats
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 6, 'ROW_TYPE_NUM=1 and ROW_STYLE="TOTAL"', -16777216, -3342388);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 7, 'ROW_TYPE_NUM=2 and ROW_STYLE="TOTAL"', -16777216, -6569317);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 8, 'ROW_TYPE_NUM=3 and ROW_STYLE="TOTAL"', -16777216, -7886713);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 14, 'ROW_TYPE_NUM=1', -16777216, -1);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 15, 'ROW_TYPE_NUM=2', -16777216, -2039297);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM CFD Difference Payments', 16, 'ROW_TYPE_NUM=3', -16777216, -4210689);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_SIGN', 1, 'CURRENT >= 0', null, -2033955);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_SIGN', 2, '!ISBLANK(CURRENT)', null, -334363);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_BOLD_SIGN', 1, 'CURRENT >= 0', null, -5707616);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_BOLD_SIGN', 2, '!ISBLANK(CURRENT)', null, -1197382);
    
    -- Conditional format for Disputes
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_DISP_STATUS', 1, 'CURRENT="Pending"',null, -4071200);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_DISP_STATUS', 2, 'CURRENT="Accepted"',null, -3610936);
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_CFD_DISP_STATUS', 3, 'CURRENT="Rejected"',null, -405296);

    -- Conditional format for Settlement Download Groups
    PUT_CONDITIONAL_FORMAT_ITEM('SEM_DL_GRP_INV_NA', 1, 'REPORT_TYPE="Invoice"', -6710887, -1, 0, 1, 0, 0);

    COMMIT;
END;
/

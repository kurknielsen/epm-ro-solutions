CREATE OR REPLACE PACKAGE MM_SEM_UTIL IS

    -- AUTHOR  : JHUMPHRIES
    -- CREATED : 3/13/2007 5:14:22 PM
    -- PURPOSE : Utility functions for SEM MarketManager interfaces

--Trait Constants
g_TG_EXT_IDENT NUMBER(9) := 1200;
g_TG_SRA_START_TIME NUMBER(9) := 1201;
g_TG_SEM_TXN_ID NUMBER(9) := 1202;
g_TG_SRA_VALUE NUMBER(9) := 1203;
g_TG_GEN_UNDER_TEST NUMBER(9) := 1204;
  g_TI_UNDER_TEST  NUMBER(9) := 1;
  g_TI_STATUS NUMBER(9) := 2;
  g_TI_TXN_ID NUMBER(9) := 3;
g_TG_STANDING_OFFER NUMBER(9) := 1205;
  g_TI_STANDING_TYPE  NUMBER(9) := 1;
  g_TI_STANDING_EXPIRY_DATE  NUMBER(9) := 2;
g_TG_IC_MAX_CAP NUMBER(9) := 1206;
  g_TI_IC_MAX_IMPORT  NUMBER(9) := 1;
  g_TI_IC_MAX_EXPORT  NUMBER(9) := 2;
g_TG_OFFER_FORECAST NUMBER(9) := 1207;
  g_TI_GEN_FORECAST_MIN  NUMBER(9) := 1;
  g_TI_GEN_FORECAST_MAX  NUMBER(9) := 2;
  g_TI_GEN_FORECAST_MIN_OUTPUT  NUMBER(9) := 3;
  g_TI_GEN_FORECAST_FUEL_USE NUMBER(9) := 4;
  g_TI_GEN_FORECAST_2ND_MAX_MW NUMBER(9) := 5;
g_TG_OFFER_NO_LOAD_COST NUMBER(9) := 1208;
g_TG_OFFER_NOM_PROFILE NUMBER(9) := 1209;
  g_TI_OFFER_1ST_NOM_PROFILE NUMBER(9) := 1;
  g_TI_OFFER_2ND_NOM_PROFILE NUMBER(9) := 2;
g_TG_OFFER_DEC_PRICE NUMBER(9) := 1210;
g_TG_GEN_STARTUP_COSTS NUMBER(9) := 1211;
  g_TI_GEN_HOT_START_COST  NUMBER(9) := 1;
  g_TI_GEN_WARM_START_COST  NUMBER(9) := 2;
  g_TI_GEN_COLD_START_COST  NUMBER(9) := 3;
g_TG_GEN_SPIN_GEN_COST NUMBER(9) := 1212;
g_TG_GEN_SPIN_PUMP_COST NUMBER(9) := 1213;
g_TG_GEN_MIN_GEN_COST NUMBER(9) := 1214;
g_TG_GEN_RESERVOIR_CO NUMBER(9) := 1215;
  g_TI_GEN_RESERVOIR_TARGET_MWH  NUMBER(9) := 1;
  g_TI_GEN_RESERVOIR_TARGET_PCT  NUMBER(9) := 2;
  g_TI_GEN_RESERVOIR_PRIOR_MWH  NUMBER(9) := 3;
  g_TI_GEN_RESERVOIR_OP_CAP_MWH  NUMBER(9) := 4;
g_TG_GEN_CYCLE_EFF NUMBER(9) := 1216;
g_TG_GEN_LIMIT NUMBER(9) := 1217;
  g_TI_GEN_LIMIT_MWH  NUMBER(9) := 1;
  g_TI_GEN_LIMIT_FACTOR  NUMBER(9) := 2;
g_TG_GEN_IS_LIMITED NUMBER(9) := 1218;
g_TG_LOAD_SHUTDOWN_COST NUMBER(9) := 1219;
g_TG_GEN_MAX_GEN NUMBER(9) := 1220;
g_TG_GEN_MIN_ONTIME NUMBER(9) := 1221;
g_TG_GEN_MIN_OFFTIME NUMBER(9) := 1222;
g_TG_GEN_MIN_STABLE_GEN NUMBER(9) := 1223;
g_TG_GEN_BLOCK_LOAD NUMBER(9) := 1224;
  g_TI_BLOCK_LOAD_HOT  NUMBER(9) := 1;
  g_TI_BLOCK_LOAD_WARM  NUMBER(9) := 2;
  g_TI_BLOCK_LOAD_COLD  NUMBER(9) := 3;
g_TG_GEN_DELOADING NUMBER(9) := 1225;
  g_TI_DELOAD_RATE  NUMBER(9) := 1;
  g_TI_DELOAD_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_DWELL_TIME NUMBER(9) := 1226;
  g_TI_DWELL_TIME  NUMBER(9) := 1;
  g_TI_DWELL_TRIGGER_POINT  NUMBER(9) := 2;
g_TG_GEN_END_STARTUP NUMBER(9) := 1227;
g_TG_GEN_LOADING_HOT NUMBER(9) := 1228;
  g_TI_LOADING_HOT_RATE  NUMBER(9) := 1;
  g_TI_LOADING_HOT_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_LOADING_WARM NUMBER(9) := 1229;
  g_TI_LOADING_WARM_RATE  NUMBER(9) := 1;
  g_TI_LOADING_WARM_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_LOADING_COLD NUMBER(9) := 1230;
  g_TI_LOADING_COLD_RATE  NUMBER(9) := 1;
  g_TI_LOADING_COLD_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_MIN_GEN NUMBER(9) := 1231;
g_TG_GEN_RAMP_UP NUMBER(9) := 1232;
  g_TI_RAMP_UP_RATE  NUMBER(9) := 1;
  g_TI_RAMP_UP_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_RAMP_DOWN NUMBER(9) := 1233;
  g_TI_RAMP_DOWN_RATE  NUMBER(9) := 1;
  g_TI_RAMP_DOWN_BREAKPOINT  NUMBER(9) := 2;
g_TG_GEN_SOAK_TIME_HOT NUMBER(9) := 1234;
  g_TI_SOAK_TIME_HOT  NUMBER(9) := 1;
  g_TI_SOAK_TRIGGER_POINT_HOT  NUMBER(9) := 2;
g_TG_GEN_SOAK_TIME_WARM NUMBER(9) := 1235;
  g_TI_SOAK_TIME_WARM  NUMBER(9) := 1;
  g_TI_SOAK_TRIGGER_POINT_WARM  NUMBER(9) := 2;
g_TG_GEN_SOAK_TIME_COLD NUMBER(9) := 1236;
  g_TI_SOAK_TIME_COLD  NUMBER(9) := 1;
  g_TI_SOAK_TRIGGER_POINT_COLD  NUMBER(9) := 2;
g_TG_GEN_RESERVOIR_TO NUMBER(9) := 1237;
  g_TI_GEN_RESERVOIR_MAX_CAP  NUMBER(9) := 1;
  g_TI_GEN_RESERVOIR_MIN_CAP  NUMBER(9) := 2;
  g_TI_GEN_RESERVOIR_PUMP_CAP  NUMBER(9) := 3;
g_TG_GEN_SYNC_TIME NUMBER(9) := 1238;
  g_TI_GEN_SYNC_TIME_HOT  NUMBER(9) := 1;
  g_TI_GEN_SYNC_TIME_WARM  NUMBER(9) := 2;
  g_TI_GEN_SYNC_TIME_COLD  NUMBER(9) := 3;
g_TG_GEN_HR_ELAPSED_SYNC NUMBER(9) := 1239;
  g_TI_GEN_HR_ELAPSED_SYNC_HOT  NUMBER(9) := 1;
  g_TI_GEN_HR_ELAPSED_SYNC_WARM  NUMBER(9) := 2;
  g_TI_GEN_HR_ELAPSED_SYNC_COLD  NUMBER(9) := 3;
g_TG_GEN_ST_MAX_CAP NUMBER(9) := 1240;
g_TG_GEN_ST_MAX_TIME NUMBER(9) := 1241;
g_TG_OFFER_MAX_ONTIME NUMBER(9) := 1242;
g_TG_OFFER_MAX_OFFTIME NUMBER(9) := 1243;
g_TG_GEN_FORBIDDEN NUMBER(9) := 1244;
  g_TI_GEN_FORBIDDEN_START  NUMBER(9) := 1;
  g_TI_GEN_FORBIDDEN_END  NUMBER(9) := 2;
g_TG_GEN_FIXED_LOAD NUMBER(9) := 1245;
g_TG_GEN_SCALAR_LOAD NUMBER(9) := 1246;
g_TG_GEN_STARTUP_TIMES NUMBER(9) := 1247;
  g_TI_GEN_HOT_START_TIME  NUMBER(9) := 1;
  g_TI_GEN_WARM_START_TIME  NUMBER(9) := 2;
  g_TI_GEN_COLD_START_TIME  NUMBER(9) := 3;
g_TG_GEN_NUM_STARTS NUMBER(9) := 1248;
g_TG_GEN_NUM_RUN_HOURS NUMBER(9) := 1249;
g_TG_GEN_MODES_OPERATION NUMBER(9) := 1250;
g_TG_GEN_DROOP NUMBER(9) := 1251;
g_TG_GEN_REG_FIRM_CAPACITY NUMBER(9) := 1252;
g_TG_GEN_NONFIRM_ACCESS_CAP NUMBER(9) := 1253;
g_TG_LOAD_MAX_RAMP_UP NUMBER(9) := 1254;
g_TG_LOAD_MAX_RAMP_DOWN NUMBER(9) := 1255;
g_TG_LOAD_DISP_CAPACITY NUMBER(9) := 1256;
g_TG_LOAD_NONDISP_CAPACITY NUMBER(9) := 1257;
g_TG_SRA_VALIDITY_STATUS NUMBER(9) := 1258;
    g_TI_SRA_VAL_STAT_REJECTED  NUMBER(9) := 1;
    g_TI_SRA_VAL_STAT_CANCELLED NUMBER(9) := 2;
g_TG_SEM_GATE_REFERENCE NUMBER(9) := 1259;
g_TG_SEM_TRADED_EXPOSURE NUMBER(9) := 1260;
  g_TI_SEM_TRADED_EXP_ETEV  NUMBER(9) := 1;
  g_TI_SEM_TRADED_EXP_CTEV  NUMBER(9) := 2;
  g_TI_SEM_TRADED_EXP_LLQ  NUMBER(9) := 3;
  g_TI_SEM_TRADED_EXP_HLQ  NUMBER(9) := 4;
  g_TI_SEM_TRADED_EXP_MIUN  NUMBER(9) := 5;
  g_TI_SEM_TRADED_EXP_MSQ  NUMBER(9) := 6;
g_SEM_GATE_REF_TXN_ID NUMBER(9) := 99;
g_SHADOW_PRICE_EUR_TXN_ID NUMBER(9) := 98;
g_SHADOW_PRICE_GBP_TXN_ID NUMBER(9) := 97;
g_SMP_EUR_TXN_ID NUMBER(9) := 96;
g_SMP_GBP_TXN_ID NUMBER(9) := 95;
g_AVG_SMP_EUR_TXN_ID       NUMBER(9) := 94;
g_AVG_SMP_GBP_TXN_ID       NUMBER(9) := 93;

--Entity Attributes
g_EA_RESOURCE_TYPE CONSTANT VARCHAR2(32) := 'Resource Type';
g_EA_UNIT_TYPE CONSTANT VARCHAR2(32) := 'Unit Type';
g_EA_IS_PUMPED_STORAGE CONSTANT VARCHAR2(32) := 'Is Pumped Storage?';
g_EA_IS_ENERGY_LIMITED CONSTANT VARCHAR2(32) := 'Is Energy Limited?';
g_EA_IS_NETTING_GEN CONSTANT VARCHAR2(32) := 'Is Netting Generator?';
g_EA_IS_BLOCK_LOAD_GEN CONSTANT VARCHAR2(32) := 'Is Block Load Gen?';
g_EA_PSE_CURRENCY CONSTANT VARCHAR2(32) := 'Currency';
g_EA_PSE_JURISDICTION CONSTANT VARCHAR2(32) := 'Jurisdiction';
g_EA_PSE_VAT_JURISDICTION CONSTANT VARCHAR2(32) := 'VAT Jurisdiction';
g_EA_NI_TAX_RATE CONSTANT VARCHAR2(32) := 'NI Tax Rate';
g_EA_NI_GEN_TAX_RATE CONSTANT VARCHAR2(32) := 'NI-Gen Tax Rate';
g_EA_NI_MO_TAX_RATE CONSTANT VARCHAR2(32) := 'NI-MO Tax Rate';
g_EA_ROI_TAX_RATE CONSTANT VARCHAR2(32) := 'ROI Tax Rate';
g_EA_ROI_GEN_TAX_RATE CONSTANT VARCHAR2(32) := 'ROI-Gen Tax Rate';
g_EA_ROI_MO_TAX_RATE CONSTANT VARCHAR2(32) := 'ROI-MO Tax Rate';
g_EA_NI_CB_TAX_RATE CONSTANT VARCHAR2(32) := 'NI XBV Rate';
g_EA_NI_GEN_CB_TAX_RATE CONSTANT VARCHAR2(32) := 'NI-Gen XBV Rate';
g_EA_ROI_CB_TAX_RATE CONSTANT VARCHAR2(32) := 'ROI XBV Rate';
g_EA_ROI_GEN_CB_TAX_RATE CONSTANT VARCHAR2(32) := 'ROI-Gen XBV Rate';
g_EA_ROI_RMVIP CONSTANT VARCHAR2(32) := 'RMVIP-ROI';
g_EA_NI_RMVIP CONSTANT VARCHAR2(32) := 'RMVIP-NI';

--Date/time constants for SEM
g_TZ CONSTANT VARCHAR2(4) := 'EDT'; -- for now use EDT to represent local prevailing time
g_DATE_FORMAT CONSTANT VARCHAR2(12) := 'YYYY-MM-DD';
g_TIMESTAMP_FORMAT CONSTANT VARCHAR2(24) := 'YYYY-MM-DD HH24:MI:SS';
g_TRADE_DAY_HOUR_SHIFT CONSTANT BINARY_INTEGER := 6;
g_WEEK_BEGIN CONSTANT VARCHAR2(8) := 'Sunday';

g_NO_DATA_FOUND CONSTANT NUMBER(9) := 100; -- the p_STATUS value when NO_DATA_FOUND exception occurs

g_MEX_MARKET CONSTANT VARCHAR2(32) := 'sem';
g_MEX_ACTION_REPORTS CONSTANT VARCHAR2(32) := 'mpi.reports';
g_MEX_ACTION_OFFERS CONSTANT VARCHAR2(32) := 'mpi.bidsoffers';
g_MEX_ACTION_REGISTRATION CONSTANT VARCHAR2(32) := 'mpr.registration';
g_MEX_ACTION_SETTLEMENT_STMT CONSTANT VARCHAR2(32) := 'settlement.statement';
g_MEX_ACTION_SETTLEMENT_RPT CONSTANT VARCHAR2(32) := 'settlement.report';
g_MEX_ACTION_SETTLEMENT_INVC CONSTANT VARCHAR2(32) := 'settlement.invoice';
g_MEX_ACTION_SETTLEMENT_DIRL CONSTANT VARCHAR2(32) := 'settlement.dir';
g_MEX_ACTION_SETTLEMENT_FILE CONSTANT VARCHAR2(32) := 'settlement.file';

-- External System Identifier Types for Statement Types
g_STATEMENT_TYPE_MKT_SCHED  VARCHAR2(32) := 'Market Schedules';
g_STATEMENT_TYPE_USER_NOMS  VARCHAR2(32) := 'User Nominations';
g_STATEMENT_TYPE_CAP_HOLD   VARCHAR2(32) := 'Capacity Holdings';
g_STATEMENT_TYPE_SETTLEMENT VARCHAR2(32) := 'Settlement Statements';
g_STATEMENT_TYPE_RUN_TYPE VARCHAR2(32) := 'Run Type';
g_STATEMENT_TYPE_SEM_G_REF VARCHAR2(32) := 'SEM Gate Reference';
g_STATEMENT_TYPE_GATE_WINDOW VARCHAR2(32) := 'Gate Window';

-- Constants for Statement Type External Identifiers
g_EXTID_MKT_SCHED_EA VARCHAR2(32) := 'Ex-Ante';
g_EXTID_MKT_SCHED_EA_ABR VARCHAR2(32) := 'EA';
g_EXTID_MKT_SCHED_EA2_ABR VARCHAR2(32) := 'EA2';
g_EXTID_MKT_SCHED_WD1_ABR VARCHAR2(32) := 'WD1';
g_EXTID_MKT_SCHED_IND_ABR VARCHAR2(32) := 'EP1';
g_EXTID_MKT_SCHED_INI_ABR VARCHAR2(32) := 'EP2';
g_EXTID_MKT_SCHED_INDIC_A VARCHAR2(32) := 'Indicative Actual';
g_EXTID_MKT_SCHED_INDIC_EP VARCHAR2(32) := 'Indicative Ex-Post';
g_EXTID_MKT_SCHED_INIT_EP VARCHAR2(32) := 'Initial Ex-Post';
g_EXTID_MKT_SCHED_WN_DAY_ACT VARCHAR2(32) := 'Within-day Actual';
g_EXTID_MKT_SCHED_REV_1 VARCHAR2(32) := 'Revision #1';
g_EXTID_MKT_SCHED_REV_2 VARCHAR2(32) := 'Revision #2';

---new statement types used only by the 'User Nominations' reports
g_EXTID_USER_NOMS_EA VARCHAR2(32) := 'Ex-Ante Nom.';
g_EXTID_USER_NOMS_EA2 VARCHAR2(32) := 'Ex-Ante Nom. EA2';
g_EXTID_USER_NOMS_WD1 VARCHAR2(32) := 'Ex-Ante Nom. WD1';
g_EXTID_USER_NOMS_MOD VARCHAR2(32) := 'Modified Nom.';
g_EXTID_USER_NOMS_REV_MOD VARCHAR2(32) := 'Revised Nom.';
g_EXTID_USER_NOMS_INDIC_EP VARCHAR2(32) := 'Indicative Nom.';
g_EXTID_USER_NOMS_INIT_EP VARCHAR2(32) := 'Initial Nom.';
g_EXTID_USER_NOMS_MOD_EA2 VARCHAR2(32) := 'Modified Nom. EA2';
g_EXTID_USER_NOMS_MOD_WD1 VARCHAR2(32) := 'Modified Nom. WD1';
g_EXTID_USER_NOMS_REV_MOD_EA2 VARCHAR2(32) := 'Revised Nom. EA2';
g_EXTID_USER_NOMS_REV_MOD_WD1 VARCHAR2(32) := 'Revised Nom. WD1';

g_EXTID_CAP_HOLD_ANN_HOLDINGS VARCHAR2(32) := 'Annual Holdings';
g_EXTID_CAP_HOLD_MON_HOLDINGS VARCHAR2(32) := 'Monthly Holdings';
g_EXTID_CAP_HOLD_DAY_HOLDINGS VARCHAR2(32) := 'Daily Holdings';
g_EXTID_CAP_HOLD_ACT_HOLDINGS VARCHAR2(32) := 'Active Holdings';

g_EXTID_SETTLEMENT_P VARCHAR2(20) := 'P';
g_EXTID_SETTLEMENT_F VARCHAR2(20) := 'F';
g_EXTID_SETTLEMENT_F1 VARCHAR2(20) := 'F(1)';
g_EXTID_SETTLEMENT_F2 VARCHAR2(20) := 'F(2)';

-- Into what state do we import data?
g_STATEMENT_STATE CONSTANT NUMBER(1) := 2;     -- external state by default for settlement
g_OFFER_SCHEDULE_STATE CONSTANT NUMBER(1) := 2;  -- external state by default for offers

-- Participant Unit Type Constants
g_PSE_TYPE_SUPPLIER_UNITS CONSTANT VARCHAR2(1) := 'S';
g_PSE_TYPE_GENERATOR_UNITS CONSTANT VARCHAR2(1) := 'G';
--BZ 17094 - treat the DU resource type as generator and the SU resource type as suply
g_REGEXP_GEN_UNIT_TYPE CONSTANT VARCHAR2(16) := '(G|^I$|^D)';
g_REGEXP_SUP_UNIT_TYPE CONSTANT VARCHAR2(8) := '^S';

-- Statement Type Categories
c_STATEMENT_CATEGORY_INTERNAL  CONSTANT PLS_INTEGER := 0;
c_STATEMENT_CATEGORY_SMO    CONSTANT PLS_INTEGER := 1;
c_STATEMENT_CATEGORY_TDIE     CONSTANT PLS_INTEGER := 2;

-- Component names for the SEM VAT charge
c_VAT_MONTHLY_CHARGE_NAME CONSTANT VARCHAR2(16) := 'VAT Monthly';
c_VAT_WEEKLY_CHARGE_NAME CONSTANT VARCHAR2(16) := 'VAT Weekly';
c_VAT_BLENDED_CHARGE_NAME CONSTANT VARCHAR2(16) := 'VAT(BLENDED)';

c_INVOICE_INTERVAL_MONTH CONSTANT VARCHAR2(16) := 'Month';
c_INVOICE_INTERVAL_WEEK CONSTANT VARCHAR2(16) := 'Week';

-- SEM_GP_SETTLEMENT types for Cross Border proportions
c_TYPE_CB_CAPACITY_IMPORT_PROP CONSTANT VARCHAR2(5) := 'CBCIP';
c_TYPE_CB_CAPACITY_EXPORT_PROP CONSTANT VARCHAR2(5) := 'CBCEP';
c_TYPE_CB_CA_SUP_LOC_EXP_PROP CONSTANT VARCHAR2(8) := 'CBCSP';
c_TYPE_CB_CA_SUP_EU_EXP_PROP CONSTANT VARCHAR2(8) := 'CBCSPEU';
c_TYPE_CB_CA_SUP_NEU_EXP_PROP CONSTANT VARCHAR2(8) := 'CBCSPNEU';
c_TYPE_CB_ENERGY_IMPORT_PROP CONSTANT VARCHAR2(5) := 'CBEIP';
c_TYPE_CB_ENERGY_EXPORT_PROP CONSTANT VARCHAR2(5) := 'CBEEP';
c_TYPE_CB_EN_SUP_LOC_EXP_PROP CONSTANT VARCHAR2(8) := 'CBESP';
c_TYPE_CB_EN_SUP_EU_EXP_PROP CONSTANT VARCHAR2(8) := 'CBESPEU';
c_TYPE_CB_EN_SUP_NEU_EXP_PROP CONSTANT VARCHAR2(8) := 'CBESPNEU';

-- SEM Market Jurisdiction
c_SEM_JURIDICTION_ROI CONSTANT VARCHAR2(4) := 'ROI';
c_SEM_JURIDICTION_NI CONSTANT VARCHAR2(4) := 'NI';

-- SEM TXN TYPE Constants
c_TXN_TYPE_DISPATCH_INSTR VARCHAR2(16) := 'Dispatch Instr.';
c_TXN_TYPE_ELIGIBLE_AVAIL VARCHAR2(16) := 'Eligible Avail.';
c_TXN_TYPE_GENERATION     VARCHAR2(16) := 'Generation';
c_TXN_TYPE_NOMINATION     VARCHAR2(16) := 'Nomination';
c_TXN_TYPE_MKT_RESULTS    VARCHAR2(16) := 'Market Results';

-- SEM Commodity Constants
c_COMMODITY_ENERGY VARCHAR2(16) := 'Energy';
c_COMMODITY_POWER VARCHAR2(16) := 'Power';
c_COMMODITY_CAPACITY VARCHAR2(16) := 'Capacity';

-- SEM TXN NAME Constants
c_TXN_NAME_GATE_REFERENCE    VARCHAR2(32) := 'Gate Reference';
c_TXN_NAME_SHADOW_PRICE_EUR  VARCHAR2(32) := 'SEM Shadow Price EUR';
c_TXN_NAME_SHADOW_PRICE_GBP  VARCHAR2(32) := 'SEM Shadow Price GBP';
c_TXN_NAME_SMP_EUR           VARCHAR2(32) := 'SEM SMP - EUR';
c_TXN_NAME_SMP_GBP           VARCHAR2(32) := 'SEM SMP - GBP';
c_TXN_NAME_AVG_SMP_EUR       VARCHAR2(32) := 'SEM Average SMP EUR';
c_TXN_NAME_AVG_SMP_GBP       VARCHAR2(32) := 'SEM Average SMP GBP';

-- Are we simply testing the queries?
g_TEST BOOLEAN := FALSE;

g_ALL CONSTANT NUMBER := -1;

g_INTERCONNECT_I_NIMOYLE CONSTANT VARCHAR2(12) := 'I_NIMOYLE';
g_INTERCONNECT_I_ROIEWIC CONSTANT VARCHAR2(12) := 'I_ROIEWIC';

TYPE REF_CURSOR IS REF CURSOR;

FUNCTION WHAT_VERSION RETURN VARCHAR;

FUNCTION GET_SERVICE_POINT_ID
    (
    p_RESOURCE_NAME       IN VARCHAR2,
    p_CREATE_IF_NOT_FOUND IN BOOLEAN := TRUE
    ) RETURN NUMBER;

FUNCTION GET_ESP_ID
  (
    p_RESOURCE_NAME       IN VARCHAR2,
    p_CREATE_IF_NOT_FOUND IN BOOLEAN := TRUE
  ) RETURN NUMBER;

FUNCTION GET_TRANSACTION_ID
    (
    p_TRANSACTION_TYPE    IN VARCHAR2,
    p_RESOURCE_NAME       IN VARCHAR2 := NULL,
    p_CREATE_IF_NOT_FOUND IN BOOLEAN  := TRUE,
	p_AGREEMENT_TYPE	  IN VARCHAR2 := NULL,
    p_TRANSACTION_NAME    IN VARCHAR2 := NULL,
    p_EXTERNAL_IDENTIFIER IN VARCHAR2 := NULL,
    p_ACCOUNT_NAME        IN VARCHAR2 := '%',
    p_COMMODITY           IN VARCHAR2 := 'Energy',
    p_IS_BID_OFFER        IN NUMBER   := 1
    ) RETURN NUMBER;

FUNCTION GET_TRANSACTION_ID
    (
    p_TRANSACTION_TYPE    IN VARCHAR2,
    p_RESOURCE_NAME       IN VARCHAR2,
  p_COMMODITY_NAME      IN VARCHAR2,
  	p_AGREEMENT_TYPE	IN VARCHAR2 DEFAULT NULL
    ) RETURN NUMBER;

FUNCTION GET_SCHEDULE_DATE
  (
  p_OPERATING_DATE IN DATE,
  p_OPERATING_HOUR IN NUMBER,
  p_OPERATING_INTERVAL IN NUMBER,
  p_IS_TRADING_DAY IN NUMBER := 0,
    p_IS_CO_CSV_FILE IN NUMBER DEFAULT 0
  ) RETURN DATE;

FUNCTION GET_TRADING_DAY
  (
  p_CUT_DATE IN DATE
  ) RETURN DATE;

PROCEDURE GET_DATE_FIELDS
  (
  p_CUT_DATE IN DATE,
  p_DAY OUT VARCHAR2,
  p_HOUR OUT VARCHAR2,
  p_INTERVAL OUT VARCHAR2,
  p_IS_TRADING_DAY IN NUMBER := 0
  );

FUNCTION GET_DAY_FROM_DATE
  (
  p_CUT_DATE IN DATE,
  p_IS_TRADING_DAY IN NUMBER := 0
  ) RETURN VARCHAR2;

FUNCTION GET_HOUR_FROM_DATE
  (
  p_CUT_DATE IN DATE
  ) RETURN NUMBER;

FUNCTION GET_INTERVAL_FROM_DATE
  (
  p_CUT_DATE IN DATE
  ) RETURN NUMBER;

FUNCTION SEM_SC_ID RETURN NUMBER;

FUNCTION SEM_CONTRACT_IDs(p_ACCOUNT_NAME IN VARCHAR2) RETURN NUMBER_COLLECTION;
FUNCTION SEM_CONTRACT_ID(p_ACCOUNT_NAME IN VARCHAR2) RETURN NUMBER;

FUNCTION GET_PSE_ID
(
    p_PARTICIPANT_ID      IN VARCHAR2,
    p_CREATE_IF_NOT_FOUND IN BOOLEAN := TRUE,
    p_PARTICIPANT_NAME    IN VARCHAR2 := NULL
) RETURN NUMBER;

FUNCTION GET_MARKET_PRICE_ID
(
    p_MARKET_PRICE_NAME   IN VARCHAR2,
    p_MARKET_PRICE_TYPE   IN VARCHAR2,
    p_MARKET_PRICE_INTERVAL IN VARCHAR2,
    p_CREATE_IF_NOT_FOUND IN BOOLEAN
) RETURN NUMBER;

PROCEDURE RAISE_ERR
    (
    p_SQLCODE IN PLS_INTEGER := NULL,
    p_SQLERRM IN VARCHAR2 := NULL
    );

FUNCTION ERROR_STACKTRACE RETURN VARCHAR2;

FUNCTION GET_EXTERNAL_ACCOUNT_NAME
  (
  p_TRANSACTION_ID IN NUMBER
  ) RETURN VARCHAR2;

FUNCTION GET_RESOURCE_NAME
(
   p_TRANSACTION_ID IN INTERCHANGE_TRANSACTION.TRANSACTION_ID%TYPE
)RETURN VARCHAR2;

FUNCTION GET_RESOURCE_TYPE
  (
  p_TRANSACTION_ID IN NUMBER,
  p_DATE IN DATE
  ) RETURN VARCHAR2;

FUNCTION IS_UNDER_TEST
  (
  p_TRANSACTION_ID IN NUMBER,
  p_DATE IN DATE
  ) RETURN BOOLEAN;

FUNCTION IS_STANDING_BID
  (
  p_TRANSACTION_ID IN NUMBER,
  p_DATE IN DATE
  ) RETURN BOOLEAN;

FUNCTION IS_PUMPED_STORAGE
  (
  p_TRANSACTION_ID IN NUMBER
  ) RETURN BOOLEAN;

FUNCTION IS_ENERGY_LIMITED
  (
  p_TRANSACTION_ID IN NUMBER
  ) RETURN BOOLEAN;

FUNCTION IS_NETTING_GENERATOR
  (
  p_TRANSACTION_ID IN NUMBER
  ) RETURN BOOLEAN;

FUNCTION IS_BLOCK_LOAD_GEN
  (
  p_TRANSACTION_ID IN NUMBER
  ) RETURN BOOLEAN;

FUNCTION GET_PURCHASER_NAME
  (
     p_TRANSACTION_ID IN INTERCHANGE_TRANSACTION.TRANSACTION_ID%TYPE
  ) RETURN VARCHAR2;

PROCEDURE RAISE_ALERTS
  (
  p_TYPE IN VARCHAR2,
  p_NAME IN VARCHAR2,
  p_LOGGER IN OUT NOCOPY MM_LOGGER_ADAPTER,
  p_MSG IN VARCHAR2,
  p_FATAL IN BOOLEAN := FALSE
  );

PROCEDURE OFFER_DATE_RANGE
  (
  p_BEGIN_DATE IN DATE,
  p_END_DATE IN DATE,
  p_OUT_BEGIN_DATE OUT DATE,
  p_OUT_END_DATE OUT DATE
  );
PROCEDURE OFFER_DATE_RANGE
  (
  p_TRADING_DAY IN DATE,
  p_BEGIN_DATE OUT DATE,
  p_END_DATE OUT DATE
  );

FUNCTION GET_DEMAND_CTRL_DATA_TXN(p_LOGGER IN OUT NOCOPY MM_LOGGER_ADAPTER) RETURN INTERCHANGE_TRANSACTION.TRANSACTION_ID%TYPE;

FUNCTION GET_PSE_UNIT_TYPE
  (
  p_PSE_ID IN NUMBER,
  p_IS_PARTICIPANT_PSE IN NUMBER,
  p_DATE IN DATE
  ) RETURN VARCHAR2;

FUNCTION GEN_IMPORT_MPI_REPORT_PROC RETURN CLOB;

-- Return 1 if the specified statement type is a valid shadow settlement statement type.
-- If it is a non-SEM statement type (including TDIE statement types) or if it is a
-- PIR statement type (for shadowing just SEM calcs, not SEM volumes) then it returns 0.
FUNCTION IS_SEM_SHADOW_STATEMENT_TYPE(p_STATEMENT_TYPE_ID IN NUMBER) RETURN NUMBER;

PROCEDURE GET_STATEMENT_TYPE_INFO
    (
    p_STATEMENT_TYPE_ID IN NUMBER,
    p_RUN_IDENTIFIER OUT VARCHAR2,
    p_CATEGORY OUT PLS_INTEGER
    );

FUNCTION GET_STATEMENT_TYPE_FROM_INFO
    (
    p_RUN_IDENTIFIER IN VARCHAR2,
    p_CATEGORY IN PLS_INTEGER
    ) RETURN NUMBER;

FUNCTION USING_CROSS_BORDER_VAT_FORMAT(p_DATE IN DATE, p_BILLING_ENTITY_ID IN NUMBER) RETURN BOOLEAN;
FUNCTION GET_USING_CROSS_BORDER_VAT_FMT(p_DATE IN DATE, p_BILLING_ENTITY_ID IN NUMBER) RETURN NUMBER;

FUNCTION USING_CROSS_BORDER_VAT_FORMAT(p_DATE IN DATE, p_INTERVAL IN VARCHAR2, p_WEEK_BEGIN IN VARCHAR2) RETURN BOOLEAN;

PROCEDURE GET_GATE_INTERCONNECT
	(
	p_CONTRACT			IN	VARCHAR2,
	p_GATE_WINDOW	   OUT	VARCHAR2,
	p_INTERCONNECTOR   OUT	VARCHAR2
	);

FUNCTION AFTER_SEM_2_2_CUT_OVER(p_DATE IN DATE) RETURN NUMBER;

END MM_SEM_UTIL;
/

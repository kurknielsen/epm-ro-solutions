CREATE OR REPLACE PACKAGE BODY MM_PJM AS

g_ALL NUMBER(2) := 1;

----------------------------------------------------------------------------------------------------
FUNCTION WHAT_VERSION RETURN VARCHAR IS
BEGIN
    RETURN '10012003.1';
END WHAT_VERSION;
-------------------------------------------------------------------------------------
PROCEDURE ESCHED_CONTRACT_RPT
	(
	p_MODEL_ID IN NUMBER,
	p_SCHEDULE_TYPE IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_AS_OF_DATE IN DATE,
    p_TIME_ZONE IN VARCHAR2,
    p_NOTUSED_ID1 IN NUMBER,
    p_NOTUSED_ID2 IN NUMBER,
    p_NOTUSED_ID3 IN NUMBER,
	p_REPORT_NAME IN VARCHAR2,
	p_COUNTER_PARTY_ID IN NUMBER,
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT REF_CURSOR
	) AS

p_SC_ID NUMBER;

BEGIN
	p_STATUS := GA.SUCCESS;

  SELECT SC.SC_ID INTO p_SC_ID FROM SC WHERE SC.SC_NAME = 'PJM';

	OPEN p_CURSOR FOR
		--FIRST GET EXTERNAL WHERE NO INTERNAL EXISTS.
	 	SELECT 0 "OVERRIDE_INTERNAL",
			1 "HAS_DIFFERENCES",
			SUBSTR(A.TRANSACTION_NAME, 2) "TRANSACTION_NAME",
			0 "TRANSACTION_ID_INT",
			A.TRANSACTION_ID "TRANSACTION_ID_EXT",
			A.TRANSACTION_IDENTIFIER,
			0 "INTERNAL_EXISTS"
	 	FROM INTERCHANGE_TRANSACTION_EXT A, IT_COMMODITY B
		WHERE NOT EXISTS(SELECT 1 FROM INTERCHANGE_TRANSACTION WHERE TRANSACTION_NAME = A.TRANSACTION_NAME)
--			AND A.TRANSACTION_TYPE IN('Purchase','Sale', 'Load', 'Generation')
			AND A.IS_IMPORT_EXPORT = 0
			AND A.SC_ID = p_SC_ID
			AND (p_COUNTER_PARTY_ID = g_ALL OR A.PURCHASER_ID = p_COUNTER_PARTY_ID OR A.SELLER_ID = p_COUNTER_PARTY_ID)
			AND B.COMMODITY_TYPE = 'Energy'
			AND A.COMMODITY_ID = B.COMMODITY_ID
		--GET TXNS WHERE INTERNAL AND EXTERNAL EXIST.
		UNION ALL
	 	SELECT 0 "OVERRIDE_INTERNAL",
			CASE WHEN A.PURCHASER_ID = C.PURCHASER_ID
					AND A.SELLER_ID = C.SELLER_ID
					AND A.AGREEMENT_TYPE = C.AGREEMENT_TYPE
					AND A.APPROVAL_TYPE = C.APPROVAL_TYPE
					AND A.BEGIN_DATE = C.BEGIN_DATE
					AND A.END_DATE = C.END_DATE
					AND A.POD_ID = C.POD_ID
				THEN 0	ELSE 1 END	"HAS_DIFFERENCES",
			A.TRANSACTION_NAME,
			A.TRANSACTION_ID "TRANSACTION_ID_INT",
			C.TRANSACTION_ID "TRANSACTION_ID_EXT",
			A.TRANSACTION_IDENTIFIER,
			1 "INTERNAL_EXISTS"
	 	FROM INTERCHANGE_TRANSACTION A, INTERCHANGE_TRANSACTION_EXT C, IT_COMMODITY D
		WHERE A.IS_IMPORT_EXPORT = 0
--			AND A.TRANSACTION_TYPE IN('Purchase','Sale', 'Load', 'Generation')
			AND A.SC_ID = p_SC_ID
--			AND B.TRANSACTION_STATUS_NAME = 'Active'
--			AND A.TRANSACTION_ID = B.TRANSACTION_ID
			AND (p_COUNTER_PARTY_ID = g_ALL OR A.PURCHASER_ID = p_COUNTER_PARTY_ID OR A.SELLER_ID = p_COUNTER_PARTY_ID)
			AND C.TRANSACTION_NAME = A.TRANSACTION_NAME
			AND D.COMMODITY_TYPE = 'Energy'
			AND A.COMMODITY_ID = D.COMMODITY_ID
		ORDER BY 3 DESC,4 ASC;

EXCEPTION
		WHEN OTHERS THEN
			  RAISE;

END ESCHED_CONTRACT_RPT;
-------------------------------------------------------------------------------------
PROCEDURE PUT_ESCHED_CONTRACT_RPT
	(
	p_TRANSACTION_ID_INT IN NUMBER,
	p_TRANSACTION_ID_EXT IN NUMBER,
	p_OVERRIDE_INTERNAL IN NUMBER,
	p_STATUS OUT NUMBER
	) AS
v_TRANSACTION_ID NUMBER(9);
v_TXN INTERCHANGE_TRANSACTION%ROWTYPE;
BEGIN

	IF p_OVERRIDE_INTERNAL = 1 THEN
		SELECT * INTO v_TXN
		FROM INTERCHANGE_TRANSACTION_EXT
		WHERE TRANSACTION_ID = p_TRANSACTION_ID_EXT;

		IF p_TRANSACTION_ID_INT > 0 THEN
			v_TXN.TRANSACTION_ID := p_TRANSACTION_ID_INT;
		ELSE
			v_TXN.TRANSACTION_ID := 0;
		END IF;
		MM_UTIL.PUT_TRANSACTION(v_TRANSACTION_ID, v_TXN, GA.INTERNAL_STATE, MM_UTIL.g_BILAT_REQUIRES_APPROVAL);
	END IF;

END PUT_ESCHED_CONTRACT_RPT;
----------------------------------------------------------------------------------------------------
PROCEDURE SYSTEM_ACTION_USES_HOURS
	(
	p_MKT_APP IN VARCHAR2,
    p_ACTION IN VARCHAR2,
	p_SHOW_HOURS OUT NUMBER
    ) AS
BEGIN

	CASE UPPER(p_MKT_APP)
	WHEN 'EFTR' THEN
		MM_PJM_EFTR.SYSTEM_ACTION_USES_HOURS( p_ACTION, p_SHOW_HOURS);
	WHEN 'EMKT' THEN
		MM_PJM_EMKT.SYSTEM_ACTION_USES_HOURS( p_ACTION, p_SHOW_HOURS);
  WHEN 'ESCHEDULE' THEN
		MM_PJM_ESCHED.SYSTEM_ACTION_USES_HOURS( p_ACTION, p_SHOW_HOURS);
	ELSE
		p_SHOW_HOURS := 0; -- default
	END CASE;

END SYSTEM_ACTION_USES_HOURS;
----------------------------------------------------------------------------------------------------
FUNCTION IS_SUPPORTED_EXCHANGE_TYPE
	(
	p_MKT_APP IN VARCHAR2,
	p_EXCHANGE_TYPE IN VARCHAR2
	) RETURN BOOLEAN IS
BEGIN
	-- @TODO: dispatch based on p_MKT_APP
	RETURN TRUE;
END IS_SUPPORTED_EXCHANGE_TYPE;
----------------------------------------------------------------------------------------------------
FUNCTION GET_BID_OFFER_INTERVAL
	(
	p_TRANSACTION IN INTERCHANGE_TRANSACTION%ROWTYPE
	) RETURN VARCHAR2 IS
v_COMMODITY_TYPE VARCHAR2(16);
v_IS_VIRTUAL NUMBER(1);
BEGIN

	SELECT SUBSTR(MAX(COMMODITY_TYPE),1,16), NVL(MAX(IS_VIRTUAL),0)
	INTO v_COMMODITY_TYPE, v_IS_VIRTUAL
	FROM IT_COMMODITY
	WHERE COMMODITY_ID = p_TRANSACTION.COMMODITY_ID;

	IF UPPER(v_COMMODITY_TYPE) = 'TRANSMISSION' THEN
		RETURN 'Month'; -- FTRs have monthly bids/offers
    ELSIF UPPER(p_TRANSACTION.TRANSACTION_TYPE) = 'GENERATION' AND v_IS_VIRTUAL = 0 THEN
        RETURN MM_PJM_GEN_REPORTS.GET_BID_OFFER_INTERVAL(p_TRANSACTION);
	ELSE
		RETURN 'Hour'; -- everything else is hourly
	END IF;
END GET_BID_OFFER_INTERVAL;
----------------------------------------------------------------------------------------------------
PROCEDURE GET_DEFAULT_SYSTEM_ACTION
	(
	p_CONTEXT_ID IN NUMBER,
	p_CONTEXT_TYPE IN VARCHAR,
	p_ACTION_TYPE IN VARCHAR,
	p_MODULE_NAME IN VARCHAR,
	p_ACTION_ID OUT NUMBER,
	p_STATUS OUT NUMBER
	) AS
	v_TRANSACTION INTERCHANGE_TRANSACTION%ROWTYPE;
	v_ACTION_NAME SYSTEM_ACTION.ACTION_NAME%TYPE;
	v_COMMODITY_TYPE IT_COMMODITY.COMMODITY_TYPE%TYPE;
BEGIN

	IF p_CONTEXT_TYPE = 'TRANSACTION' AND p_CONTEXT_ID > 0 THEN
		SELECT * INTO v_TRANSACTION FROM INTERCHANGE_TRANSACTION WHERE TRANSACTION_ID = p_CONTEXT_ID;
		SELECT COMMODITY_TYPE INTO v_COMMODITY_TYPE FROM IT_COMMODITY WHERE COMMODITY_ID = v_TRANSACTION.COMMODITY_ID;

		IF v_TRANSACTION.COMMODITY_ID = MM_PJM_UTIL.GET_COMMODITY_ID(MM_PJM_UTIL.g_COMM_VIRTUAL) THEN
			--Inc Offer
			IF v_TRANSACTION.TRANSACTION_TYPE = 'Generation' THEN
				v_ACTION_NAME := 'Sched:PJM:eMKT:Inc Offer';
			--Dec Bid
			ELSE
				v_ACTION_NAME := 'Sched:PJM:eMKT:Dec Bid';
			END IF;
		ELSIF v_TRANSACTION.TRANSACTION_TYPE = 'Load' THEN
			--FixedDemandBid
			IF v_TRANSACTION.IS_FIRM = 1 THEN
				v_ACTION_NAME := 'Sched:PJM:eMKT:FixedDemandBid';
			--PriceSensDemandBid
			ELSE
				v_ACTION_NAME := 'Sched:PJM:eMKT:PriceSensDemandBid';
			END IF;
		ELSIF v_TRANSACTION.TRANSACTION_TYPE IN ('Purchase','Sale') AND v_COMMODITY_TYPE = 'Energy' THEN
			v_ACTION_NAME := 'Sched:PJM:eSchedule:Schedule';
		END IF;

		IF v_ACTION_NAME IS NOT NULL THEN
			p_ACTION_ID := ID.ID_FOR_SYSTEM_ACTION(v_ACTION_NAME);
		ELSE
			p_ACTION_ID := 140;
		END IF;
	END IF;

END GET_DEFAULT_SYSTEM_ACTION;
---------------------------------------------------------------------------------------------------
END MM_PJM;
/

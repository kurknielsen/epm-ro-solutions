CREATE OR REPLACE PACKAGE MM_MISO AS
-- $Revision: 1.123 $
    -- MISO-specific Market Manager procedures
    TYPE REF_CURSOR IS REF CURSOR;

	-- This will map ISO Account names to tables of Entity IDs
	TYPE ISO_TO_IDs_MAP IS TABLE OF ID_TABLE INDEX BY VARCHAR2(64);

FUNCTION WHAT_VERSION RETURN VARCHAR2;

PROCEDURE PUT_FIN_SCHEDULES(
	p_PARTY_NAME IN VARCHAR2,
	p_FIN_SCHEDULES IN XMLTYPE,
	p_SCHEDULE_STATE IN NUMBER,
	p_ERROR_MESSAGE OUT VARCHAR2
	);

PROCEDURE GET_AGREEMENT_TYPE_LIST(
	p_COMMODITY_ID IN NUMBER,
	p_CURSOR IN OUT REF_CURSOR
    );

PROCEDURE MARKET_SUBMIT_TRANSACTION_LIST(
	p_ACTION IN VARCHAR2,
	p_CURSOR IN OUT REF_CURSOR
    );

PROCEDURE SYSTEM_ACTION_USES_HOURS
	(
	p_ACTION IN VARCHAR2,
	p_SHOW_HOURS OUT NUMBER
    );

PROCEDURE MARKET_SUBMIT_WARNING(
	p_TIME_ZONE IN VARCHAR,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR,
	p_MUST_CANCEL_SUBMIT OUT NUMBER);

PROCEDURE MARKET_SUBMIT
	(
	p_BEGIN_DATE      IN DATE,
	p_END_DATE        IN DATE,
	p_EXCHANGE_TYPE   IN VARCHAR2,
	p_LOG_ONLY	    IN NUMBER,
	p_ENTITY_LIST 	 IN VARCHAR2,
	p_ENTITY_LIST_DELIMITER IN CHAR,
	p_SUBMIT_HOURS    IN VARCHAR2,
	p_TIME_ZONE       IN VARCHAR2,
	p_LOG_TYPE		 IN NUMBER,
	p_TRACE_ON		 IN NUMBER,
	p_STATUS          OUT NUMBER,
	p_MESSAGE         OUT VARCHAR2
	);

PROCEDURE MARKET_EXCHANGE_ENTITY_LIST
	(
	p_EXCHANGE_TYPE IN VARCHAR,
	p_ENTITY_LABEL OUT VARCHAR2,
	p_STATUS OUT NUMBER,
	p_CURSOR OUT REF_CURSOR
	);

PROCEDURE MARKET_EXCHANGE
	(
	p_BEGIN_DATE            	IN DATE,
	p_END_DATE              	IN DATE,
	p_EXCHANGE_TYPE  			IN VARCHAR2,
	p_ENTITY_LIST           	IN VARCHAR2,
	p_ENTITY_LIST_DELIMITER 	IN CHAR,
	p_LOG_TYPE 					IN NUMBER,
	p_TRACE_ON 					IN NUMBER,
	p_LOG_ONLY					IN BINARY_INTEGER,
	p_STATUS                	OUT NUMBER,
	p_MESSAGE               	OUT VARCHAR2
	);

PROCEDURE MARKET_IMPORT_CLOB
	(
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_EXCHANGE_TYPE IN VARCHAR,
	p_FILE_PATH IN VARCHAR2,
	p_IMPORT_FILE IN OUT NOCOPY CLOB,
	p_LOG_TYPE IN NUMBER,
	p_TRACE_ON IN NUMBER,
	p_LOG_ONLY IN BINARY_INTEGER := 0,
	p_STATUS OUT NUMBER,
	p_MESSAGE OUT VARCHAR
	);

PROCEDURE MISO_CPNODES_RPT(
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT REF_CURSOR
    );

PROCEDURE PUT_MISO_CPNODES_RPT(
	p_NODE_NAME IN VARCHAR2,
	p_NODE_TYPE IN VARCHAR2,
	p_ADD_SVC_POINT IN NUMBER,
	p_STATUS OUT NUMBER
    );

PROCEDURE MISO_UNAPP_BILAT_SCH_RPT(
	p_SCHEDULE_TYPE IN NUMBER,
	p_BEGIN_DATE IN DATE,
	p_END_DATE IN DATE,
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT REF_CURSOR
    );

FUNCTION GET_BID_OFFER_INTERVAL
	(
	p_TRANSACTION IN INTERCHANGE_TRANSACTION%ROWTYPE
	) RETURN VARCHAR2;

PROCEDURE GET_5MIN_LMP_REPORT(
	p_STATUS OUT NUMBER,
	p_CURSOR IN OUT REF_CURSOR
    );

PROCEDURE PUT_MISO_5MIN_LMP_SVC_PT
    (
    p_SERVICE_POINT_ID IN NUMBER,
    p_STATUS OUT NUMBER
    );

PROCEDURE DEL_MISO_5MIN_LMP_SVC_PT
    (
    p_SERVICE_POINT_ID IN NUMBER,
    p_STATUS OUT NUMBER
    );

PROCEDURE RUN_MISO_QUERY
    (
    p_CRED IN mex_credentials,
    p_LOG_ONLY IN NUMBER,
    p_XML_REQUEST_BODY IN XMLTYPE,
    p_XML_RESPONSE_BODY OUT XMLTYPE,
    p_ERROR_MESSAGE OUT VARCHAR2,
    p_LOGGER IN OUT NOCOPY MM_LOGGER_ADAPTER
    );

FUNCTION ID_FOR_MARKET_PRICE
    (
    p_LOCATION_NAME IN VARCHAR2,
    p_MARKET_PRICE_TYPE IN VARCHAR2,
    p_MARKET_PRICE_ABBR IN VARCHAR2,
    p_MARKET_TYPE IN VARCHAR2,
    p_INTERVAL IN VARCHAR2
    ) RETURN NUMBER;

    g_TIME_ZONE CONSTANT VARCHAR2(4) := 'EST';
    g_DATE_FORMAT CONSTANT VARCHAR2(16) := 'YYYY-MM-DD';
    g_DATE_TIME_FORMAT CONSTANT VARCHAR2(32) := 'yyyy-mm-dd"T"hh24:mi:ss';
    g_DATE_TIME_ZONE_FORMAT CONSTANT VARCHAR2(64) := 'yyyy-mm-dd"T"hh24:mi:ss.%%%"-%%:00"';
    g_MISO_MKT CONSTANT VARCHAR2(8) := 'miso';
    g_MISO_NAMESPACE CONSTANT VARCHAR2(64) := 'xmlns="http://markets.midwestiso.org/dart/xml"';
    g_MISO_NAMESPACE_NAME CONSTANT VARCHAR2(64) := 'http://markets.midwestiso.org/dart/xml';
    g_SETTLEMENT_NAMESPACE CONSTANT VARCHAR2(64) := NULL;                                                                                                                                                                   --'xmlns="urn:settlement:cos_ss"';
    g_SETTLEMENT_NAMESPACE_NAME CONSTANT VARCHAR2(64) := NULL;                                                                                                                                                                      --'urn:settlement:cos_ss';
    g_DEFAULT_ISO_ACCT_NAME VARCHAR2(32) := 'MISO';
    g_DEBUG CONSTANT BOOLEAN := FALSE;
    g_DAILY_TEMPLATE_VAL_DATE CONSTANT DATE := LOW_DATE + 1 / 86400;
    g_INIT_VAL_VARCHAR CONSTANT VARCHAR2(16) := '<INITVAL>';
    g_STATUS_FAILED NUMBER := 2;

	--Exchange Types for Queries
	g_ET_QRY_FCONTR_APPRV CONSTANT VARCHAR2(50) := 'Query Fin Contract For Approval';
	g_ET_QRY_FCONTR_APPRV_INTERNAL CONSTANT VARCHAR2(50) := 'Query Fin Contract For Approval To Internal';
	g_ET_QRY_FCONTR CONSTANT VARCHAR2(50) := 'Query Fin Contracts';
	g_ET_QRY_FCONTR_INTERNAL CONSTANT VARCHAR2(50) := 'Query Fin Contracts To Internal';
	g_ET_QRY_MESSAGES CONSTANT VARCHAR2(50) := 'Query Messages';
	g_ET_QRY_NODE_LIST CONSTANT VARCHAR2(50) := 'Query Node List';
	g_ET_QRY_SETTLEMENT_STATEMENT CONSTANT VARCHAR2(50) := 'Query Settlement Statement';
	g_ET_QRY_FSCHED CONSTANT VARCHAR2(50) := 'Query Fin Schedules';
	g_ET_QRY_FSCHED_APPRV CONSTANT VARCHAR2(50) := 'Query Fin Schedule For Approval';
	g_ET_QRY_FSCHED_INTERNAL CONSTANT VARCHAR2(50) := 'Query Fin Schedules To Internal';
	g_ET_QRY_FSCHED_APPRV_INTERNAL CONSTANT VARCHAR2(50) := 'Query Fin Schedule For Approval To Internal';
	g_ET_QRY_LOAD_FORECAST CONSTANT VARCHAR2(50) := 'Query Total Load Forecast';
	g_ET_QRY_PORTFOLIOS CONSTANT VARCHAR2(50) := 'Query Portfolios';
	g_ET_QRY_MARKET_RESULTS CONSTANT VARCHAR2(50) := 'Query Market Results';
	g_ET_QRY_PSS_SCHEDULE_AND_BIDS CONSTANT VARCHAR2(50) := 'Query PSS Schedule And Bids';
	g_ET_QRY_DIST_FACTORS_LOC CONSTANT VARCHAR2(50) :='Query Dist Factors By Location';
	g_ET_QRY_DIST_FACTORS_PORT CONSTANT VARCHAR2(50) :='Query Dist Factors By Portfolio';
	g_ET_QRY_FIXED_DEMAND_PORT CONSTANT VARCHAR2(50) :='Query Fixed Demand Bids By Portfolio';
	g_ET_QRY_FIXED_DEMAND_LOC CONSTANT VARCHAR2(50) :='Query Fixed Demand Bids By Location';
	g_ET_QRY_PRICE_SENS_DEMD_PORT CONSTANT VARCHAR2(50) :='Query Price Sensitive Demand Bids By Portfolio';
	g_ET_QRY_PRICE_SENS_DEMD_LOC CONSTANT VARCHAR2(50) :='Query Price Sensitive Demand Bids By Location';
	g_ET_QRY_SCHEDULE_OFFERS_PORT CONSTANT VARCHAR2(50) :='Query Schedule Offers By Portfolio';
	g_ET_QRY_SCHEDULE_OFFERS_LOC CONSTANT VARCHAR2(50) :='Query Schedule Offers By Location';
	g_ET_QRY_UPDATE_PORT CONSTANT VARCHAR2(50) :='Query Updates By Portfolio';
	g_ET_QRY_VIRT_BIDS_PORT CONSTANT VARCHAR2(50) :='Query Virtual Bids By Portfolio';
	g_ET_QRY_VIRT_BIDS_LOC CONSTANT VARCHAR2(50) :='Query Virtual Bids By Location';
	g_ET_QRY_VIRT_OFFERS_PORT CONSTANT VARCHAR2(50) :='Query Virtual Offers By Portfolio';
	g_ET_QRY_VIRT_OFFERS_LOC CONSTANT VARCHAR2(50) :='Query Virtual Offers By Location';
	g_ET_RETRIEVE_NOTIFICATIONS CONSTANT VARCHAR2(50) := 'Retrieve Notifications';
	g_ET_DIRECT_QUERY CONSTANT VARCHAR2(50) := 'Direct Query';
    g_ET_RT_INTEGRATED_LMP_QUERY CONSTANT VARCHAR2(50) := 'Query RealTime Integrated LMP';
    g_ET_5_MINUTE_LMP_QUERY CONSTANT VARCHAR2(50) := 'Query 5 Minute LMP';

	--Exchange Types for Settlement
	g_ET_DA_SETTLEMENT_STATEMENT CONSTANT VARCHAR2(50) := 'DA Settlement Statement';
	g_ET_RT_SETTLEMENT_STATEMENT CONSTANT VARCHAR2(50) := 'RT Settlement Statement';
	g_ET_FTR_SETTLEMENT_STATEMENT CONSTANT VARCHAR2(50) := 'FTR Settlement Statement';

	--Exchange Types for SUbmittals
	g_ET_SUBMIT_FIN_CONTRACT CONSTANT VARCHAR2(50) :='Submit Fin Contract';
	g_ET_CONFIRM_FIN_CONTRACT CONSTANT VARCHAR2(50) :='Confirm Fin Contract';
	g_ET_REJECT_FIN_CONTRACT CONSTANT VARCHAR2(50) :='Reject Fin Contract';
	g_ET_SUBMIT_FIN_SCHEDULE CONSTANT VARCHAR2(50) := 'Submit Fin Schedule';
	g_ET_CONFIRM_FIN_SCHEDULE CONSTANT VARCHAR2(50) :='Confirm Fin Schedule';
	g_ET_REJECT_FIN_SCHEDULE CONSTANT VARCHAR2(50) :='Reject Fin Schedule';
	g_ET_SUBMIT_VIRTUAL_BID CONSTANT VARCHAR2(50) := 'Submit Virtual Bid';
	g_ET_SUBMIT_VIRTUAL_OFFER CONSTANT VARCHAR2(50) := 'Submit Virtual Offer';
	g_ET_SUBMIT_FIXED_DEMAND CONSTANT VARCHAR2(50) := 'Submit Fixed Demand Bid';
	g_ET_SUBMIT_PRICE_SENS_DEMAND CONSTANT VARCHAR2(50) := 'Submit Price Sensitive Demand Bid';
	g_ET_SUBMIT_SCHEDULE_OFFER CONSTANT VARCHAR2(50) := 'Submit Schedule Offer';
	g_ET_SUBMIT_UPDATE_SCHED_OFFER CONSTANT VARCHAR2(50) := 'Submit Update Schedule Offer';
	g_ET_SUBMIT_DEF_LIMITS CONSTANT VARCHAR2(50) := 'Submit Default Limits';
	g_ET_SUBMIT_DEF_STARTUP_COSTS CONSTANT VARCHAR2(50) := 'Submit Default Startup Costs';
	g_ET_SUBMIT_DEF_STATUS CONSTANT VARCHAR2(50) := 'Submit Default Status';
	g_ET_SUBMIT_RAMP_RATE CONSTANT VARCHAR2(50) := 'Submit Ramp Rate';
	g_ET_SUBMIT_FTR_BID_PROFILE CONSTANT VARCHAR2(50) :='Submit FTR Bid Profile';
	g_ET_SUBMIT_WEATHER_FORECAST CONSTANT VARCHAR2(50) :='Submit Weather Forecast';
	g_ET_CREATE_PORTFOLIO CONSTANT VARCHAR2(50) :='Create Portfolio';
	g_ET_UPDATE_PORTFOLIO CONSTANT VARCHAR2(50) :='Update Portfolio';
	g_ET_UPLOAD_METER_DATA CONSTANT VARCHAR2(50) := 'Upload Meter Data';
	g_ET_DIRECT_SUBMIT CONSTANT VARCHAR2(50) := 'Direct Submit';

	--Entity Types of market actions
	g_ENTITY_TYPE_TRANSACTION CONSTANT VARCHAR2(32) := 'TRANSACTION';
	g_ENTITY_TYPE_PORTFOLIO CONSTANT VARCHAR2(32) := 'PORTFOLIO';
	g_ENTITY_TYPE_SERVICE_POINT CONSTANT VARCHAR2(32) := 'SERVICE_POINT';
	g_ENTITY_TYPE_AREA CONSTANT VARCHAR2(32) := 'AREA';
	g_ENTITY_TYPE_WEATHER_STATION CONSTANT VARCHAR2(32) := 'WEATHER_STATION';
	g_ENTITY_TYPE_SUBSTATION_METER CONSTANT VARCHAR2(32) := 'SUBSTATION_METER';

END MM_MISO;
/
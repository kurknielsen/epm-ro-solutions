CREATE OR REPLACE TRIGGER AGGREGATE_ACCOUNT_ESP_DELETE
	AFTER DELETE ON AGGREGATE_ACCOUNT_ESP
	FOR EACH ROW
BEGIN
	IF NOT GA.ENABLE_SERVICE_RETENTION THEN
		DELETE AGGREGATE_ACCOUNT_SERVICE
		WHERE AGGREGATE_ID = :old.AGGREGATE_ID
			AND SERVICE_DATE BETWEEN :old.BEGIN_DATE AND NVL(:old.END_DATE,HIGH_DATE);
		DELETE AGGREGATE_ACCOUNT_CUSTOMER
		WHERE AGGREGATE_ID = :old.AGGREGATE_ID
			AND ((BEGIN_DATE >= :old.BEGIN_DATE AND NVL(END_DATE,HIGH_DATE) <= NVL(:old.END_DATE,HIGH_DATE))
			OR (BEGIN_DATE <= :old.BEGIN_DATE AND NVL(END_DATE,:old.BEGIN_DATE) >= :old.BEGIN_DATE));
        DELETE ACCOUNT_SUB_AGG_AGGREGATION
        WHERE AGGREGATE_ID = :old.AGGREGATE_ID
            AND ((BEGIN_DATE >= :old.BEGIN_DATE AND NVL(END_DATE,HIGH_DATE) <= NVL(:old.END_DATE,HIGH_DATE))
            OR (BEGIN_DATE <= :old.BEGIN_DATE AND NVL(END_DATE,:old.BEGIN_DATE) >= :old.BEGIN_DATE));
        DELETE METER_SUB_AGG_AGGREGATION
        WHERE AGGREGATE_ID = :old.AGGREGATE_ID
            AND ((BEGIN_DATE >= :old.BEGIN_DATE AND NVL(END_DATE,HIGH_DATE) <= NVL(:old.END_DATE,HIGH_DATE))
            OR (BEGIN_DATE <= :old.BEGIN_DATE AND NVL(END_DATE,:old.BEGIN_DATE) >= :old.BEGIN_DATE));
	END IF;
END AGGREGATE_ACCOUNT_ESP_DELETE;
/

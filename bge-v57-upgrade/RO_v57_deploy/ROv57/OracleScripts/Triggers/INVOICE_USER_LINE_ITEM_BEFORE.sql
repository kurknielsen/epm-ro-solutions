CREATE OR REPLACE TRIGGER INVOICE_USER_LINE_ITEM_BEFORE
	BEFORE DELETE OR INSERT OR UPDATE ON INVOICE_USER_LINE_ITEM
	FOR EACH ROW

DECLARE
v_COUNT_CLOSED VARCHAR2(32) := 0;
BEGIN
	-- fail if the invoice is closed
    BEGIN
		IF INSERTING THEN
			SELECT COUNT(*) INTO v_COUNT_CLOSED
			FROM INVOICE
			WHERE ENTITY_ID = :new.ENTITY_ID
				AND STATEMENT_TYPE = :new.STATEMENT_TYPE
				AND STATEMENT_STATE = :new.STATEMENT_STATE
				AND BEGIN_DATE = :new.BEGIN_DATE
				AND UPPER(SUBSTR(INVOICE_STATUS,1,6)) = 'CLOSED';
		ELSE
			SELECT COUNT(*) INTO v_COUNT_CLOSED
			FROM INVOICE
			WHERE ENTITY_ID = :old.ENTITY_ID
				AND STATEMENT_TYPE = :old.STATEMENT_TYPE
				AND STATEMENT_STATE = :old.STATEMENT_STATE
				AND BEGIN_DATE = :old.BEGIN_DATE
				AND UPPER(SUBSTR(INVOICE_STATUS,1,6)) = 'CLOSED';
		END IF;
	EXCEPTION
		WHEN OTHERS THEN
        	v_COUNT_CLOSED := 0; -- errors may indicate that the
            					 -- INVOICE table is mutating - in which
	        					 -- case, ignore error and allow the update/insert/delete
	END;
    
	IF v_COUNT_CLOSED > 0 THEN
		-- invoice is closed, so cancel this operation with an exception
		ERRS.RAISE(MSGCODES.c_ERR_INVOICE_CLOSED);
	END IF;
END INVOICE_USER_LINE_ITEM_BEFORE;
/

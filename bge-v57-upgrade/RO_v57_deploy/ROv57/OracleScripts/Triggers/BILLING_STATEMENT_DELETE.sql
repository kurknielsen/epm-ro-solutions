CREATE OR REPLACE TRIGGER BILLING_STATEMENT_DELETE
	AFTER DELETE ON BILLING_STATEMENT
	FOR EACH ROW
BEGIN
	DELETE ACCOUNT_SERVICE_CHARGE WHERE CHARGE_ID IN(:old.CHARGE_ID,-:old.CHARGE_ID);
	DELETE BILLING_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE COMBINATION_CHARGE WHERE CHARGE_ID = :old.cHARGE_ID;
	DELETE CONVERSION_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE ENTITY_ATTRIBUTE_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE FORMULA_CHARGE_ITERATOR_NAME WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE FTR_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE IMBALANCE_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE LMP_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE PIPELINE_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE OPER_PROFIT_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE TAX_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;
	DELETE TRANSMISSION_CHARGE WHERE CHARGE_ID = :old.CHARGE_ID;

/*	IF :old.CHARGE_QUANTITY <> 0 OR :old.CHARGE_RATE <> 0 OR :old.CHARGE_AMOUNT <> 0
       OR :old.BILL_QUANTITY <> 0 OR :old.BILL_AMOUNT <> 0 THEN*/
	IF NOT PC.g_DELETING_TEMP_ROW THEN
       	-- if this is a valid row being deleted (vs. all zero that is likely a temp row that is being
        -- deleted during the calc process) then mark the status accordingly
        UPDATE BILLING_STATEMENT_STATUS
        SET REVIEW_STATUS = 'Deleted'
        WHERE ENTITY_ID = :old.ENTITY_ID
        	AND STATEMENT_TYPE = :old.STATEMENT_TYPE
            AND STATEMENT_STATE = :old.STATEMENT_STATE
            AND STATEMENT_DATE = :old.STATEMENT_DATE
            AND AS_OF_DATE = :old.AS_OF_DATE;
	END IF;

	EXCEPTION
		WHEN ERRS.e_TABLE_IS_MUTATING THEN
			NULL; -- ignore, we're trying to update BILLING_STATEMENT_STATUS and
			-- it's being deleted as well, so it's not a problem that we can't update
END BILLING_STATEMENT_DELETE;
/

CREATE OR REPLACE TRIGGER COMPONENT_UPDATE
	BEFORE UPDATE ON COMPONENT
	FOR EACH ROW
DECLARE
	v_OLD_RATE VARCHAR(64);
	v_NEW_RATE VARCHAR(64);
BEGIN

--CHECK FOR SOME SIMPLE DATABASE CONSISTENCY STUFF

	v_NEW_RATE := UPPER(:new.RATE_STRUCTURE);
	v_OLD_RATE := UPPER(:old.RATE_STRUCTURE);
	
	IF v_NEW_RATE <> v_OLD_RATE THEN
		IF v_OLD_RATE = 'BLOCK' AND v_NEW_RATE <> 'TIERED' THEN
			DELETE FROM COMPONENT_BLOCK_RATE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'COINCIDENT PEAK SHARE' THEN
			DELETE FROM COMPONENT_COINCIDENT_PEAK WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'COMBINATION' THEN
			DELETE FROM COMPONENT_COMBINATION WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'COMPOSITE' THEN
			DELETE FROM COMPONENT_COMPOSITE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'CONVERSION' THEN
			DELETE FROM COMPONENT_CONVERSION_RATE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'ENTITY ATTRIBUTE' THEN
			DELETE FROM COMPONENT_ENTITY_ATTRIBUTE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'FLAT' THEN
			DELETE FROM COMPONENT_FLAT_RATE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'FORMULA' THEN
			DELETE FROM COMPONENT_FORMULA_ITERATOR WHERE COMPONENT_ID = :new.COMPONENT_ID;
			DELETE FROM COMPONENT_FORMULA_INPUT WHERE COMPONENT_ID = :new.COMPONENT_ID;
			DELETE FROM COMPONENT_FORMULA_VARIABLE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'IMBALANCE' THEN
			DELETE FROM COMPONENT_IMBALANCE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'MARKET' THEN
			DELETE FROM COMPONENT_MARKET_PRICE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'TIERED' AND v_NEW_RATE <> 'BLOCK' THEN
			DELETE FROM COMPONENT_BLOCK_RATE WHERE COMPONENT_ID = :new.COMPONENT_ID;
		ELSIF v_OLD_RATE = 'TIME OF USE' THEN
			DELETE FROM COMPONENT_TOU_RATE WHERE COMPONENT_ID = :new.COMPONENT_ID;
	   END IF;
	END IF;
END COMPONENT_UPDATE;
/

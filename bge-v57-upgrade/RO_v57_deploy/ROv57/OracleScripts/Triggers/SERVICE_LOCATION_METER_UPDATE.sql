CREATE OR REPLACE TRIGGER SERVICE_LOCATION_METER_UPDATE
	AFTER UPDATE OF BEGIN_DATE, END_DATE ON SERVICE_LOCATION_METER
	FOR EACH ROW
DECLARE
v_SERVICE_LOCATION_ID NUMBER(9);
v_METER_ID NUMBER(9);
v_ACCOUNT_SERVICE_ID NUMBER(9);

CURSOR c_ACCOUNT_SERVICE IS
	SELECT ACCOUNT_SERVICE_ID
	FROM ACCOUNT_SERVICE
	WHERE SERVICE_LOCATION_ID = v_SERVICE_LOCATION_ID
		AND METER_ID = v_METER_ID;
		
CURSOR c_SERVICE IS
	SELECT SERVICE_ID
	FROM SERVICE
	WHERE ACCOUNT_SERVICE_ID = v_ACCOUNT_SERVICE_ID;
BEGIN

-- DELETE SERVICE_STATE RECORDS ONLY FOR THOSE DATES AFFECTED
	IF :old.BEGIN_DATE <> :new.BEGIN_DATE OR :old.END_DATE <> :new.END_DATE THEN
		v_SERVICE_LOCATION_ID := :old.SERVICE_LOCATION_ID;
		v_METER_ID := :old.METER_ID;

    	FOR v_ACCOUNT_SERVICE IN c_ACCOUNT_SERVICE LOOP
			v_ACCOUNT_SERVICE_ID := v_ACCOUNT_SERVICE.ACCOUNT_SERVICE_ID;
			
			FOR v_SERVICE IN c_SERVICE LOOP
				DELETE FROM SERVICE_STATE
				WHERE SERVICE_ID = v_SERVICE.SERVICE_ID
					AND (SERVICE_DATE < :new.BEGIN_DATE OR SERVICE_DATE > NVL(:new.END_DATE, HIGH_DATE));
			END LOOP;
		END LOOP;
	END IF;
	
END SERVICE_LOCATION_METER_UPDATE;
/


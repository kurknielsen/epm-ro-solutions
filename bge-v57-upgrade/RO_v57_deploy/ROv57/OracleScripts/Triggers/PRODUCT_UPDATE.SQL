CREATE OR REPLACE TRIGGER PRODUCT_UPDATE
	AFTER UPDATE OR INSERT ON PRODUCT
	FOR EACH ROW

DECLARE
	CURSOR c_PRODUCT_COMPONENT IS
	SELECT *
	FROM PRODUCT_COMPONENT
	WHERE PRODUCT_ID = :new.PRODUCT_ID;
	v_PRODUCT_COMPONENT PRODUCT_COMPONENT%ROWTYPE;
	v_PRODUCT_BEGIN DATE;
	v_PRODUCT_END DATE;
	v_COMPONENT_BEGIN DATE;
	v_COMPONENT_END DATE;
BEGIN
--CHECK THAT THE BEGIN DATE IS BEFORE THE END DATE.
	v_PRODUCT_BEGIN := :new.BEGIN_DATE;
	v_PRODUCT_END := NVL(:new.END_DATE,TO_DATE('31-DEC-9999','DD-MON-YYYY'));
	IF v_PRODUCT_END < v_PRODUCT_BEGIN THEN
		ERRS.RAISE_BAD_DATE_RANGE(v_PRODUCT_BEGIN,v_PRODUCT_END, 'End Date must be later or equal to Begin Date.');
	END IF;
--CHECK THAT THE COMPONENT ASSIGNMENTS ARE WITHIN THE PRODUCT DATE RANGE
	OPEN c_PRODUCT_COMPONENT;
	LOOP
		FETCH c_PRODUCT_COMPONENT INTO v_PRODUCT_COMPONENT;
		EXIT WHEN c_PRODUCT_COMPONENT%NOTFOUND;
		v_COMPONENT_BEGIN := v_PRODUCT_COMPONENT.BEGIN_DATE;
		v_COMPONENT_END := NVL(v_PRODUCT_COMPONENT.END_DATE,v_PRODUCT_END);
		IF NOT (v_COMPONENT_BEGIN >= v_PRODUCT_BEGIN AND v_COMPONENT_END <= v_PRODUCT_END) THEN
			CLOSE c_PRODUCT_COMPONENT;
			ERRS.RAISE_BAD_DATE_RANGE(v_COMPONENT_BEGIN,v_COMPONENT_END, 'Component assignment date range cannot fall outside the Product''s date range');
		END IF;
	END LOOP;
	CLOSE c_PRODUCT_COMPONENT;
END PRODUCT_UPDATE;
/

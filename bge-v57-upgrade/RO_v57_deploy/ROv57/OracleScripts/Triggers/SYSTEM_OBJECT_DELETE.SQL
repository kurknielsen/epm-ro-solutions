CREATE OR REPLACE TRIGGER SYSTEM_OBJECT_DELETE
	AFTER DELETE ON SYSTEM_OBJECT
	FOR EACH ROW
BEGIN
	--DELETE SYSTEM_OBJECT WHERE PARENT_OBJECT_ID = :old.OBJECT_ID;
	-- cannot do above delete because it will cause table is mutating error - 
	-- instead, mark the object ID in RTO_WORK and use another (non-row) trigger to clean up
	INSERT INTO RTO_WORK (WORK_ID, WORK_XID) VALUES (-9875, :old.OBJECT_ID);

END SYSTEM_OBJECT_DELETE;
/

CREATE OR REPLACE TRIGGER SYSTEM_OBJECT_DELETE2
	AFTER DELETE ON SYSTEM_OBJECT
DECLARE
v_WORK_IDs ID_TABLE := ID_TABLE();
BEGIN
	DELETE RTO_WORK
	WHERE WORK_ID = -9875
	RETURNING ID_TYPE(WORK_XID)
	BULK COLLECT INTO v_WORK_IDs;

	IF v_WORK_IDs.COUNT > 0 THEN
		DELETE SYSTEM_OBJECT
		WHERE PARENT_OBJECT_ID IN
			(SELECT X.ID FROM TABLE(CAST(v_WORK_IDs AS ID_TABLE)) X);
	END IF;
END SYSTEM_OBJECT_DELETE2;
/

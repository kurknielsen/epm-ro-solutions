CREATE OR REPLACE TRIGGER TX_FEEDER_SEGMENT_SL_SYNC
	AFTER UPDATE ON TX_FEEDER_SEGMENT
	FOR EACH ROW
DECLARE
	v_SUB_STATION_ID NUMBER(9);
	v_SERVICE_ZONE_ID NUMBER(9);
BEGIN
	IF NVL(:NEW.FEEDER_ID, CONSTANTS.NULL_ID) != NVL(:OLD.FEEDER_ID, CONSTANTS.NULL_ID) THEN

		SELECT TF.SUB_STATION_ID, TSS.SERVICE_ZONE_ID
			INTO v_SUB_STATION_ID, v_SERVICE_ZONE_ID
		FROM TX_FEEDER TF, TX_SUB_STATION TSS
		WHERE TF.FEEDER_ID = :NEW.FEEDER_ID
			AND TSS.SUB_STATION_ID = TF.SUB_STATION_ID;

		ACCOUNTS_METERS.g_SRVCE_LOC_USE_TRIGGER := FALSE;

		UPDATE SERVICE_LOCATION
		SET FEEDER_ID = :NEW.FEEDER_ID,
			SUB_STATION_ID = v_SUB_STATION_ID,
			SERVICE_ZONE_ID = v_SERVICE_ZONE_ID
		WHERE FEEDER_SEGMENT_ID = :NEW.FEEDER_SEGMENT_ID;

		ACCOUNTS_METERS.g_SRVCE_LOC_USE_TRIGGER := TRUE;

	END IF;
	
EXCEPTION
	WHEN OTHERS THEN
		ACCOUNTS_METERS.g_SRVCE_LOC_USE_TRIGGER := TRUE;
		ERRS.LOG_AND_RAISE();
		
END TX_FEEDER_SEGMENT_SL_SYNC;
/

-- Insert SYSTEM_TABLE data for Auditing, Reactor, and Data Locking

set serveroutput on

DECLARE
	PROCEDURE PUT_SYSTEM_TABLE
		(
		p_NAME 				      IN VARCHAR2,
		p_DB_TABLE_NAME 	      IN VARCHAR2,
		p_ENTITY_DOMAIN_ID        IN NUMBER,
		p_KEY_CONSTRAINT 	      IN VARCHAR2,
		p_ENTITY_COL_NAME 	      IN VARCHAR2,
		p_DATE_COL_NAME1 	      IN VARCHAR2,
		p_DATA_COL_NAME2 	      IN VARCHAR2,
		p_LOCK_SUMMARY_TABLE_NAME IN VARCHAR2
		) AS
		
		v_TABLE	SYSTEM_TABLE%ROWTYPE;
		v_AUDIT_ENABLED NUMBER(1);
		v_IS_LOCKABLE NUMBER(1);
		v_LOCKING_ENABLED NUMBER(1);
		v_DUMMY	VARCHAR2(128);
		
	BEGIN
		-- See if entry already exists - default ID to zero if not
		SELECT NVL(MAX(TABLE_ID),0)
		INTO v_TABLE.TABLE_ID
		FROM SYSTEM_TABLE
		WHERE DB_TABLE_NAME = p_DB_TABLE_NAME;
		
		IF v_TABLE.TABLE_ID <> 0 THEN -- does exist? get current settings
			AUDIT_TRAIL.GET_SYSTEM_TABLE(v_TABLE.TABLE_ID,
								v_TABLE.TABLE_NAME,
								v_TABLE.TABLE_ALIAS,
								v_TABLE.TABLE_DESC,
								v_TABLE.DB_TABLE_NAME,
								v_TABLE.MIRROR_TABLE_NAME,
								v_TABLE.ENTITY_DOMAIN_ID,
								v_DUMMY,
								v_TABLE.KEY_CONSTRAINT_NAME,
								v_TABLE.ENTITY_ID_COLUMN_NAME,
								v_TABLE.DATE1_COLUMN_NAME,
								v_TABLE.DATE2_COLUMN_NAME,
								v_AUDIT_ENABLED,
								v_TABLE.IS_REACTIVE,
								v_IS_LOCKABLE,
								v_TABLE.LOCK_SUMMARY_TABLE_NAME,
								v_LOCKING_ENABLED);
		ELSE
			v_TABLE.TABLE_NAME := p_NAME;
			v_TABLE.TABLE_ALIAS := p_DB_TABLE_NAME;
			v_TABLE.TABLE_DESC := p_NAME || ': System generated SYSTEM_TABLE entry for the ' || p_DB_TABLE_NAME || ' database table.';
			v_AUDIT_ENABLED := 0; -- default audit disabled, not reactive, and locking disabled
			v_TABLE.IS_REACTIVE := 0;
			v_LOCKING_ENABLED := 0;
		END IF;

		AUDIT_TRAIL.PUT_SYSTEM_TABLE(v_TABLE.TABLE_ID,
			v_TABLE.TABLE_NAME,
			v_TABLE.TABLE_ALIAS,
			v_TABLE.TABLE_DESC,
			v_TABLE.TABLE_ID,
			p_DB_TABLE_NAME,
			p_ENTITY_DOMAIN_ID,
			p_KEY_CONSTRAINT,
			p_ENTITY_COL_NAME,
			p_DATE_COL_NAME1,
			p_DATA_COL_NAME2,
			v_AUDIT_ENABLED,
			v_TABLE.IS_REACTIVE,
			p_LOCK_SUMMARY_TABLE_NAME,
			v_LOCKING_ENABLED);

	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE(UTL_TCP.CRLF || 'ERROR: Could not create the SYSTEM_TABLE entry for NAME = ' || p_NAME || ', DB_TABLE_NAME = ' || p_DB_TABLE_NAME);
			DBMS_OUTPUT.PUT_LINE('Details: ' || SQLERRM);
	END;
BEGIN

	PUT_SYSTEM_TABLE('Interchange Transaction', 'INTERCHANGE_TRANSACTION', EC.ED_TRANSACTION, 'PK_INTERCHANGE_TRANSACTION', 'TRANSACTION_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Schedule Data', 'IT_SCHEDULE', EC.ED_TRANSACTION, 'PK_IT_SCHEDULE', 'TRANSACTION_ID', 'SCHEDULE_DATE', NULL, 'IT_SCHEDULE_LOCK_SUMMARY');
	PUT_SYSTEM_TABLE('Transaction Status', 'IT_STATUS', EC.ED_TRANSACTION, 'PK_IT_STATUS', 'TRANSACTION_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Price Data', 'MARKET_PRICE_VALUE', EC.ED_MARKET_PRICE, 'PK_MARKET_PRICE_VALUE', 'MARKET_PRICE_ID', 'PRICE_DATE', NULL, 'MARKET_PRICE_VAL_LOCK_SUMMARY');
	PUT_SYSTEM_TABLE('Component Block Rates', 'COMPONENT_BLOCK_RATE', EC.ED_COMPONENT, 'PK_COMPONENT_BLOCK_RATE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Coincident Peak Rates', 'COMPONENT_COINCIDENT_PEAK', EC.ED_COMPONENT, 'PK_COMPONENT_COINCIDENT_PEAK', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Bid/Offer Data', 'IT_TRAIT_SCHEDULE', EC.ED_TRANSACTION, 'PK_IT_TRAIT_SCHEDULE', 'TRANSACTION_ID', 'SCHEDULE_DATE', NULL, 'IT_TRAIT_SCHEDULE_LOCK_SUMMARY');
	PUT_SYSTEM_TABLE('Substation Meter Point Data', 'TX_SUB_STATION_METER_PT_VALUE', EC.ED_SUB_STATION_METER_POINT, 'PK_TX_SUB_STATION_MTR_PT_VALUE', 'METER_POINT_ID', 'METER_DATE', NULL, 'TX_SUB_STATION_MTR_PT_VAL_LK_S');
	PUT_SYSTEM_TABLE('Calculation Run Results', 'CALCULATION_RUN', EC.ED_CALC_PROCESS, 'AK_CALCULATION_RUN', 'CALC_PROCESS_ID', 'RUN_DATE', NULL, 'CALCULATION_RUN_LOCK_SUMMARY');
	PUT_SYSTEM_TABLE('Billing Statements', 'BILLING_STATEMENT', EC.ED_PSE, 'PK_BILLING_STATEMENT', 'ENTITY_ID', 'STATEMENT_DATE', NULL, 'BILLING_STATEMENT_LOCK_SUMMARY');
	PUT_SYSTEM_TABLE('Measurement Source Data', 'MEASUREMENT_SOURCE_VALUE', EC.ED_MEASUREMENT_SOURCE, 'PK_MEASUREMENT_SOURCE_VALUE', 'MEASUREMENT_SOURCE_ID', 'SOURCE_DATE', NULL, 'MEASUREMENT_SRC_VAL_LK_SUMMARY');
    PUT_SYSTEM_TABLE('Demand Response Event', 'DR_EVENT', EC.ED_DR_EVENT, 'PK_DR_EVENT', 'EVENT_ID', 'START_TIME', 'STOP_TIME', NULL);

	-- DER Type System Tables
	PUT_SYSTEM_TABLE('Distributed Energy Resource Type', 'DER_TYPE', EC.ED_DER_TYPE, 'PK_DER_TYPE', 'DER_TYPE_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Distributed Energy Resource Type Default Load/Generation Model', 'DER_TYPE_CALENDAR', EC.ED_DER_TYPE, 'PK_DER_TYPE_CALENDAR', 'DER_TYPE_ID', NULL, NULL, NULL);
	
	-- DG Asset System Tables
	PUT_SYSTEM_TABLE('Distributed Energy Resource', 'DISTRIBUTED_ENERGY_RESOURCE', EC.ED_DER, 'PK_DISTRIBUTED_ENERGY_RESOURCE', 'DER_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Distributed Energy Resource Load/Generation Model', 'DER_CALENDAR', EC.ED_DER, 'PK_DER_CALENDAR', 'DER_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Distributed Energy Resource Scale Factor', 'DER_SCALE_FACTOR', EC.ED_DER, 'PK_DER_SCALE_FACTOR', 'DER_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Distributed Energy Resource Status', 'DER_STATUS', EC.ED_DER, 'PK_DER_STATUS', 'DER_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	
	-- Smart Grid Program Tables
	PUT_SYSTEM_TABLE('Smart Grid Program', 'PROGRAM', EC.ED_PROGRAM, 'PK_PROGRAM', 'PROGRAM_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Smart Grid Program Execution Type', 'PROGRAM_EXECUTION_TYPE', EC.ED_PROGRAM, 'PK_PROGRAM_EXEC_TYPE', 'PROGRAM_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Smart Grid Program Notification', 'PROGRAM_NOTIFICATION', EC.ED_PROGRAM, 'PK_PROGRAM_NOTIFICATION', 'PROGRAM_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Smart Grid Program Limit', 'PROGRAM_LIMIT', EC.ED_PROGRAM, 'PK_PROGRAM_LIMIT', 'PROGRAM_ID', NULL, NULL, NULL);
 	PUT_SYSTEM_TABLE('Smart Grid Program Required Equipment', 'PROGRAM_REQUIRED_EQUIPMENT', EC.ED_PROGRAM, 'PK_PROGRAM_REQ_EQUIP', 'PROGRAM_ID', NULL, NULL, NULL);
 	PUT_SYSTEM_TABLE('Smart Grid Program Resource Type', 'PROGRAM_DER_TYPE', EC.ED_PROGRAM, 'PK_PROGRAM_DER_TYPE', 'PROGRAM_ID', NULL, NULL, NULL);
 	PUT_SYSTEM_TABLE('Smart Grid Program DLC Payment', 'PROGRAM_DER_PAYMENT', EC.ED_PROGRAM, 'AK_PROG_DER_PAY_DER_TYPE_ID', 'PROGRAM_ID', NULL, NULL, NULL);
 	PUT_SYSTEM_TABLE('Smart Grid Program Rebates and Payment Limits', 'PROGRAM_PAYMENT', EC.ED_PROGRAM, 'PK_PROGRAM_PAYMENT', 'PROGRAM_ID', 'BEGIN_DATE', 'END_DATE', NULL);

  	-- VPP table
  	PUT_SYSTEM_TABLE('Smart Grid Virtual Power Plant', 'VIRTUAL_POWER_PLANT', EC.ED_VPP, 'PK_VIRTUAL_POWER_PLANT', 'VPP_ID', NULL, NULL, NULL);
		
	-- Transmission Network Tables
	PUT_SYSTEM_TABLE('Service Zone', 'SERVICE_ZONE', EC.ED_SERVICE_ZONE, 'PK_SERVICE_ZONE', 'SERVICE_ZONE_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Substation', 'TX_SUB_STATION', EC.ED_SUB_STATION, 'PK_TX_SUB_STATION', 'SUB_STATION_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Substation Meter', 'TX_SUB_STATION_METER', EC.ED_SUB_STATION_METER, 'PK_TX_SUB_STATION_METER', 'METER_ID', 'BEGIN_DATE','END_DATE', NULL);
	PUT_SYSTEM_TABLE('Substation Meter Data Point', 'TX_SUB_STATION_METER_POINT', EC.ED_SUB_STATION_METER_POINT, 'PK_TX_SUB_STATION_METER_POINT', 'METER_POINT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Feeder', 'TX_FEEDER', EC.ED_TX_FEEDER, 'PK_TX_FEEDER', 'FEEDER_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Feeder Segment', 'TX_FEEDER_SEGMENT', EC.ED_TX_FEEDER_SEGMENT, 'PK_TX_FEEDER_SEGMENT', 'FEEDER_SEGMENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Feeder Segment Loss Factor', 'TX_FEEDER_SEGMENT_LOSS_FACTOR', EC.ED_TX_FEEDER_SEGMENT, 'PK_TX_SEGMENT_LOSS_FACTOR', 'FEEDER_SEGMENT_ID', NULL, NULL, NULL);

	-- Account Tables
	PUT_SYSTEM_TABLE('Account', 'ACCOUNT', EC.ED_ACCOUNT, 'PK_ACCOUNT', 'ACCOUNT_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Account Ancillary Service', 'ACCOUNT_ANCILLARY_SERVICE', EC.ED_ACCOUNT, 'PK_ACCOUNT_ANCILLARY_SERVICE', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Bill Cycle', 'ACCOUNT_BILL_CYCLE', EC.ED_ACCOUNT, 'PK_ACCOUNT_BILL_CYCLE', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_tABLE('Account Bill Party', 'ACCOUNT_BILL_PARTY', EC.ED_ACCOUNT, 'PK_ACCOUNT_BILL_PARTY', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Calendar', 'ACCOUNT_CALENDAR', EC.ED_ACCOUNT, 'PK_ACCOUNT_CALENDAR', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account EDC', 'ACCOUNT_EDC', EC.ED_ACCOUNT, 'PK_ACCOUNT_EDC', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account ESP', 'ACCOUNT_ESP', EC.ED_ACCOUNT, 'PK_ACCOUNT_ESP', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Growth', 'ACCOUNT_GROWTH', EC.ED_ACCOUNT, 'PK_ACCOUNT_GROWTH', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Loss Factor', 'ACCOUNT_LOSS_FACTOR', EC.ED_ACCOUNT, 'PK_ACCOUNT_LOSS_FACTOR', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Product', 'ACCOUNT_PRODUCT', EC.ED_ACCOUNT, 'PK_ACCOUNT_PRODUCT', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Schedule Group', 'ACCOUNT_SCHEDULE_GROUP', EC.ED_ACCOUNT, 'PK_ACCOUNT_SCHEDULE_GROUP', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Service Location', 'ACCOUNT_SERVICE_LOCATION', EC.ED_ACCOUNT, 'PK_ACCOUNT_SERVICE_LOCATION', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Status', 'ACCOUNT_STATUS', EC.ED_ACCOUNT, 'PK_ACCOUNT_STATUS', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Account Usage Factor', 'ACCOUNT_USAGE_FACTOR', EC.ED_ACCOUNT, 'PK_ACCOUNT_USAGE_FACTOR', 'ACCOUNT_ID', 'BEGIN_DATE', 'END_DATE', NULL);

	-- Product
	PUT_SYSTEM_TABLE('Product', 'PRODUCT', EC.ED_PRODUCT, 'PK_PRODUCT', 'PRODUCT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Product Component', 'PRODUCT_COMPONENT', EC.ED_PRODUCT, 'PK_PRODUCT_COMPONENT', 'PRODUCT_ID', 'BEGIN_DATE', 'END_DATE', NULL);

	-- Component
	PUT_SYSTEM_TABLE('Component', 'COMPONENT', EC.ED_COMPONENT, 'PK_COMPONENT', 'COMPONENT_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Component Flat Rate', 'COMPONENT_FLAT_RATE', EC.ED_COMPONENT, 'PK_COMPONENT_FLAT_RATE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component TOU Rate', 'COMPONENT_TOU_RATE', EC.ED_COMPONENT, 'PK_COMPONENT_TOU_RATE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Percentage', 'COMPONENT_PERCENTAGE', EC.ED_COMPONENT, 'PK_COMPONENT_PERCENTAGE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Coincident Peak', 'COMPONENT_COINCIDENT_PEAK', EC.ED_COMPONENT, 'PK_COMPONENT_COINCIDENT_PEAK', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Combination', 'COMPONENT_COMBINATION', EC.ED_COMPONENT, 'PK_COMPONENT_COMBINATION', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Composite', 'COMPONENT_COMPOSITE', EC.ED_COMPONENT, 'PK_COMPONENT_BLOCK_COMPOSITE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Conversion', 'COMPONENT_CONVERSION_RATE', EC.ED_COMPONENT, 'PK_COMPONENT_CONVERSION_RATE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Imbalance', 'COMPONENT_IMBALANCE', EC.ED_COMPONENT, 'PK_COMPONENT_IMBALANCE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Market Price', 'COMPONENT_MARKET_PRICE', EC.ED_COMPONENT, 'PK_COMPONENT_MARKET_PRICE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);

	--- Component Formula Tables
	PUT_SYSTEM_TABLE('Component Formula Input', 'COMPONENT_FORMULA_INPUT', EC.ED_COMPONENT, 'PK_COMPONENT_FORMULA_INPUT', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Formula Iterator', 'COMPONENT_FORMULA_ITERATOR', EC.ED_COMPONENT, 'PK_COMPONENT_FORMULA_ITERATOR', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Formula Parameter', 'COMPONENT_FORMULA_PARAMETER', EC.ED_COMPONENT, 'PK_COMPONENT_FORMULA_PARAMETER', 'COMPONENT_ID', NULL, NULL, NULL);
	PUT_SYSTEM_TABLE('Component Formula Result', 'COMPONENT_FORMULA_RESULT', EC.ED_COMPONENT, 'PK_COMPONENT_FORMULA_RESULT', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Formula Variable', 'COMPONENT_FORMULA_VARIABLE', EC.ED_COMPONENT, 'PK_COMPONENT_FORMULA_VARIABLE', 'COMPONENT_ID', 'BEGIN_DATE', 'END_DATE', NULL);
	PUT_SYSTEM_TABLE('Component Formula Entity Ref', 'COMPONENT_FORMULA_ENTITY_REF', EC.ED_COMPONENT, 'PK_COMPONENT_FML_ENTITY_REF', 'COMPONENT_ID', NULL, NULL, NULL);

	COMMIT;
END;
/

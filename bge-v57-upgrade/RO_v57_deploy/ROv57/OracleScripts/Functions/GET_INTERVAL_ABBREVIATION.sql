CREATE OR REPLACE FUNCTION GET_INTERVAL_ABBREVIATION
	(
	p_INTERVAL VARCHAR
	)
	RETURN VARCHAR IS
--Revision: $Revision: 1.8 $

-- Answer a new date that is a specified interval later in time
v_ABBR VARCHAR(16);
BEGIN

	--THIS ALREADY IS THE ABBREVIATION.
	IF p_INTERVAL IS NULL OR p_INTERVAL IN ('MI15','MI30','DD','DY','MM','Q','YY','MI5','MI10','MI20') THEN
	   RETURN p_INTERVAL;
	END IF;
	
	v_ABBR :=
		CASE UPPER(p_INTERVAL)
			 WHEN '15 MINUTE' THEN 'MI15'
			 WHEN '30 MINUTE' THEN 'MI30'
			 WHEN 'HOUR' THEN ''
			 WHEN 'DAY' THEN 'DD'
			 WHEN 'WEEK' THEN 'DY'
			 WHEN 'MONTH' THEN 'MM'
			 WHEN 'QUARTER' THEN 'Q'
			 WHEN 'YEAR' THEN 'YY'
			 WHEN '5 MINUTE' THEN 'MI5' --LESS COMMON INTERVALS ARE AT THE END.
			 WHEN 'MINUTE5' THEN 'MI5'
			 WHEN '10 MINUTE' THEN 'MI10'
			 WHEN 'MINUTE10' THEN 'MI10'
			 WHEN 'MINUTE15' THEN 'MI15'
			 WHEN '20 MINUTE' THEN 'MI20'
			 WHEN 'MINUTE20' THEN 'MI20'
			 WHEN 'MINUTE30' THEN 'MI30'
			 WHEN 'HH' THEN ''
			 ELSE p_INTERVAL
		END;
		
	RETURN v_ABBR;

EXCEPTION
	WHEN OTHERS THEN RETURN NULL; --ASSUME HOURLY
	
END GET_INTERVAL_ABBREVIATION;
/

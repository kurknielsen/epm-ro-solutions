CREATE OR REPLACE VIEW BACKGROUND_JOBS AS
SELECT D.ACTION_CHAIN_NAME CONTEXT_NAME,
	   D.ACTION_DISPLAY_NAME,
	   NVL(CHILD_PROCESS.USER_ID, D.USER_ID) as USER_ID,
	   D.JOB_THREAD_ID,
	   D.NOTIFICATION_EMAIL_ADDRESS,
	   CHILD_PROCESS.PROCESS_NAME,
	   CHILD_PROCESS.PROGRESS_SOFAR / CHILD_PROCESS.PROGRESS_TOTALWORK AS PROGRESS,
	   CHILD_PROCESS.PROGRESS_DESCRIPTION,
	   ((CHILD_PROCESS.PROGRESS_TOTALWORK * (CHILD_PROCESS.PROGRESS_LAST_UPDATE - CHILD_PROCESS.PROCESS_START_TIME)) / CHILD_PROCESS.PROGRESS_SOFAR) + CHILD_PROCESS.PROCESS_START_TIME AS EXPECTED_COMPLETION,
	   CHILD_PROCESS.PROCESS_STATUS,
	   CHILD_PROCESS.WAS_TERMINATED,
	   J.*
FROM (SELECT JOBS.*,
			CASE WHEN JOBS.FROM_LOG=1 OR JOBS.STATE IN ('ENABLED','RUNNING') THEN -- get latest instance of the job from process log
					(SELECT P.PROCESS_ID
					 FROM PROCESS_LOG P
					 WHERE P.JOB_NAME = JOBS.JOB_NAME
					 	AND P.PROCESS_ID = (SELECT MAX(P2.PROCESS_ID)
											FROM PROCESS_LOG P2
											WHERE P2.JOB_NAME = P.JOB_NAME))
				ELSE NULL -- don't bother getting process ID for disabled or scheduled jobs
				END as PROCESS_ID
	  FROM (-- Get both current jobs and any dropped jobs that have instances in the job log
	  		SELECT JOBS.JOB_NAME, JOBS.JOB_SUBNAME, JOBS.JOB_CREATOR, JOBS.CLIENT_ID, JOBS.GLOBAL_UID, JOBS.PROGRAM_OWNER,
				JOBS.PROGRAM_NAME, JOBS.JOB_TYPE, JOBS.JOB_ACTION, JOBS.NUMBER_OF_ARGUMENTS, JOBS.SCHEDULE_OWNER, JOBS.SCHEDULE_NAME,
				JOBS.SCHEDULE_TYPE, JOBS.START_DATE, JOBS.REPEAT_INTERVAL, JOBS.EVENT_QUEUE_OWNER, JOBS.EVENT_QUEUE_NAME,
				JOBS.EVENT_QUEUE_AGENT, JOBS.EVENT_CONDITION, JOBS.EVENT_RULE, JOBS.END_DATE, JOBS.JOB_CLASS, JOBS.ENABLED,
				JOBS.AUTO_DROP, JOBS.RESTARTABLE, JOBS.STATE, JOBS.JOB_PRIORITY, JOBS.RUN_COUNT, JOBS.MAX_RUNS, JOBS.FAILURE_COUNT,
				JOBS.MAX_FAILURES, JOBS.RETRY_COUNT, JOBS.LAST_START_DATE, JOBS.LAST_RUN_DURATION, JOBS.NEXT_RUN_DATE, JOBS.SCHEDULE_LIMIT,
				JOBS.MAX_RUN_DURATION, JOBS.LOGGING_LEVEL, JOBS.STOP_ON_WINDOW_CLOSE, JOBS.INSTANCE_STICKINESS, JOBS.RAISE_EVENTS,
				JOBS.SYSTEM, JOBS.JOB_WEIGHT, JOBS.NLS_ENV, JOBS.SOURCE, JOBS.DESTINATION, JOBS.COMMENTS, JOBS.FLAGS,
				0 as FROM_LOG
			FROM USER_SCHEDULER_JOBS JOBS
			UNION ALL
			SELECT JOB_NAME, 
				JOB_SUBNAME, 
				OWNER, --JOB_CREATOR, 
				CLIENT_ID, 
				GLOBAL_UID, 
				NULL, --PROGRAM_OWNER, 
				NULL, --PROGRAM_NAME, 
				NULL, --JOB_TYPE, 
				NULL, --JOB_ACTION, 
				NULL, --NUMBER_OF_ARGUMENTS, 
				NULL, --SCHEDULE_OWNER, 
				NULL, --SCHEDULE_NAME, 
				NULL, --SCHEDULE_TYPE, 
				NULL, --START_DATE, 
				NULL, --REPEAT_INTERVAL, 
				NULL, --EVENT_QUEUE_OWNER, 
				NULL, --EVENT_QUEUE_NAME, 
				NULL, --EVENT_QUEUE_AGENT, 
				NULL, --EVENT_CONDITION, 
				NULL, --EVENT_RULE, 
				NULL, --END_DATE, 
				JOB_CLASS, 
				NULL, --ENABLED, 
				NULL, --AUTO_DROP, 
				NULL, --RESTARTABLE, 
				STATUS, -- STATE
				NULL, --JOB_PRIORITY, 
				NULL, --RUN_COUNT, 
				NULL, --MAX_RUNS, 
				NULL, --FAILURE_COUNT, 
				NULL, --MAX_FAILURES, 
				NULL, --RETRY_COUNT, 
				NULL, --LAST_START_DATE, 
				NULL, --LAST_RUN_DURATION, 
				NULL, --NEXT_RUN_DATE, 
				NULL, --SCHEDULE_LIMIT, 
				NULL, --MAX_RUN_DURATION, 
				NULL, --LOGGING_LEVEL, 
				NULL, --STOP_ON_WINDOW_CLOSE, 
				NULL, --INSTANCE_STICKINESS, 
				NULL, --RAISE_EVENTS, 
				NULL, --SYSTEM, 
				NULL, --JOB_WEIGHT, 
				NULL, --NLS_ENV, 
				NULL, --SOURCE, 
				NULL, --DESTINATION, 
				NULL, --COMMENTS, 
				NULL, --FLAGS
				1 -- FROM_LOG
			FROM USER_SCHEDULER_JOB_LOG LOG
			WHERE OPERATION = 'RUN'
				AND NOT EXISTS (SELECT 1 FROM USER_SCHEDULER_JOBS J WHERE J.JOB_NAME = LOG.JOB_NAME)
				AND LOG_DATE = (SELECT MAX(LOG_DATE)
								FROM USER_SCHEDULER_JOB_LOG L2
								WHERE L2.JOB_NAME = LOG.JOB_NAME
									AND L2.OPERATION = 'RUN')
			) JOBS
	  ) J,
	 JOB_DATA D,
	 PROCESS_LOG CHILD_PROCESS
WHERE CHILD_PROCESS.PROCESS_ID (+) = J.PROCESS_ID
  AND UPPER(TRIM(D.JOB_NAME (+))) = UPPER(TRIM(J.JOB_NAME));
